/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:18:42 GMT 2019
 */

package com.wrapper.spotify.model_objects.miscellaneous;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.google.gson.JsonObject;
import com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisMeasure;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AudioAnalysisMeasure_ESTest extends AudioAnalysisMeasure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(0.0F);
      audioAnalysisMeasure_Builder0.setStart(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder0.build();
      Float float1 = audioAnalysisMeasure0.getStart();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float((-3208.7133582263036));
      audioAnalysisMeasure_Builder0.setStart(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder0.build();
      Float float1 = audioAnalysisMeasure0.getStart();
      assertEquals((-3208.7134F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(158.0);
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder1 = audioAnalysisMeasure_Builder0.setStart(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder1.build();
      Float float1 = audioAnalysisMeasure0.getStart();
      assertEquals(158.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(0.0);
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder1 = audioAnalysisMeasure_Builder0.setDuration(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder1.build();
      Float float1 = audioAnalysisMeasure0.getDuration();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(3389.669673015225);
      audioAnalysisMeasure_Builder0.setDuration(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder0.build();
      Float float1 = audioAnalysisMeasure0.getDuration();
      assertEquals(3389.6697F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float((-1.0));
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder1 = audioAnalysisMeasure_Builder0.setDuration(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder1.build();
      Float float1 = audioAnalysisMeasure0.getDuration();
      assertEquals((-1.0F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float((-3208.7133582263036));
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder1 = audioAnalysisMeasure_Builder0.setConfidence(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder1.build();
      Float float1 = audioAnalysisMeasure0.getConfidence();
      assertEquals((-3208.7134F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(0.0);
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder1 = audioAnalysisMeasure_Builder0.setConfidence(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder1.build();
      Float float1 = audioAnalysisMeasure0.getConfidence();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(3389.669673015225);
      audioAnalysisMeasure_Builder0.setConfidence(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder0.build();
      Float float1 = audioAnalysisMeasure0.getConfidence();
      assertEquals(3389.6697F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = new AudioAnalysisMeasure.Builder();
      Float float0 = new Float(1925.09663443381);
      audioAnalysisMeasure_Builder0.setConfidence(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_Builder0.build();
      Float float1 = audioAnalysisMeasure0.getConfidence();
      assertEquals(1925.0967F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudioAnalysisMeasure.JsonUtil audioAnalysisMeasure_JsonUtil0 = new AudioAnalysisMeasure.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_JsonUtil0.createModelObject(jsonObject0);
      assertNull(audioAnalysisMeasure0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudioAnalysisMeasure.JsonUtil audioAnalysisMeasure_JsonUtil0 = new AudioAnalysisMeasure.JsonUtil();
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(audioAnalysisMeasure0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudioAnalysisMeasure.JsonUtil audioAnalysisMeasure_JsonUtil0 = new AudioAnalysisMeasure.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_JsonUtil0.createModelObject(jsonObject0);
      Float float0 = audioAnalysisMeasure0.getConfidence();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudioAnalysisMeasure.JsonUtil audioAnalysisMeasure_JsonUtil0 = new AudioAnalysisMeasure.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeasure.Builder audioAnalysisMeasure_Builder0 = audioAnalysisMeasure0.builder();
      assertNotNull(audioAnalysisMeasure_Builder0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudioAnalysisMeasure.JsonUtil audioAnalysisMeasure_JsonUtil0 = new AudioAnalysisMeasure.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_JsonUtil0.createModelObject(jsonObject0);
      Float float0 = audioAnalysisMeasure0.getDuration();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudioAnalysisMeasure.JsonUtil audioAnalysisMeasure_JsonUtil0 = new AudioAnalysisMeasure.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisMeasure_JsonUtil0.createModelObject(jsonObject0);
      Float float0 = audioAnalysisMeasure0.getStart();
      assertNull(float0);
  }
}
