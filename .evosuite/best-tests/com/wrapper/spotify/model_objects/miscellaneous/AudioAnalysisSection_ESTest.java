/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:20:33 GMT 2019
 */

package com.wrapper.spotify.model_objects.miscellaneous;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.wrapper.spotify.enums.Modality;
import com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisMeasure;
import com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisSection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AudioAnalysisSection_ESTest extends AudioAnalysisSection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float((-1.0F));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setLoudness(float0);
      Float float1 = new Float((-1.0F));
      Float float2 = new Float((-1.0F));
      audioAnalysisSection_Builder1.setTempoConfidence(float2);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setModeConfidence(float1);
      audioAnalysisSection_Builder2.setTimeSignature((Integer) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMeasure((AudioAnalysisMeasure) null);
      Integer integer0 = new Integer(2418);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setKey(integer0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder4.build();
      Float float3 = new Float(0.0F);
      audioAnalysisSection_Builder4.setTimeSignatureConfidence(float3);
      audioAnalysisSection0.getTimeSignatureConfidence();
      audioAnalysisSection0.getTempo();
      audioAnalysisSection0.getTempo();
      Float float4 = audioAnalysisSection0.getLoudness();
      Float float5 = audioAnalysisSection0.getTempoConfidence();
      assertEquals((float)float5, (float)float4, 0.01F);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(1.0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setModeConfidence(float0);
      Float float1 = new Float(0.0);
      audioAnalysisSection_Builder1.setLoudness(float1);
      Float float2 = new Float(4121.819874041);
      Integer integer0 = new Integer((-1));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTimeSignature(integer0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTimeSignatureConfidence(float0);
      Integer integer1 = new Integer((-1));
      audioAnalysisSection_Builder0.setTimeSignature(integer1);
      Float float3 = new Float(1323.21492);
      audioAnalysisSection_Builder3.setTimeSignatureConfidence(float3);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder3.build();
      Float float4 = audioAnalysisSection0.getTimeSignatureConfidence();
      assertEquals(1323.215F, (float)float4, 0.01F);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(1810.1543F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempo(float0);
      Float float1 = new Float(1810.1543F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setKeyConfidence(float1);
      Float float2 = new Float((double) 1810.1543F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setModeConfidence(float2);
      Integer integer0 = new Integer((-2167));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setKey(integer0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder4.build();
      Integer integer1 = audioAnalysisSection0.getKey();
      assertEquals((-2167), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Modality modality0 = Modality.MAJOR;
      audioAnalysisSection_Builder0.setMode(modality0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.builder();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      assertNull(audioAnalysisSection1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempo(float0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder1.build();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection0.builder();
      audioAnalysisSection_Builder1.setTempoConfidence(float0);
      audioAnalysisSection_Builder2.build();
      Integer integer0 = new Integer(121);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTimeSignature(integer0);
      Float float1 = new Float((double) 0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTempoConfidence(float1);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder4.build();
      Integer integer1 = new Integer(0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setTimeSignature(integer1);
      Float float2 = new Float((double) 121);
      audioAnalysisSection_Builder1.setTempo(float1);
      audioAnalysisSection_Builder4.setModeConfidence(float2);
      audioAnalysisSection0.getTempoConfidence();
      audioAnalysisSection0.getTempo();
      audioAnalysisSection_Builder5.setModeConfidence((Float) null);
      audioAnalysisSection1.getMeasure();
      audioAnalysisSection_Builder5.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder4.setTempo(float1);
      audioAnalysisSection1.getTimeSignatureConfidence();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder7 = audioAnalysisSection_Builder1.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSection_Builder6.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSection0.builder();
      audioAnalysisSection0.getMeasure();
      audioAnalysisSection0.getMeasure();
      audioAnalysisSection_Builder2.setTimeSignatureConfidence((Float) null);
      Integer integer2 = new Integer(0);
      audioAnalysisSection_Builder7.setTimeSignature(integer2);
      audioAnalysisSection1.getTimeSignature();
      Float float3 = audioAnalysisSection0.getTempoConfidence();
      assertNull(float3);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float((-1211.9846084376263));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setLoudness(float0);
      Integer integer0 = new Integer(0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setKey(integer0);
      Float float1 = new Float(1111.7512F);
      audioAnalysisSection_Builder1.setKeyConfidence(float1);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTimeSignature(integer0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setKeyConfidence(float0);
      Float float2 = new Float((float) 0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setTempo(float2);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder5.setTimeSignature(integer0);
      Float float3 = new Float((float) 0);
      audioAnalysisSection_Builder3.setModeConfidence(float1);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder7 = audioAnalysisSection_Builder5.setModeConfidence(float3);
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder8 = audioAnalysisSection_Builder6.setTimeSignature(integer0);
      audioAnalysisSection_Builder8.setLoudness(float2);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder5.build();
      audioAnalysisSection0.getLoudness();
      audioAnalysisSection_Builder7.setLoudness(float0);
      Float float4 = audioAnalysisSection0.getKeyConfidence();
      audioAnalysisSection0.builder();
      audioAnalysisSection_Builder1.setTempo(float4);
      audioAnalysisSection0.getMode();
      audioAnalysisSection0.getTempoConfidence();
      Float float5 = audioAnalysisSection0.getModeConfidence();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder9 = audioAnalysisSection_Builder1.setTimeSignatureConfidence(float5);
      assertSame(audioAnalysisSection_Builder5, audioAnalysisSection_Builder9);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection0.getMeasure();
      audioAnalysisSection_Builder0.setMeasure(audioAnalysisMeasure0);
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject1).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject1).has(anyString());
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject1);
      AudioAnalysisMeasure audioAnalysisMeasure1 = audioAnalysisSection1.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setMeasure(audioAnalysisMeasure1);
      Modality modality0 = Modality.MAJOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setMode(modality0);
      Float float0 = new Float(1.0F);
      audioAnalysisSection_Builder2.setModeConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setKeyConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTempoConfidence(float0);
      Float float1 = new Float((-2143.602F));
      audioAnalysisSection_Builder4.setKeyConfidence(float1);
      audioAnalysisSection_Builder3.setTempo(float1);
      AudioAnalysisSection audioAnalysisSection2 = audioAnalysisSection_Builder4.build();
      audioAnalysisSection_Builder4.setTimeSignatureConfidence(float0);
      audioAnalysisSection2.getModeConfidence();
      audioAnalysisSection2.getTimeSignature();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder2.setLoudness(float1);
      audioAnalysisSection_Builder4.build();
      audioAnalysisSection_Builder3.setMeasure(audioAnalysisMeasure1);
      audioAnalysisSection2.getTempo();
      audioAnalysisSection2.getMeasure();
      JsonObject jsonObject2 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject2).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject2).has(anyString());
      audioAnalysisSection_JsonUtil0.createModelObject(jsonObject2);
      Float float2 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder5.setTempoConfidence(float2);
      assertSame(audioAnalysisSection_Builder2, audioAnalysisSection_Builder6);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float((-1.0));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempoConfidence(float0);
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection0.getMeasure();
      Modality modality0 = Modality.MAJOR;
      audioAnalysisSection_Builder1.setMode(modality0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setMeasure(audioAnalysisMeasure0);
      audioAnalysisSection_Builder2.setKey((Integer) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setKey((Integer) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTimeSignature((Integer) null);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder3.build();
      audioAnalysisSection0.builder();
      audioAnalysisSection1.builder();
      AudioAnalysisSection audioAnalysisSection2 = audioAnalysisSection_Builder4.build();
      audioAnalysisSection2.builder();
      audioAnalysisSection2.getTimeSignature();
      audioAnalysisSection_Builder0.setModeConfidence(float0);
      Float float1 = audioAnalysisSection2.getTempoConfidence();
      assertEquals((-1.0F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempo((Float) null);
      audioAnalysisSection_Builder1.setModeConfidence((Float) null);
      Integer integer0 = new Integer((-386));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTimeSignature(integer0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder2.build();
      audioAnalysisSection_Builder0.setModeConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setKeyConfidence((Float) null);
      audioAnalysisSection0.builder();
      audioAnalysisSection0.getKeyConfidence();
      audioAnalysisSection_Builder2.setLoudness((Float) null);
      Float float0 = new Float(0.0);
      audioAnalysisSection0.getMeasure();
      audioAnalysisSection_Builder1.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSection_Builder2.setTimeSignatureConfidence((Float) null);
      audioAnalysisSection_Builder1.setModeConfidence(float0);
      audioAnalysisSection0.getKey();
      audioAnalysisSection0.getLoudness();
      Float float1 = new Float(0.0F);
      audioAnalysisSection0.builder();
      audioAnalysisSection_Builder2.setLoudness(float1);
      audioAnalysisSection0.getKey();
      audioAnalysisSection0.getMode();
      Float float2 = new Float((float) (-386));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTempoConfidence(float2);
      audioAnalysisSection_Builder4.setModeConfidence((Float) null);
      audioAnalysisSection0.getTimeSignature();
      audioAnalysisSection0.getMode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(1707.034603);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setKeyConfidence(float0);
      Float float1 = new Float((-217.81438613883));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTempo(float1);
      Modality modality0 = Modality.MAJOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMode(modality0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder3.build();
      audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder1.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder3.setTimeSignatureConfidence(float1);
      audioAnalysisSection_Builder2.setModeConfidence(float0);
      audioAnalysisSection_Builder2.setMode(modality0);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder5.build();
      audioAnalysisSection1.getMode();
      AudioAnalysisSection audioAnalysisSection2 = audioAnalysisSection_Builder5.build();
      Float float2 = new Float((-2341.0F));
      audioAnalysisSection_Builder3.setKeyConfidence(float2);
      audioAnalysisSection1.builder();
      AudioAnalysisSection audioAnalysisSection3 = audioAnalysisSection_Builder4.build();
      Integer integer0 = new Integer(0);
      audioAnalysisSection_Builder1.setKey(integer0);
      audioAnalysisSection_Builder5.build();
      audioAnalysisSection3.getMeasure();
      audioAnalysisSection_Builder4.setTimeSignatureConfidence(float2);
      audioAnalysisSection2.getTempoConfidence();
      audioAnalysisSection3.getLoudness();
      audioAnalysisSection_Builder3.setLoudness(float0);
      audioAnalysisSection_Builder3.setMode(modality0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection3.builder();
      assertNotSame(audioAnalysisSection_Builder0, audioAnalysisSection_Builder6);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float((-1253.798917016848));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setKeyConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setModeConfidence(float0);
      Float float1 = new Float((-1.0F));
      audioAnalysisSection_Builder1.setTempoConfidence(float1);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder2.build();
      Float float2 = new Float((double) (-1.0F));
      audioAnalysisSection_Builder0.setLoudness(float2);
      audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setLoudness(float0);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder3.build();
      audioAnalysisSection_Builder3.setTimeSignature((Integer) null);
      audioAnalysisSection0.getTempo();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setTempoConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder5.setTempoConfidence((Float) null);
      AudioAnalysisSection audioAnalysisSection2 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection1.builder();
      audioAnalysisSection0.builder();
      audioAnalysisSection_Builder6.setTimeSignature((Integer) null);
      audioAnalysisSection0.getTimeSignatureConfidence();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder7 = audioAnalysisSection0.builder();
      audioAnalysisSection_Builder1.setModeConfidence(float1);
      audioAnalysisSection1.getTempo();
      audioAnalysisSection2.getModeConfidence();
      Float float3 = new Float((-1.0F));
      audioAnalysisSection_Builder7.setKeyConfidence(float3);
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      Float float4 = audioAnalysisSection1.getTimeSignatureConfidence();
      assertNull(float4);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(363.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setModeConfidence(float0);
      Float float1 = new Float(363.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTempo(float1);
      Modality modality0 = Modality.MINOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMode(modality0);
      Integer integer0 = new Integer((-1053));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTimeSignature(integer0);
      Float float2 = new Float((-1.0F));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setLoudness(float2);
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder3.build();
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSection1.builder();
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection1.getMeasure();
      audioAnalysisSection_Builder5.setMeasure(audioAnalysisMeasure0);
      audioAnalysisSection1.getMode();
      audioAnalysisSection0.getTempo();
      Integer integer1 = audioAnalysisSection0.getTimeSignature();
      assertEquals((-1053), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float((-905.635679));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setModeConfidence(float0);
      Integer integer0 = new Integer(0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setKey(integer0);
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMeasure(audioAnalysisMeasure0);
      Float float1 = new Float(1.0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setKeyConfidence(float1);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder4.build();
      Integer integer1 = audioAnalysisSection1.getKey();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Modality modality0 = Modality.MINOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setMode(modality0);
      Integer integer0 = new Integer(1663);
      audioAnalysisSection_Builder1.setTimeSignature(integer0);
      Float float0 = new Float(0.0F);
      audioAnalysisSection_Builder1.setTimeSignatureConfidence(float0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.builder();
      audioAnalysisSection0.getMode();
      Float float1 = audioAnalysisSection0.getTimeSignatureConfidence();
      audioAnalysisSection_Builder0.setTempo(float1);
      audioAnalysisSection_Builder0.setMode(modality0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection0.builder();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTempoConfidence(float0);
      assertNotSame(audioAnalysisSection_Builder3, audioAnalysisSection_Builder1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setMeasure(audioAnalysisMeasure0);
      Float float0 = new Float(1.0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTempo(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setKeyConfidence(float0);
      Integer integer0 = new Integer(12);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTimeSignature(integer0);
      Integer integer1 = new Integer(12);
      audioAnalysisSection_Builder3.setKey(integer1);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder4.build();
      audioAnalysisSection1.getMeasure();
      audioAnalysisSection1.getTempo();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder3.setTimeSignature(integer1);
      Float float1 = new Float((-1.0F));
      audioAnalysisSection_Builder3.setKeyConfidence(float1);
      audioAnalysisSection0.getModeConfidence();
      audioAnalysisSection1.getLoudness();
      Float float2 = audioAnalysisSection1.getKeyConfidence();
      audioAnalysisSection1.getMode();
      audioAnalysisSection0.builder();
      AudioAnalysisSection audioAnalysisSection2 = audioAnalysisSection_Builder5.build();
      audioAnalysisSection0.getMeasure();
      audioAnalysisSection1.builder();
      Float float3 = new Float(0.0F);
      audioAnalysisSection_Builder0.setLoudness(float3);
      audioAnalysisSection0.getMeasure();
      Float float4 = audioAnalysisSection2.getKeyConfidence();
      assertNotEquals((float)float4, (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Integer integer0 = new Integer(0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTimeSignature(integer0);
      Float float0 = new Float(3056.22600878863);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setLoudness(float0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMeasure((AudioAnalysisMeasure) null);
      Integer integer1 = new Integer(1);
      audioAnalysisSection_Builder2.setTimeSignatureConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setKey(integer1);
      audioAnalysisSection0.builder();
      audioAnalysisSection_Builder3.setModeConfidence((Float) null);
      Float float1 = new Float((float) 1);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setModeConfidence(float1);
      audioAnalysisSection_Builder5.setKeyConfidence(float1);
      audioAnalysisSection0.builder();
      Integer integer2 = new Integer(1);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder0.setKey(integer2);
      audioAnalysisSection0.getTimeSignature();
      audioAnalysisSection0.getTempoConfidence();
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder5.build();
      audioAnalysisSection1.getKey();
      audioAnalysisSection1.getModeConfidence();
      audioAnalysisSection0.getTimeSignatureConfidence();
      Float float2 = audioAnalysisSection1.getLoudness();
      audioAnalysisSection_Builder3.setLoudness(float2);
      audioAnalysisSection_Builder6.setTimeSignatureConfidence((Float) null);
      audioAnalysisSection1.builder();
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      audioAnalysisSection_JsonUtil0.createModelObject((JsonObject) null);
      Float float3 = audioAnalysisSection0.getTempo();
      assertNull(float3);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      int int0 = 996;
      Integer integer0 = new Integer(996);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTimeSignature(integer0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setKey(integer0);
      audioAnalysisSection_Builder0.setTempo((Float) null);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder2.build();
      audioAnalysisSection0.getKey();
      Float float0 = new Float(1.0);
      audioAnalysisSection_Builder1.setTempo(float0);
      audioAnalysisSection_Builder0.setModeConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setModeConfidence((Float) null);
      audioAnalysisSection0.getTimeSignatureConfidence();
      audioAnalysisSection0.builder();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setKeyConfidence((Float) null);
      audioAnalysisSection0.getKeyConfidence();
      Float float1 = new Float((-3853.191F));
      audioAnalysisSection_Builder4.setTempoConfidence(float1);
      audioAnalysisSection0.getTimeSignatureConfidence();
      audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      // Undeclared exception!
      try { 
        audioAnalysisSection_JsonUtil0.createModelObjectPagingCursorbased("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: null
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempoConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setLoudness(float0);
      Float float1 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTempo(float1);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setTimeSignatureConfidence(float1);
      Float float2 = audioAnalysisSection0.getTempo();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder5.setTimeSignatureConfidence(float2);
      assertSame(audioAnalysisSection_Builder5, audioAnalysisSection_Builder6);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      Float float0 = audioAnalysisSection0.getTempoConfidence();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setModeConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTimeSignatureConfidence((Float) null);
      Float float0 = new Float(1446.2F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setKeyConfidence(float0);
      Float float1 = new Float(2413.0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTempoConfidence(float1);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder4.build();
      audioAnalysisSection0.getKey();
      audioAnalysisSection0.getTimeSignatureConfidence();
      audioAnalysisSection0.getMode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempo(float0);
      Modality modality0 = Modality.MINOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setKeyConfidence(float0);
      audioAnalysisSection_Builder1.build();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder1.setMode(modality0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder3.build();
      audioAnalysisSection0.builder();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection0.builder();
      Float float1 = new Float((double) 0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder4.setModeConfidence(float1);
      audioAnalysisSection_Builder1.setTempo(float1);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder6 = audioAnalysisSection_Builder5.setTempo(float1);
      audioAnalysisSection_Builder6.setMode(modality0);
      audioAnalysisSection_Builder6.setKeyConfidence(float1);
      audioAnalysisSection0.getTimeSignatureConfidence();
      audioAnalysisSection0.getKey();
      audioAnalysisSection0.getKeyConfidence();
      audioAnalysisSection0.getMeasure();
      audioAnalysisSection_Builder2.setKeyConfidence(float0);
      Float float2 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder7 = audioAnalysisSection_Builder2.setTempoConfidence(float2);
      assertNotSame(audioAnalysisSection_Builder7, audioAnalysisSection_Builder6);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.getModeConfidence();
      Integer integer0 = new Integer(0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setKey(integer0);
      Modality modality0 = Modality.MAJOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder0.setMode(modality0);
      audioAnalysisSection_Builder2.setKeyConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTimeSignatureConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTempoConfidence((Float) null);
      audioAnalysisSection0.getKeyConfidence();
      audioAnalysisSection_Builder0.setTimeSignatureConfidence((Float) null);
      Float float0 = new Float((float) 0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder5 = audioAnalysisSection_Builder1.setLoudness(float0);
      assertSame(audioAnalysisSection_Builder5, audioAnalysisSection_Builder4);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.getTempo();
      audioAnalysisSection_Builder0.setModeConfidence((Float) null);
      audioAnalysisSection_Builder0.setTempoConfidence((Float) null);
      Float float0 = new Float((-498.0));
      audioAnalysisSection0.builder();
      Modality modality0 = Modality.MINOR;
      audioAnalysisSection_Builder0.setMode(modality0);
      audioAnalysisSection0.builder();
      audioAnalysisSection_Builder0.setTempo(float0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection0.getMeasure();
      assertNull(audioAnalysisMeasure0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(93.4F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempoConfidence(float0);
      Float float1 = new Float((-1721.4276F));
      audioAnalysisSection_Builder1.setTempo(float1);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.builder();
      audioAnalysisSection0.getLoudness();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setTimeSignature((Integer) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder0.setModeConfidence(float1);
      assertSame(audioAnalysisSection_Builder3, audioAnalysisSection_Builder2);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(1379.08841);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setModeConfidence(float0);
      Float float1 = new Float((-47.0F));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setLoudness(float1);
      Modality modality0 = Modality.MAJOR;
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setMode(modality0);
      Float float2 = new Float((-1.0));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTempoConfidence(float2);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder4.build();
      Float float3 = audioAnalysisSection0.getModeConfidence();
      assertEquals(1379.0884F, (float)float3, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Float float0 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setTempoConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setLoudness(float0);
      Integer integer0 = new Integer(10);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTimeSignature(integer0);
      assertSame(audioAnalysisSection_Builder0, audioAnalysisSection_Builder3);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Integer integer0 = new Integer(0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setKey(integer0);
      Float float0 = new Float(0.0F);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setLoudness(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTempoConfidence(float0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setTimeSignatureConfidence(float0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder4.build();
      audioAnalysisSection0.getTempoConfidence();
      Float float1 = audioAnalysisSection0.getTempo();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Integer integer0 = new Integer(296);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setKey(integer0);
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSection0.getTempo();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setModeConfidence((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder2.setTempo((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder4 = audioAnalysisSection_Builder3.setLoudness((Float) null);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_Builder4.build();
      Float float0 = audioAnalysisSection1.getModeConfidence();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = audioAnalysisSection0.builder();
      Modality modality0 = Modality.MAJOR;
      audioAnalysisSection_Builder0.setMode(modality0);
      audioAnalysisSection_Builder0.setKey((Integer) null);
      Float float0 = audioAnalysisSection0.getTempoConfidence();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = new AudioAnalysisSection.Builder();
      Integer integer0 = new Integer(1283);
      audioAnalysisSection_Builder0.setKey(integer0);
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_Builder0.build();
      audioAnalysisSection0.builder();
      audioAnalysisSection0.builder();
      Float float0 = new Float((-1.0));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setLoudness(float0);
      audioAnalysisSection0.getKey();
      audioAnalysisSection0.getKeyConfidence();
      audioAnalysisSection0.getMeasure();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder0.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSection_Builder2.setTempo((Float) null);
      audioAnalysisSection_Builder2.setModeConfidence(float0);
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSection1.getLoudness();
      Float float1 = new Float((-1.0));
      AudioAnalysisSection.Builder audioAnalysisSection_Builder3 = audioAnalysisSection_Builder1.setKeyConfidence(float1);
      assertSame(audioAnalysisSection_Builder1, audioAnalysisSection_Builder3);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject1).isJsonNull();
      doReturn((JsonElement) null).when(jsonObject1).get(anyString());
      doReturn(true).when(jsonObject1).has(anyString());
      // Undeclared exception!
      try { 
        audioAnalysisSection_JsonUtil0.createModelObject(jsonObject1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.AbstractModelObject$JsonUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonElement0).isJsonNull();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(jsonElement0, (JsonElement) null).when(jsonObject0).get(anyString());
      doReturn(true).when(jsonObject0).has(anyString());
      // Undeclared exception!
      try { 
        audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisSection$JsonUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSection0.builder();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = audioAnalysisSection0.builder();
      audioAnalysisSection0.getTimeSignatureConfidence();
      Integer integer0 = new Integer(0);
      audioAnalysisSection_Builder0.setKey(integer0);
      audioAnalysisSection_Builder0.setLoudness((Float) null);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder1 = audioAnalysisSection_Builder0.setKey((Integer) null);
      audioAnalysisSection0.getKey();
      audioAnalysisSection0.getTempoConfidence();
      AudioAnalysisSection.Builder audioAnalysisSection_Builder2 = audioAnalysisSection_Builder1.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSection0.getTimeSignature();
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSection0.getMeasure();
      audioAnalysisSection_Builder0.setMeasure(audioAnalysisMeasure0);
      audioAnalysisSection_Builder0.setTimeSignatureConfidence((Float) null);
      audioAnalysisSection_Builder1.setKeyConfidence((Float) null);
      audioAnalysisSection0.getTempoConfidence();
      audioAnalysisSection0.getTimeSignatureConfidence();
      Modality modality0 = Modality.MAJOR;
      audioAnalysisSection_Builder2.setMode(modality0);
      Float float0 = audioAnalysisSection0.getTempoConfidence();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      audioAnalysisSection0.builder();
      // Undeclared exception!
      try { 
        audioAnalysisSection_JsonUtil0.createModelObjectArray("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Array: null
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AudioAnalysisSection.JsonUtil audioAnalysisSection_JsonUtil0 = new AudioAnalysisSection.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSection audioAnalysisSection0 = audioAnalysisSection_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisSection.Builder audioAnalysisSection_Builder0 = audioAnalysisSection0.builder();
      audioAnalysisSection0.getKeyConfidence();
      audioAnalysisSection_Builder0.setTimeSignatureConfidence((Float) null);
      AudioAnalysisSection audioAnalysisSection1 = audioAnalysisSection_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(audioAnalysisSection1);
  }
}
