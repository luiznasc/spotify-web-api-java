/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 21:47:56 GMT 2019
 */

package com.wrapper.spotify.model_objects.miscellaneous;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisMeasure;
import com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisSegment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AudioAnalysisSegment_ESTest extends AudioAnalysisSegment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[3];
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.getLoudnessEnd();
      audioAnalysisSegment_Builder0.setLoudnessMax((Float) null);
      floatArray0[1] = 2890.9277F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      Float float0 = new Float(0.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessStart(float0);
      audioAnalysisSegment_Builder2.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment0.builder();
      audioAnalysisSegment_Builder1.setLoudnessMaxTime(float0);
      audioAnalysisSegment_Builder3.setPitches(floatArray0);
      audioAnalysisSegment0.getLoudnessStart();
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment_Builder3.setTimbre(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment2 = audioAnalysisSegment_Builder1.build();
      audioAnalysisSegment1.getLoudnessEnd();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder1.setTimbre(floatArray0);
      audioAnalysisSegment1.builder();
      audioAnalysisSegment1.builder();
      audioAnalysisSegment2.getLoudnessStart();
      audioAnalysisSegment_Builder1.setLoudnessEnd((Float) 0.0F);
      audioAnalysisSegment1.getPitches();
      Float float1 = new Float((double) 2890.9277F);
      audioAnalysisSegment_Builder4.setLoudnessMaxTime(float1);
      Float float2 = new Float((-596.803323954259));
      audioAnalysisSegment_Builder0.setLoudnessStart(float2);
      audioAnalysisSegment0.getLoudnessMaxTime();
      audioAnalysisSegment0.getLoudnessEnd();
      Float float3 = audioAnalysisSegment1.getLoudnessMax();
      assertNull(float3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[0];
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setPitches(floatArray0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSegment0.getLoudnessMax();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessEnd((Float) null);
      audioAnalysisSegment_Builder3.setMeasure((AudioAnalysisMeasure) null);
      Float float0 = new Float(1.0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setLoudnessStart(float0);
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder4.build();
      audioAnalysisSegment1.getLoudnessEnd();
      audioAnalysisSegment0.getPitches();
      audioAnalysisSegment0.getLoudnessEnd();
      audioAnalysisSegment0.getLoudnessMax();
      audioAnalysisSegment0.getLoudnessMax();
      audioAnalysisSegment1.getLoudnessMaxTime();
      audioAnalysisSegment1.getPitches();
      audioAnalysisSegment1.getLoudnessMax();
      audioAnalysisSegment0.getLoudnessMax();
      audioAnalysisSegment1.getLoudnessMaxTime();
      float[] floatArray1 = audioAnalysisSegment1.getPitches();
      assertSame(floatArray0, floatArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      assertNull(audioAnalysisSegment0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[3];
      floatArray0[0] = 0.0F;
      audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      floatArray0[1] = (-1.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMaxTime((Float) 0.0F);
      floatArray0[2] = 1.0F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder0.setPitches(floatArray0);
      Float float0 = new Float((double) 0.0F);
      Float float1 = new Float((double) 1.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessMax(float1);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder2.setLoudnessStart(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder3.build();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment_Builder2.setPitches(floatArray0);
      audioAnalysisSegment_Builder1.setLoudnessMaxTime(float1);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder2.setTimbre(floatArray0);
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder6 = audioAnalysisSegment1.builder();
      audioAnalysisSegment1.getLoudnessStart();
      AudioAnalysisSegment audioAnalysisSegment2 = audioAnalysisSegment_Builder1.build();
      audioAnalysisSegment2.getLoudnessMaxTime();
      audioAnalysisSegment2.getMeasure();
      audioAnalysisSegment_Builder6.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment1.builder();
      audioAnalysisSegment_Builder3.setLoudnessEnd((Float) 0.0F);
      audioAnalysisSegment_Builder5.setLoudnessMax((Float) null);
      audioAnalysisSegment2.getLoudnessMax();
      AudioAnalysisSegment audioAnalysisSegment3 = audioAnalysisSegment_Builder6.build();
      audioAnalysisSegment1.getLoudnessEnd();
      audioAnalysisSegment_Builder4.setTimbre(floatArray0);
      float[] floatArray1 = audioAnalysisSegment3.getPitches();
      assertNull(floatArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-1016.0F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMaxTime(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessMax(float0);
      float[] floatArray0 = new float[8];
      floatArray0[0] = (-1016.0F);
      floatArray0[1] = (-1016.0F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = (-1016.0F);
      floatArray0[4] = (-1016.0F);
      floatArray0[5] = 1537.61F;
      floatArray0[6] = (-1016.0F);
      floatArray0[7] = (-1016.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setTimbre(floatArray0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setLoudnessStart((Float) (-1016.0F));
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder4.build();
      audioAnalysisSegment0.getLoudnessMax();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder0.setPitches(floatArray0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder6 = audioAnalysisSegment_Builder5.setPitches(floatArray0);
      assertSame(audioAnalysisSegment_Builder6, audioAnalysisSegment_Builder5);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-1.0));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessEnd(float0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setTimbre(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder2.build();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment0.builder();
      Float float1 = new Float(0.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setLoudnessMax(float1);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder4.setLoudnessMax((Float) 0.0F);
      Float float2 = new Float((-1537.3728725582));
      audioAnalysisSegment_Builder4.setLoudnessEnd(float2);
      Float float3 = audioAnalysisSegment0.getLoudnessEnd();
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSegment1.builder();
      audioAnalysisSegment1.builder();
      audioAnalysisSegment_Builder3.setLoudnessEnd((Float) 0.0F);
      audioAnalysisSegment_Builder3.setLoudnessMaxTime(float3);
      Float float4 = new Float((-1.0));
      audioAnalysisSegment_Builder3.setLoudnessEnd(float4);
      AudioAnalysisSegment audioAnalysisSegment2 = audioAnalysisSegment_Builder5.build();
      Float float5 = audioAnalysisSegment2.getLoudnessMaxTime();
      assertNotEquals((float)float5, (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMax((Float) null);
      Float float0 = new Float(2513.062699565335);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessMaxTime(float0);
      Float float1 = new Float(0.0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessEnd(float1);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder2.setLoudnessStart((Float) null);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder3.build();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getLoudnessStart();
      audioAnalysisSegment_Builder4.setLoudnessStart((Float) null);
      float[] floatArray0 = new float[2];
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder6 = audioAnalysisSegment0.builder();
      floatArray0[0] = (-1.0F);
      float[] floatArray1 = new float[5];
      floatArray1[0] = (-1.0F);
      floatArray1[1] = 1.0F;
      floatArray1[2] = (-1.0F);
      floatArray1[3] = 1.0F;
      floatArray1[4] = 1.0F;
      audioAnalysisSegment_Builder0.setTimbre(floatArray1);
      floatArray0[1] = 1.0F;
      audioAnalysisSegment_Builder4.setTimbre(floatArray0);
      audioAnalysisSegment0.getLoudnessMaxTime();
      audioAnalysisSegment0.getTimbre();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder7 = audioAnalysisSegment_Builder5.setPitches(floatArray0);
      assertFalse(audioAnalysisSegment_Builder7.equals((Object)audioAnalysisSegment_Builder6));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[3];
      Float float0 = new Float((double) 0.0F);
      Float float1 = new Float(0.0F);
      audioAnalysisSegment_Builder0.setLoudnessMax(float1);
      audioAnalysisSegment_Builder0.setLoudnessEnd(float0);
      floatArray0[0] = 0.0F;
      Float float2 = new Float((double) 0.0F);
      audioAnalysisSegment_Builder0.setLoudnessEnd(float2);
      floatArray0[1] = 84.04495F;
      floatArray0[2] = 2647.36F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.builder();
      float[] floatArray1 = audioAnalysisSegment0.getTimbre();
      audioAnalysisSegment0.builder();
      Float float3 = audioAnalysisSegment0.getLoudnessEnd();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment_Builder0.setLoudnessMax(float3);
      audioAnalysisSegment_Builder1.setPitches(floatArray1);
      audioAnalysisSegment0.getLoudnessMax();
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      Float float4 = audioAnalysisSegment0.getLoudnessStart();
      assertNull(float4);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float(569.187261429);
      audioAnalysisSegment_Builder0.setLoudnessStart(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.getLoudnessMaxTime();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMaxTime((Float) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder0.setLoudnessStart((Float) null);
      audioAnalysisSegment_Builder2.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getMeasure();
      audioAnalysisSegment0.getMeasure();
      audioAnalysisSegment0.getPitches();
      audioAnalysisSegment0.getPitches();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder0.setTimbre((float[]) null);
      audioAnalysisSegment0.builder();
      Float float1 = new Float(569.187261429);
      audioAnalysisSegment_Builder3.setTimbre((float[]) null);
      audioAnalysisSegment_Builder0.setLoudnessEnd(float1);
      audioAnalysisSegment_Builder2.setLoudnessMaxTime((Float) null);
      audioAnalysisSegment_Builder0.setLoudnessMax(float0);
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.getTimbre();
      Float float2 = new Float(0.0F);
      audioAnalysisSegment_Builder3.setLoudnessMax(float2);
      audioAnalysisSegment_Builder2.setLoudnessStart(float0);
      audioAnalysisSegment_Builder3.setLoudnessMaxTime(float1);
      audioAnalysisSegment_Builder1.setLoudnessMax(float2);
      Float float3 = audioAnalysisSegment1.getLoudnessEnd();
      assertEquals((float)float3, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-1129.0F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMax(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder1.build();
      audioAnalysisSegment0.getLoudnessEnd();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (-1129.0F);
      floatArray0[1] = (-1129.0F);
      floatArray0[2] = (-1129.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setTimbre(floatArray0);
      audioAnalysisSegment0.getLoudnessEnd();
      Float float1 = new Float((-1129.0F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder1.setLoudnessEnd(float1);
      audioAnalysisSegment_Builder3.setLoudnessEnd((Float) null);
      audioAnalysisSegment_Builder2.setPitches(floatArray0);
      audioAnalysisSegment0.getLoudnessMax();
      audioAnalysisSegment0.getTimbre();
      audioAnalysisSegment_Builder0.setTimbre((float[]) null);
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      assertNull(audioAnalysisSegment1.getLoudnessMax());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-767.80975975684));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessStart(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setPitches((float[]) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessMaxTime(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getLoudnessStart();
      Float float1 = new Float((-767.80975975684));
      audioAnalysisSegment_Builder1.setLoudnessMaxTime(float1);
      audioAnalysisSegment0.builder();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder2.setTimbre((float[]) null);
      Float float2 = new Float(0.0F);
      audioAnalysisSegment_Builder0.setLoudnessStart(float2);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder6 = audioAnalysisSegment0.builder();
      audioAnalysisSegment_Builder3.setLoudnessEnd((Float) null);
      Float float3 = new Float((-1905.847));
      audioAnalysisSegment_Builder2.setLoudnessEnd(float3);
      audioAnalysisSegment0.getLoudnessMaxTime();
      audioAnalysisSegment0.getMeasure();
      Float float4 = new Float((-1905.847));
      audioAnalysisSegment_Builder5.setLoudnessEnd(float4);
      audioAnalysisSegment0.getLoudnessMaxTime();
      audioAnalysisSegment0.getLoudnessStart();
      audioAnalysisSegment_Builder6.setLoudnessStart((Float) null);
      audioAnalysisSegment0.getLoudnessMaxTime();
      Float float5 = new Float((-2782.1103261489116));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder7 = audioAnalysisSegment_Builder0.setLoudnessMax(float5);
      assertFalse(audioAnalysisSegment_Builder7.equals((Object)audioAnalysisSegment_Builder4));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessStart((Float) null);
      Float float0 = new Float(0.0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessEnd(float0);
      Float float1 = new Float(0.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessMax(float1);
      Float float2 = new Float(0.0F);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder2.build();
      audioAnalysisSegment0.getMeasure();
      audioAnalysisSegment_Builder0.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setLoudnessEnd(float2);
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder3.build();
      audioAnalysisSegment1.builder();
      audioAnalysisSegment1.getMeasure();
      audioAnalysisSegment_Builder2.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment1.getMeasure();
      Float float3 = new Float(0.0);
      audioAnalysisSegment_Builder2.setLoudnessMax(float3);
      audioAnalysisSegment_Builder3.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment1.getMeasure();
      audioAnalysisSegment1.getLoudnessStart();
      float[] floatArray0 = new float[4];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-2215.2336F);
      Float float4 = new Float(0.0F);
      audioAnalysisSegment_Builder4.setLoudnessEnd(float4);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      audioAnalysisSegment_Builder4.setPitches(floatArray0);
      audioAnalysisSegment1.getLoudnessMax();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder1.setPitches(floatArray0);
      assertSame(audioAnalysisSegment_Builder5, audioAnalysisSegment_Builder0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = audioAnalysisSegment0.builder();
      Float float0 = new Float(0.0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMaxTime(float0);
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder1.build();
      Float float1 = audioAnalysisSegment1.getLoudnessMaxTime();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-1906.85729842));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMax(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessStart(float0);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-1453.44F);
      floatArray0[1] = 1249.3F;
      floatArray0[2] = (-1.0F);
      floatArray0[3] = 3286.0F;
      floatArray0[4] = 1.0F;
      floatArray0[5] = (-1.0F);
      floatArray0[6] = (-3010.3774F);
      floatArray0[7] = (-1635.2F);
      floatArray0[8] = 2441.1274F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setTimbre(floatArray0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setPitches(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder4.build();
      Float float1 = audioAnalysisSegment0.getLoudnessStart();
      assertEquals((-1906.8573F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float(976.93626695307);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessStart(float0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setPitches(floatArray0);
      audioAnalysisSegment_Builder2.setPitches(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder2.build();
      Float float1 = audioAnalysisSegment0.getLoudnessStart();
      assertEquals(976.9363F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[3];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-384.7863F);
      floatArray0[2] = (-2637.0845F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setPitches(floatArray0);
      audioAnalysisSegment_Builder1.setPitches(floatArray0);
      Float float0 = new Float((double) (-384.7863F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessEnd(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessMaxTime(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder3.build();
      audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment_Builder4.setLoudnessMax(float0);
      float[] floatArray1 = audioAnalysisSegment0.getPitches();
      assertArrayEquals(new float[] {0.0F, (-384.7863F), (-2637.0845F)}, floatArray1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre((float[]) null);
      Float float0 = new Float((-1277.3672F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessEnd(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder2.build();
      Float float1 = audioAnalysisSegment0.getLoudnessMax();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment0.builder();
      float[] floatArray0 = new float[3];
      floatArray0[0] = 0.0F;
      floatArray0[1] = (-1.0F);
      floatArray0[2] = 2985.1409F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      audioAnalysisSegment0.getTimbre();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getLoudnessStart();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder1.setMeasure((AudioAnalysisMeasure) null);
      assertSame(audioAnalysisSegment_Builder3, audioAnalysisSegment_Builder2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float(0.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessMaxTime(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder1.build();
      float[] floatArray0 = audioAnalysisSegment0.getPitches();
      assertNull(floatArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessStart((Float) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessMax((Float) null);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder3.build();
      audioAnalysisSegment0.getLoudnessEnd();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder2.setLoudnessEnd((Float) null);
      audioAnalysisSegment_Builder4.setMeasure((AudioAnalysisMeasure) null);
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getLoudnessMaxTime();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder0.setPitches((float[]) null);
      assertSame(audioAnalysisSegment_Builder5, audioAnalysisSegment_Builder4);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float(0.0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessEnd(float0);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-1879.8F);
      floatArray0[2] = 0.0F;
      floatArray0[3] = 0.0F;
      floatArray0[4] = (-576.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setPitches(floatArray0);
      Float float1 = new Float((-1808.0435F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setLoudnessStart(float1);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setLoudnessMax(float1);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder4.build();
      Float float2 = audioAnalysisSegment0.getLoudnessMaxTime();
      assertNull(float2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.builder();
      audioAnalysisSegment0.getLoudnessEnd();
      audioAnalysisSegment_Builder0.build();
      Float float0 = audioAnalysisSegment0.getLoudnessMaxTime();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setMeasure((AudioAnalysisMeasure) null);
      Float float0 = new Float((-1820.6F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessMax(float0);
      float[] floatArray0 = new float[3];
      floatArray0[0] = (-1820.6F);
      floatArray0[1] = (-1820.6F);
      floatArray0[2] = (-1820.6F);
      audioAnalysisSegment_Builder2.setPitches(floatArray0);
      audioAnalysisSegment0.getLoudnessStart();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder0.setLoudnessStart((Float) (-1820.6F));
      assertSame(audioAnalysisSegment_Builder3, audioAnalysisSegment_Builder1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      assertNull(audioAnalysisSegment0.getLoudnessEnd());
      
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = audioAnalysisSegment0.builder();
      float[] floatArray0 = new float[0];
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setMeasure(audioAnalysisMeasure0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setPitches(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder3.build();
      float[] floatArray1 = audioAnalysisSegment1.getTimbre();
      assertEquals(0, floatArray1.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-1.0F));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessEnd(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessStart(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder2.build();
      audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder1.setMeasure((AudioAnalysisMeasure) null);
      float[] floatArray0 = new float[7];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-1.0F);
      audioAnalysisSegment0.builder();
      floatArray0[2] = (-584.39F);
      floatArray0[3] = (-1.0F);
      floatArray0[4] = (-1.0F);
      audioAnalysisSegment_Builder2.setPitches(floatArray0);
      floatArray0[5] = (-1.0F);
      floatArray0[6] = 2154.868F;
      audioAnalysisSegment_Builder3.setPitches(floatArray0);
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(audioAnalysisSegment1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float((-564.4994532603788));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setLoudnessStart(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessMaxTime(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder2.build();
      audioAnalysisSegment0.getTimbre();
      audioAnalysisSegment0.getLoudnessStart();
      audioAnalysisSegment_Builder2.setLoudnessMax(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder0.setPitches((float[]) null);
      Float float1 = new Float(0.0F);
      audioAnalysisSegment_Builder2.setLoudnessStart(float1);
      Float float2 = new Float(0.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setLoudnessEnd(float2);
      assertSame(audioAnalysisSegment_Builder0, audioAnalysisSegment_Builder4);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment0.builder();
      Float float0 = new Float(698.909F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessEnd(float0);
      audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setMeasure((AudioAnalysisMeasure) null);
      float[] floatArray0 = new float[0];
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder3.setPitches(floatArray0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder4.setLoudnessMax(float0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder6 = audioAnalysisSegment_Builder5.setLoudnessMaxTime((Float) null);
      assertSame(audioAnalysisSegment_Builder4, audioAnalysisSegment_Builder6);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      Float float0 = new Float(1327.6543F);
      audioAnalysisSegment_Builder0.setLoudnessStart(float0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      assertNull(audioAnalysisSegment0.getLoudnessMax());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      audioAnalysisSegment0.getLoudnessMax();
      Float float0 = audioAnalysisSegment0.getLoudnessEnd();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[9];
      floatArray0[1] = (-783.937F);
      floatArray0[2] = (-1.0F);
      floatArray0[3] = (-2189.0F);
      floatArray0[4] = (-228.14627F);
      floatArray0[5] = 0.0F;
      floatArray0[6] = (-1.0F);
      floatArray0[7] = 1032.5967F;
      floatArray0[8] = 1.0F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder1.build();
      Float float0 = audioAnalysisSegment0.getLoudnessMaxTime();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[3];
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.getLoudnessEnd();
      audioAnalysisSegment_Builder0.setLoudnessMax((Float) null);
      floatArray0[0] = 2459.23F;
      floatArray0[1] = 2890.9277F;
      floatArray0[2] = 0.0F;
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      Float float0 = new Float(2459.23F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessStart(float0);
      AudioAnalysisSegment audioAnalysisSegment1 = audioAnalysisSegment_Builder2.build();
      audioAnalysisSegment_Builder2.setMeasure((AudioAnalysisMeasure) null);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment1.builder();
      audioAnalysisSegment_Builder1.setLoudnessMaxTime(float0);
      audioAnalysisSegment_Builder3.setPitches(floatArray0);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder4 = audioAnalysisSegment_Builder2.setTimbre(floatArray0);
      audioAnalysisSegment_Builder3.build();
      audioAnalysisSegment1.getLoudnessStart();
      audioAnalysisSegment_Builder0.setPitches(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment2 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment_Builder4.build();
      audioAnalysisSegment2.getLoudnessEnd();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder5 = audioAnalysisSegment_Builder4.setTimbre(floatArray0);
      audioAnalysisSegment2.builder();
      audioAnalysisSegment2.builder();
      audioAnalysisSegment_Builder1.setLoudnessEnd((Float) 2459.23F);
      audioAnalysisSegment2.getPitches();
      Float float1 = new Float((double) 2890.9277F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder6 = audioAnalysisSegment_Builder5.setLoudnessMaxTime(float1);
      Float float2 = new Float((-596.803323954259));
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder7 = audioAnalysisSegment_Builder0.setLoudnessStart(float2);
      assertSame(audioAnalysisSegment_Builder7, audioAnalysisSegment_Builder6);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[0];
      audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_Builder0.build();
      audioAnalysisSegment0.builder();
      float[] floatArray1 = new float[4];
      floatArray1[1] = (-1.0F);
      audioAnalysisSegment0.getMeasure();
      Float float0 = audioAnalysisSegment0.getLoudnessEnd();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      Float float0 = new Float(1036.2299F);
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      Float float1 = new Float((double) 1036.2299F);
      assertEquals(1036.2299F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonElement0).isJsonNull();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(jsonElement0, (JsonElement) null).when(jsonObject0).get(anyString());
      doReturn(true).when(jsonObject0).has(anyString());
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject1).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject1).has(anyString());
      audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject1);
      JsonObject jsonObject2 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject2).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject2).has(anyString());
      audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject2);
      // Undeclared exception!
      try { 
        audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisSegment$JsonUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder0 = new AudioAnalysisSegment.Builder();
      float[] floatArray0 = new float[0];
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder1 = audioAnalysisSegment_Builder0.setTimbre(floatArray0);
      Float float0 = new Float(0.0F);
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder2 = audioAnalysisSegment_Builder1.setLoudnessMax(float0);
      AudioAnalysisSegment.JsonUtil audioAnalysisSegment_JsonUtil0 = new AudioAnalysisSegment.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisSegment audioAnalysisSegment0 = audioAnalysisSegment_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeasure audioAnalysisMeasure0 = audioAnalysisSegment0.getMeasure();
      AudioAnalysisSegment.Builder audioAnalysisSegment_Builder3 = audioAnalysisSegment_Builder2.setMeasure(audioAnalysisMeasure0);
      audioAnalysisSegment_Builder3.setLoudnessMaxTime(float0);
      float[] floatArray1 = audioAnalysisSegment0.getTimbre();
      assertNull(floatArray1);
  }
}
