/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 21:12:41 GMT 2019
 */

package com.wrapper.spotify.model_objects.miscellaneous;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.gson.JsonObject;
import com.wrapper.spotify.model_objects.miscellaneous.Device;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Device_ESTest extends Device_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Integer integer0 = new Integer(0);
      device_Builder0.setVolume_percent(integer0);
      Device device0 = device_Builder0.build();
      Integer integer1 = device0.getVolume_percent();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Integer integer0 = new Integer(787);
      Device.Builder device_Builder1 = device_Builder0.setVolume_percent(integer0);
      Device device0 = device_Builder1.build();
      Integer integer1 = device0.getVolume_percent();
      assertEquals(787, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Integer integer0 = new Integer((-4098));
      device_Builder0.setVolume_percent(integer0);
      Device device0 = device_Builder0.build();
      Integer integer1 = device0.getVolume_percent();
      assertEquals((-4098), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device.Builder device_Builder1 = device_Builder0.setType("");
      Device device0 = device_Builder1.build();
      String string0 = device0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device.Builder device_Builder1 = device_Builder0.setName("(da9oP^3S`>f&$t");
      Device device0 = device_Builder1.build();
      String string0 = device0.getName();
      assertEquals("(da9oP^3S`>f&$t", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      device_Builder0.setName("");
      Device device0 = device_Builder0.build();
      String string0 = device0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Boolean boolean0 = Boolean.TRUE;
      device_Builder0.setIs_restricted(boolean0);
      Device device0 = device_Builder0.build();
      Boolean boolean1 = device0.getIs_restricted();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Boolean boolean0 = new Boolean(false);
      Device.Builder device_Builder1 = device_Builder0.setIs_restricted(boolean0);
      Device device0 = device_Builder1.build();
      Boolean boolean1 = device0.getIs_restricted();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Boolean boolean0 = Boolean.TRUE;
      device_Builder0.setIs_active(boolean0);
      Device device0 = device_Builder0.build();
      Boolean boolean1 = device0.getIs_active();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Boolean boolean0 = new Boolean(false);
      device_Builder0.setIs_active(boolean0);
      Device device0 = device_Builder0.build();
      Boolean boolean1 = device0.getIs_active();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      device_Builder0.setId("com.google.gson.JsonPrimitive");
      Device device0 = device_Builder0.build();
      String string0 = device0.getId();
      assertEquals("com.google.gson.JsonPrimitive", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      device_Builder0.setId("");
      Device device0 = device_Builder0.build();
      String string0 = device0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Device.JsonUtil device_JsonUtil0 = new Device.JsonUtil();
      Device device0 = device_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(device0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      Integer integer0 = device0.getVolume_percent();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      String string0 = device0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      Boolean boolean0 = device0.getIs_restricted();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      Boolean boolean0 = device0.getIs_active();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      String string0 = device0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      String string0 = device0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Device.Builder device_Builder0 = new Device.Builder();
      Device device0 = device_Builder0.build();
      Device.Builder device_Builder1 = device0.builder();
      assertNotSame(device_Builder1, device_Builder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Device.JsonUtil device_JsonUtil0 = new Device.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      Device device0 = device_JsonUtil0.createModelObject(jsonObject0);
      Device.Builder device_Builder0 = device0.builder();
      device_Builder0.setType("_0=s?nC8m7^ygD\"k;$");
      Device device1 = device_Builder0.build();
      String string0 = device1.getType();
      assertEquals("_0=s?nC8m7^ygD\"k;$", string0);
  }
}
