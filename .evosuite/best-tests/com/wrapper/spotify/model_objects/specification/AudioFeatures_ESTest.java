/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 21:54:43 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.wrapper.spotify.enums.Modality;
import com.wrapper.spotify.enums.ModelObjectType;
import com.wrapper.spotify.model_objects.specification.AudioFeatures;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AudioFeatures_ESTest extends AudioFeatures_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float(3355.217562991);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLiveness(float0);
      Float.isFinite((-1385.27F));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setEnergy(float0);
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setType(modelObjectType0);
      Integer integer0 = new Integer(65);
      Integer.toUnsignedString(59);
      audioFeatures_Builder2.setKey(integer0);
      Float.sum((-616.0F), 0.0F);
      audioFeatures_Builder1.setTrackHref("59");
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setInstrumentalness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getEnergy();
      audioFeatures_Builder1.setUri("");
      Modality modality0 = Modality.MINOR;
      audioFeatures_Builder1.setMode(modality0);
      audioFeatures_Builder3.setTrackHref((String) null);
      audioFeatures0.getUri();
      audioFeatures0.getLoudness();
      audioFeatures0.getDanceability();
      audioFeatures0.getValence();
      Float float1 = audioFeatures0.getValence();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Integer integer0 = new Integer((-1));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setTimeSignature(integer0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setId("I)+t#F$");
      AudioFeatures audioFeatures0 = audioFeatures_Builder2.build();
      audioFeatures0.getId();
      audioFeatures0.getDurationMs();
      audioFeatures_Builder0.setId("I)+t#F$");
      Float float0 = new Float(0.0F);
      audioFeatures_Builder2.setEnergy(float0);
      audioFeatures0.getTimeSignature();
      Float float1 = audioFeatures0.getValence();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float(3355.217562991);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLiveness(float0);
      Float.isFinite((-616.0F));
      Float float1 = new Float((-616.0F));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setEnergy(float1);
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setType(modelObjectType0);
      Integer.toUnsignedString(59);
      Float.sum((-616.0F), 0.0F);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setInstrumentalness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      Float float2 = audioFeatures0.getEnergy();
      audioFeatures_Builder1.setUri("");
      Modality modality0 = Modality.MINOR;
      audioFeatures_Builder1.setMode(modality0);
      audioFeatures_Builder3.setTrackHref((String) null);
      audioFeatures0.getUri();
      audioFeatures0.getLoudness();
      audioFeatures0.getDanceability();
      audioFeatures0.getValence();
      Float float3 = audioFeatures0.getLiveness();
      assertNotEquals((float)float3, (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float(1.0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setValence((Float) null);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setSpeechiness((Float) null);
      Float float1 = new Float(1.0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setAcousticness(float0);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setInstrumentalness((Float) null);
      Float float2 = new Float(1.0);
      Float.sum(0.0F, (-1890.8F));
      audioFeatures_Builder3.setAcousticness(float2);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getSpeechiness();
      Float.sum(0.0F, 2386.914F);
      Float float3 = new Float((double) 2386.914F);
      audioFeatures_Builder4.setTempo(float3);
      audioFeatures_Builder3.setId("-~\"JH*KZ<w8EbBq/");
      audioFeatures0.getValence();
      audioFeatures0.getAcousticness();
      Float float4 = new Float((-3443.676F));
      audioFeatures_Builder2.setDanceability(float4);
      audioFeatures_Builder0.setEnergy((Float) null);
      Modality modality0 = Modality.MAJOR;
      audioFeatures_Builder4.setMode(modality0);
      audioFeatures0.getInstrumentalness();
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setTrackHref("H|sj");
      assertSame(audioFeatures_Builder6, audioFeatures_Builder1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setTimeSignature((Integer) null);
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setType(modelObjectType0);
      audioFeatures_Builder1.setAcousticness((Float) null);
      Float float0 = new Float(1.0F);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setInstrumentalness(float0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setSpeechiness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getKey();
      audioFeatures0.getInstrumentalness();
      audioFeatures_Builder2.setTrackHref((String) null);
      audioFeatures0.getSpeechiness();
      audioFeatures0.getDurationMs();
      audioFeatures0.getSpeechiness();
      Float float1 = audioFeatures0.getInstrumentalness();
      assertEquals(1.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-1709.6F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setAcousticness(float0);
      Float float1 = new Float((-1709.6F));
      audioFeatures_Builder1.setDanceability(float1);
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setType(modelObjectType0);
      audioFeatures_Builder2.setInstrumentalness(float0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setUri("");
      Float float2 = new Float((-1709.6F));
      Modality modality0 = Modality.MAJOR;
      audioFeatures_Builder2.setMode(modality0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setSpeechiness(float2);
      audioFeatures_Builder2.setSpeechiness(float2);
      audioFeatures_Builder3.setType(modelObjectType0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getUri();
      audioFeatures0.getDurationMs();
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      String string0 = "";
      // Undeclared exception!
      try { 
        audioFeatures_JsonUtil0.createModelObjectPagingCursorbased("", (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: null
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-214.6F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setTempo(float0);
      Integer integer0 = new Integer(0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTimeSignature(integer0);
      Float float1 = new Float((double) 0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setValence(float1);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setSpeechiness(float1);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getValence();
      audioFeatures0.getTrackHref();
      audioFeatures0.getAcousticness();
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures0.builder();
      assertFalse(audioFeatures_Builder5.equals((Object)audioFeatures_Builder3));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-2983.0F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLoudness(float0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setId("?m3K`Gwq).|th@");
      audioFeatures_Builder1.setAcousticness(float0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setLiveness(float0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setAnalysisUrl("?m3K`Gwq).|th@");
      audioFeatures_Builder0.setAnalysisUrl("?m3K`Gwq).|th@");
      Float.min(0.0F, 1.0F);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.builder();
      audioFeatures0.getInstrumentalness();
      audioFeatures0.getInstrumentalness();
      audioFeatures0.getSpeechiness();
      audioFeatures0.getDurationMs();
      audioFeatures_Builder2.setTrackHref("?m3K`Gwq).|th@");
      audioFeatures0.getUri();
      audioFeatures0.getLoudness();
      audioFeatures0.getSpeechiness();
      audioFeatures0.getAcousticness();
      audioFeatures0.builder();
      audioFeatures0.getEnergy();
      audioFeatures_Builder3.setAnalysisUrl("acousticness");
      audioFeatures0.getLoudness();
      audioFeatures0.getSpeechiness();
      audioFeatures0.getDanceability();
      Float float1 = audioFeatures0.getLiveness();
      assertEquals((-2983.0F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Integer integer0 = new Integer(0);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setDurationMs(integer0);
      Float float0 = new Float((float) 0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTempo(float0);
      Float.max(0, (-1405.244F));
      Modality modality0 = Modality.MAJOR;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setMode(modality0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder3.build();
      audioFeatures0.getTempo();
      Float float1 = audioFeatures0.getValence();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Integer integer0 = new Integer((-1));
      audioFeatures_Builder0.setId("");
      Integer.sum(3914, 983);
      audioFeatures_Builder0.setTimeSignature(integer0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder0.build();
      audioFeatures0.getId();
      audioFeatures0.getDurationMs();
      Float float0 = new Float(0.0F);
      audioFeatures_Builder0.setEnergy(float0);
      audioFeatures0.getInstrumentalness();
      Integer integer1 = audioFeatures0.getKey();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setUri("");
      Float float0 = new Float((-1215.28));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setDanceability(float0);
      Integer integer0 = new Integer(13);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setTimeSignature(integer0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setAnalysisUrl("genre");
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      Integer integer1 = audioFeatures0.getTimeSignature();
      assertEquals(13, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-306.0F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLoudness(float0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setEnergy(float0);
      Float.max(1.0F, (-4335.06F));
      Float float1 = new Float((-306.0F));
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setInstrumentalness(float1);
      Integer integer0 = new Integer((-18));
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setDurationMs(integer0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures0.builder();
      Float float2 = new Float((float) (-18));
      audioFeatures_Builder5.setInstrumentalness(float2);
      audioFeatures_Builder5.setUri("");
      audioFeatures0.getMode();
      audioFeatures_Builder5.setTempo((Float) null);
      audioFeatures0.getSpeechiness();
      Float float3 = new Float((-4335.06F));
      audioFeatures_Builder1.setSpeechiness(float3);
      audioFeatures0.getEnergy();
      audioFeatures0.getTimeSignature();
      audioFeatures0.getValence();
      audioFeatures_Builder4.setDurationMs((Integer) null);
      audioFeatures_Builder2.setUri("");
      Integer integer1 = audioFeatures0.getDurationMs();
      assertEquals((-18), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float(1.0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setValence(float0);
      Modality modality0 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setMode(modality0);
      Float float1 = new Float((-3443.676F));
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setTempo(float1);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setInstrumentalness(float0);
      Float float2 = new Float((-1867.5249F));
      Float.sum(0.0F, (-1890.8F));
      audioFeatures_Builder3.setAcousticness(float2);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getSpeechiness();
      Float.sum(0.0F, 2386.914F);
      Float float3 = new Float((double) 2386.914F);
      audioFeatures_Builder4.setTempo(float3);
      audioFeatures_Builder3.setId("-~\"JH*KZ<w8EbBq/");
      audioFeatures0.getValence();
      audioFeatures0.getAcousticness();
      Float float4 = new Float((-3443.676F));
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder2.setDanceability(float4);
      audioFeatures_Builder0.setEnergy((Float) null);
      Modality modality1 = Modality.MAJOR;
      audioFeatures_Builder4.setMode(modality1);
      audioFeatures0.getInstrumentalness();
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder5.setTrackHref("H|sj");
      assertSame(audioFeatures_Builder7, audioFeatures_Builder6);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-306.0F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLoudness(float0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setEnergy(float0);
      Float.max(1.0F, (-4335.06F));
      Float float1 = new Float((-306.0F));
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setInstrumentalness(float1);
      Integer integer0 = new Integer(61);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setDurationMs(integer0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures0.builder();
      Float float2 = new Float((float) 61);
      audioFeatures_Builder5.setInstrumentalness(float2);
      audioFeatures_Builder5.setUri("");
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      audioFeatures_Builder5.setType(modelObjectType0);
      audioFeatures0.getMode();
      Integer.sum((-275), 1534);
      audioFeatures_Builder5.setTempo((Float) null);
      audioFeatures0.getSpeechiness();
      Float float3 = new Float((-4335.06F));
      audioFeatures_Builder1.setSpeechiness(float3);
      audioFeatures0.getEnergy();
      audioFeatures0.getTimeSignature();
      audioFeatures0.getSpeechiness();
      audioFeatures_Builder4.setDurationMs((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder2.setUri("");
      audioFeatures0.getDurationMs();
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures0.builder();
      assertFalse(audioFeatures_Builder7.equals((Object)audioFeatures_Builder6));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float(1.0F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setEnergy(float0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setId("playlist");
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setTempo(float0);
      Modality modality0 = Modality.MAJOR;
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setMode(modality0);
      Float float1 = new Float((double) 1.0F);
      audioFeatures_Builder4.setTempo(float1);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setInstrumentalness(float0);
      Float float2 = new Float((double) 1.0F);
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setLoudness(float2);
      Integer integer0 = new Integer(0);
      audioFeatures_Builder5.setDurationMs(integer0);
      audioFeatures_Builder6.setTrackHref("Zb^F` _![M8)(lX7k2");
      Modality modality1 = Modality.MAJOR;
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder6.setMode(modality1);
      Float.min(1.0F, 1.0F);
      Float.isFinite(0.0F);
      AudioFeatures.Builder audioFeatures_Builder8 = audioFeatures_Builder2.setLoudness(float2);
      ModelObjectType modelObjectType0 = ModelObjectType.PLAYLIST;
      Float.max(349.75F, (-2035.8071F));
      audioFeatures_Builder7.setType(modelObjectType0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder2.build();
      audioFeatures0.getValence();
      audioFeatures_Builder8.build();
      audioFeatures_Builder3.setEnergy(float2);
      audioFeatures_Builder8.setType(modelObjectType0);
      audioFeatures0.getValence();
      Modality modality2 = audioFeatures0.getMode();
      assertEquals(1, modality2.getType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Integer integer0 = new Integer((-3119));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setTimeSignature(integer0);
      Float float0 = new Float((-1.0));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTempo(float0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setKey(integer0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setId("previous");
      audioFeatures_Builder1.setDanceability((Float) null);
      Float float1 = new Float((-1.0));
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder2.setValence(float1);
      Modality modality0 = Modality.MINOR;
      Float.isFinite((-3119));
      audioFeatures_Builder4.setMode(modality0);
      Float float2 = new Float((-1.0));
      audioFeatures_Builder0.setInstrumentalness(float2);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      float float3 = Float.max((-3119), (-3119));
      audioFeatures0.getDanceability();
      audioFeatures0.getType();
      audioFeatures_Builder2.setUri("previous");
      audioFeatures_Builder1.setAnalysisUrl("2cafil8");
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setTempo(float2);
      audioFeatures_Builder4.setId("speechiness");
      audioFeatures0.getLoudness();
      audioFeatures_Builder6.setTrackHref("loudness");
      audioFeatures0.getLiveness();
      audioFeatures0.getAnalysisUrl();
      audioFeatures0.getLiveness();
      Float float4 = audioFeatures0.getTempo();
      assertNotEquals((float)float4, (float)float3, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-1.0F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLiveness(float0);
      Modality modality0 = Modality.MINOR;
      audioFeatures_Builder1.setDurationMs((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setMode(modality0);
      Modality modality1 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setMode(modality1);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setUri("~L==m4Qm9Gv)xe'%DMt");
      ModelObjectType modelObjectType0 = ModelObjectType.AUDIO_FEATURES;
      audioFeatures_Builder2.setType(modelObjectType0);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setInstrumentalness(float0);
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setAcousticness(float0);
      Float float1 = new Float((double) (-1.0F));
      ModelObjectType modelObjectType1 = ModelObjectType.ARTIST;
      audioFeatures_Builder5.setType(modelObjectType1);
      audioFeatures_Builder6.setValence(float1);
      Float.isFinite((-1.0F));
      AudioFeatures audioFeatures0 = audioFeatures_Builder5.build();
      audioFeatures_Builder4.setLiveness(float0);
      audioFeatures_Builder2.build();
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder6.setEnergy(float0);
      Float.min((-961.9311F), (-34.38F));
      AudioFeatures audioFeatures1 = audioFeatures_Builder7.build();
      audioFeatures1.builder();
      audioFeatures1.getMode();
      AudioFeatures.Builder audioFeatures_Builder8 = audioFeatures_Builder3.setEnergy(float1);
      assertSame(audioFeatures_Builder8, audioFeatures_Builder5);
      
      Float float2 = audioFeatures0.getValence();
      assertEquals((float)float2, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-1.0F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLiveness(float0);
      Modality modality0 = Modality.MINOR;
      audioFeatures_Builder1.setDurationMs((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setMode(modality0);
      Modality modality1 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setMode(modality1);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setUri("~L==m4Qm9Gv)xe'%DMt");
      ModelObjectType modelObjectType0 = ModelObjectType.AUDIO_FEATURES;
      audioFeatures_Builder2.setType(modelObjectType0);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setInstrumentalness(float0);
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setAcousticness(float0);
      Float float1 = new Float((double) (-1.0F));
      ModelObjectType modelObjectType1 = ModelObjectType.ARTIST;
      audioFeatures_Builder5.setType(modelObjectType1);
      audioFeatures_Builder6.setValence(float1);
      Float.isFinite((-1.0F));
      AudioFeatures audioFeatures0 = audioFeatures_Builder5.build();
      audioFeatures_Builder4.setLiveness(float0);
      Float float2 = new Float((-1.0));
      AudioFeatures audioFeatures1 = audioFeatures_Builder2.build();
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder6.setEnergy(float2);
      Float.min((-961.9311F), (-34.38F));
      AudioFeatures audioFeatures2 = audioFeatures_Builder7.build();
      audioFeatures2.builder();
      audioFeatures2.getMode();
      audioFeatures_Builder3.setEnergy(float1);
      audioFeatures1.getInstrumentalness();
      Float float3 = audioFeatures0.getEnergy();
      assertNull(float3);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures audioFeatures0 = audioFeatures_Builder0.build();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures0.builder();
      audioFeatures_Builder1.setTrackHref("items");
      Float float0 = new Float(0.0F);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setLiveness(float0);
      Float float1 = new Float((double) 0.0F);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setEnergy(float0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder1.setAcousticness(float0);
      AudioFeatures audioFeatures1 = audioFeatures_Builder3.build();
      audioFeatures_Builder4.setInstrumentalness(float0);
      audioFeatures1.builder();
      audioFeatures_Builder3.build();
      audioFeatures0.getTimeSignature();
      audioFeatures1.getAcousticness();
      audioFeatures_Builder0.setSpeechiness((Float) null);
      audioFeatures_Builder0.setTempo(float0);
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      // Undeclared exception!
      try { 
        audioFeatures_JsonUtil0.createModelObjectArray("NBY\"");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Array: \"NBY\\\"\"
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setKey((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTimeSignature((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder0.setAnalysisUrl("");
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setUri("{KDA");
      Float float0 = new Float((-57.6422F));
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setEnergy(float0);
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setType(modelObjectType0);
      audioFeatures_Builder4.setKey((Integer) null);
      AudioFeatures audioFeatures0 = audioFeatures_Builder5.build();
      audioFeatures_Builder1.setEnergy(float0);
      audioFeatures0.getInstrumentalness();
      Float float1 = new Float(0.0);
      audioFeatures_Builder5.setLiveness(float1);
      audioFeatures0.getUri();
      Float float2 = new Float((double) (-57.6422F));
      audioFeatures_Builder0.setLiveness(float2);
      audioFeatures0.getDurationMs();
      audioFeatures0.getTrackHref();
      audioFeatures0.builder();
      audioFeatures0.getType();
      audioFeatures0.builder();
      audioFeatures_Builder6.setId("");
      audioFeatures0.getValence();
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder3.setEnergy((Float) null);
      ModelObjectType modelObjectType1 = ModelObjectType.ARTIST;
      AudioFeatures.Builder audioFeatures_Builder8 = audioFeatures_Builder1.setType(modelObjectType1);
      assertSame(audioFeatures_Builder8, audioFeatures_Builder7);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float(0.0F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setEnergy(float0);
      Float float1 = new Float((-1.0F));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setLoudness(float1);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setUri(",tqP5+?wT<<zH");
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setType(modelObjectType0);
      audioFeatures_Builder4.setId(",tqP5+?wT<<zH");
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      float float2 = Float.min((-1826.2F), 386.3788F);
      audioFeatures_Builder4.setUri("id");
      audioFeatures0.builder();
      audioFeatures0.getDanceability();
      audioFeatures0.getId();
      Integer integer0 = Integer.getInteger(",tqP5+?wT<<zH", 0);
      audioFeatures_Builder3.setDurationMs(integer0);
      Modality modality0 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder0.setMode(modality0);
      audioFeatures0.builder();
      audioFeatures_Builder5.setAcousticness(float0);
      audioFeatures0.getValence();
      Float float3 = audioFeatures0.getEnergy();
      assertNotEquals((float)float3, (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-306.0F));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLoudness(float0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setEnergy(float0);
      Float.max(1.0F, (-4335.06F));
      Float float1 = new Float((-306.0F));
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setInstrumentalness(float1);
      Integer integer0 = new Integer((-18));
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setDurationMs(integer0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures0.builder();
      Float float2 = new Float((float) (-18));
      audioFeatures_Builder5.setInstrumentalness(float2);
      audioFeatures_Builder5.setUri("");
      audioFeatures0.getMode();
      Integer.sum((-275), 1534);
      audioFeatures_Builder5.setTempo((Float) null);
      audioFeatures0.getSpeechiness();
      Float float3 = new Float((-4335.06F));
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder1.setSpeechiness(float3);
      audioFeatures0.getEnergy();
      audioFeatures0.getTimeSignature();
      audioFeatures0.getValence();
      audioFeatures_Builder4.setDurationMs((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder2.setUri("");
      assertSame(audioFeatures_Builder7, audioFeatures_Builder6);
      
      Float float4 = audioFeatures0.getLiveness();
      assertNull(float4);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float((-907.0112F));
      Float.max((-907.0112F), (-907.0112F));
      audioFeatures_Builder0.setDanceability(float0);
      Float float1 = new Float((-907.0112F));
      Float.isFinite((-907.0112F));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder0.setAcousticness(float1);
      audioFeatures_Builder2.setSpeechiness(float1);
      audioFeatures_Builder1.setAnalysisUrl("id");
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      jsonObject1.getAsJsonObject("id");
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(audioFeatures0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-3266.0));
      AudioFeatures audioFeatures0 = audioFeatures_Builder0.build();
      audioFeatures0.builder();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLiveness(float0);
      Float.isFinite(0.0F);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTrackHref("");
      Integer integer0 = new Integer(994);
      audioFeatures_Builder0.setValence(float0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setDurationMs(integer0);
      audioFeatures_Builder2.setUri("");
      Float.sum(0.0F, (-1751.0375F));
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setAnalysisUrl("ydG\"Vhno% ^d8A74&jq");
      AudioFeatures audioFeatures1 = audioFeatures_Builder4.build();
      Float float1 = audioFeatures1.getValence();
      audioFeatures_Builder3.setTempo(float1);
      audioFeatures1.builder();
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder3.setId("");
      Integer.max(994, 994);
      audioFeatures1.getType();
      audioFeatures_Builder5.setKey(integer0);
      audioFeatures1.getEnergy();
      audioFeatures_Builder5.build();
      Float float2 = audioFeatures1.getValence();
      assertEquals((-3266.0F), (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures audioFeatures0 = audioFeatures_Builder0.build();
      audioFeatures0.getDanceability();
      audioFeatures_Builder0.setEnergy((Float) null);
      AudioFeatures audioFeatures1 = audioFeatures_Builder0.build();
      Float float0 = new Float(0.0);
      Float.max(0.0F, 0.0F);
      audioFeatures_Builder0.setSpeechiness(float0);
      Float float1 = Float.valueOf(0.0F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setSpeechiness(float1);
      Float float2 = new Float(0.0);
      audioFeatures_Builder1.setSpeechiness(float2);
      audioFeatures_Builder1.setTrackHref((String) null);
      audioFeatures1.getMode();
      audioFeatures0.getDurationMs();
      audioFeatures_Builder1.setTimeSignature((Integer) null);
      audioFeatures1.getValence();
      String string0 = audioFeatures1.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Integer integer0 = new Integer(79);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setKey(integer0);
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setType(modelObjectType0);
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      audioFeatures0.getInstrumentalness();
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setAcousticness((Float) null);
      Float float0 = new Float((double) 79);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setDanceability(float0);
      AudioFeatures audioFeatures1 = audioFeatures_Builder4.build();
      Float float1 = audioFeatures1.getLoudness();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setTrackHref("");
      AudioFeatures audioFeatures0 = audioFeatures_Builder1.build();
      audioFeatures0.getSpeechiness();
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder0.setEnergy((Float) null);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setAnalysisUrl("");
      Integer integer0 = new Integer(0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setKey(integer0);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setValence((Float) null);
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setLoudness((Float) null);
      AudioFeatures.Builder audioFeatures_Builder7 = audioFeatures_Builder6.setDanceability((Float) null);
      assertSame(audioFeatures_Builder3, audioFeatures_Builder7);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      AudioFeatures.Builder audioFeatures_Builder0 = audioFeatures0.builder();
      Float float0 = new Float(571.5296F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setLoudness(float0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setKey((Integer) null);
      Float float1 = new Float(571.5296F);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setSpeechiness(float1);
      AudioFeatures audioFeatures1 = audioFeatures_Builder3.build();
      Float float2 = audioFeatures1.getLoudness();
      assertEquals(571.5296F, (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.PLAYLIST;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float((-1674.435F));
      audioFeatures_Builder1.setEnergy(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder1.build();
      Float float1 = new Float((-1324.5278));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder0.setInstrumentalness(float1);
      audioFeatures_Builder0.setAnalysisUrl("=");
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setSpeechiness(float1);
      audioFeatures0.getTimeSignature();
      audioFeatures0.getAcousticness();
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setKey((Integer) null);
      assertSame(audioFeatures_Builder4, audioFeatures_Builder3);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.PLAYLIST;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float(1333.8889F);
      Float.sum((-805.761F), (-805.761F));
      Float.sum(1.0F, 1333.8889F);
      Float.isFinite((-1079.5287F));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder0.setSpeechiness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder2.build();
      audioFeatures0.getId();
      audioFeatures0.getLiveness();
      Float.min((-1079.5287F), 1980.1832F);
      Float float1 = new Float((double) 1334.8889F);
      audioFeatures_Builder2.setValence(float1);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setTrackHref((String) null);
      Float float2 = new Float(1737.7314F);
      audioFeatures_Builder3.setSpeechiness(float2);
      audioFeatures0.getEnergy();
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder2.setDanceability(float0);
      assertSame(audioFeatures_Builder4, audioFeatures_Builder1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      AudioFeatures.Builder audioFeatures_Builder0 = audioFeatures0.builder();
      Float float0 = new Float(658.627F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setAcousticness(float0);
      AudioFeatures audioFeatures1 = audioFeatures_Builder1.build();
      String string0 = audioFeatures1.getAnalysisUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      Integer integer0 = new Integer(0);
      audioFeatures_Builder0.setKey(integer0);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float((-1.0));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setEnergy(float0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setAcousticness(float0);
      Float.min(0.0F, 1.0F);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setValence(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getTrackHref();
      audioFeatures_Builder2.setLoudness(float0);
      audioFeatures_Builder4.setId((String) null);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder0.setUri((String) null);
      audioFeatures_Builder2.setAcousticness(float0);
      audioFeatures0.getDurationMs();
      Integer integer1 = audioFeatures0.getKey();
      audioFeatures0.getId();
      audioFeatures0.getType();
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setKey(integer1);
      assertSame(audioFeatures_Builder6, audioFeatures_Builder2);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject1);
      audioFeatures0.getInstrumentalness();
      audioFeatures0.getTempo();
      Float float0 = new Float((-1.0));
      Float.max((-1755.7F), (-1755.7F));
      audioFeatures_Builder0.setDanceability(float0);
      String string0 = audioFeatures0.getTrackHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setAnalysisUrl("\"R*dhTk* =EeE");
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setType(modelObjectType0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder2.build();
      audioFeatures0.getKey();
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder1.setKey((Integer) null);
      assertSame(audioFeatures_Builder3, audioFeatures_Builder0);
      assertSame(audioFeatures_Builder0, audioFeatures_Builder3);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      audioFeatures0.getType();
      audioFeatures0.getType();
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Modality modality0 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setMode(modality0);
      audioFeatures_Builder1.setId("(Jb~.F");
      Float float0 = audioFeatures0.getAcousticness();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Modality modality0 = Modality.MAJOR;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setMode(modality0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setAnalysisUrl("");
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setType(modelObjectType0);
      Float float0 = new Float((-1853.0344236864));
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setAcousticness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      Float float1 = audioFeatures0.getDanceability();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Modality modality0 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setMode(modality0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setId("analysis_url");
      Float float0 = new Float(0.0);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setDanceability(float0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setAnalysisUrl("xJw~z,]y-C{/CIUeY5)");
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      String string0 = audioFeatures0.getTrackHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.getAsJsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject1);
      Float float0 = audioFeatures0.getEnergy();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float(0.0);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setInstrumentalness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder1.build();
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures0.builder();
      audioFeatures0.builder();
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures0.builder();
      AudioFeatures audioFeatures1 = audioFeatures_Builder2.build();
      audioFeatures1.builder();
      Float float1 = new Float(0.0);
      audioFeatures0.getUri();
      audioFeatures_Builder2.setLoudness(float1);
      Float float2 = new Float(1.0);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setValence(float2);
      assertSame(audioFeatures_Builder4, audioFeatures_Builder3);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject1);
      Float float0 = audioFeatures0.getTempo();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-1.0));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setValence(float0);
      Float float1 = new Float((-545.6891F));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTempo(float1);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setTrackHref("loudness");
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setLiveness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      Float float2 = audioFeatures0.getLiveness();
      assertEquals((-1.0F), (float)float2, 0.01F);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.getAsJsonObject();
      jsonObject1.get("Rzq`&ug5z");
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject1);
      AudioFeatures.Builder audioFeatures_Builder0 = audioFeatures0.builder();
      AudioFeatures audioFeatures1 = audioFeatures_Builder0.build();
      audioFeatures1.getMode();
      AudioFeatures audioFeatures2 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      Float float0 = audioFeatures2.getValence();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      AudioFeatures.Builder audioFeatures_Builder0 = audioFeatures0.builder();
      Integer integer0 = new Integer((-905));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setDurationMs(integer0);
      Float float0 = new Float((float) (-905));
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setTempo(float0);
      audioFeatures_Builder2.setTempo(float0);
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setType(modelObjectType0);
      assertSame(audioFeatures_Builder2, audioFeatures_Builder3);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      AudioFeatures.Builder audioFeatures_Builder0 = audioFeatures0.builder();
      Float float0 = new Float(0.0F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setSpeechiness(float0);
      AudioFeatures audioFeatures1 = audioFeatures_Builder1.build();
      Float float1 = audioFeatures1.getAcousticness();
      assertNull(float1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      Integer integer0 = audioFeatures0.getKey();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Float float0 = new Float((-1.0));
      Float.isFinite(1115.1011F);
      audioFeatures_Builder0.setInstrumentalness(float0);
      AudioFeatures audioFeatures0 = audioFeatures_Builder0.build();
      audioFeatures0.builder();
      audioFeatures_Builder0.setValence(float0);
      audioFeatures0.builder();
      audioFeatures0.getTimeSignature();
      audioFeatures0.builder();
      audioFeatures0.getTrackHref();
      audioFeatures0.getUri();
      audioFeatures0.getKey();
      audioFeatures0.getSpeechiness();
      audioFeatures0.getMode();
      audioFeatures0.getTimeSignature();
      Float float1 = audioFeatures0.getInstrumentalness();
      Float.min(0.0F, 0.0F);
      Float.min((-2078.0466F), (-2078.0466F));
      audioFeatures_Builder0.setLiveness(float1);
      audioFeatures0.getTempo();
      audioFeatures0.getValence();
      audioFeatures0.getKey();
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      JsonObject jsonObject2 = jsonObject1.getAsJsonObject();
      jsonObject2.getAsJsonObject("q+r3t@");
      audioFeatures_JsonUtil0.createModelObject((JsonObject) null);
      audioFeatures0.getTimeSignature();
      Float float2 = audioFeatures0.getSpeechiness();
      assertNull(float2);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject0);
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      audioFeatures0.getDanceability();
      jsonObject0.getAsJsonArray("");
      audioFeatures_JsonUtil0.createModelObjectPaging(jsonObject0);
      // Undeclared exception!
      try { 
        jsonObject0.getAsByte();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // JsonObject
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      Integer integer0 = new Integer((-1));
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setTimeSignature(integer0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setId("I)+t#F$");
      AudioFeatures audioFeatures0 = audioFeatures_Builder2.build();
      audioFeatures0.getId();
      audioFeatures0.getDurationMs();
      Float float0 = new Float(0.0F);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setEnergy(float0);
      assertSame(audioFeatures_Builder3, audioFeatures_Builder2);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      AudioFeatures.Builder audioFeatures_Builder0 = new AudioFeatures.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setType(modelObjectType0);
      Float float0 = new Float(1.0);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setValence(float0);
      Modality modality0 = Modality.MINOR;
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setMode(modality0);
      Float float1 = new Float((-3443.676F));
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setTempo(float1);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setInstrumentalness((Float) null);
      Float float2 = new Float((-1867.5249F));
      Float.sum(0.0F, (-1890.8F));
      audioFeatures_Builder3.setAcousticness(float2);
      AudioFeatures audioFeatures0 = audioFeatures_Builder4.build();
      audioFeatures0.getSpeechiness();
      Float.sum(0.0F, 2386.914F);
      Float float3 = new Float((double) 2386.914F);
      audioFeatures_Builder4.setTempo(float3);
      audioFeatures_Builder3.setId("-~\"JH*KZ<w8EbBq/");
      audioFeatures0.getValence();
      audioFeatures0.getAcousticness();
      Float float4 = new Float((-3443.676F));
      audioFeatures_Builder2.setDanceability(float4);
      audioFeatures_Builder0.setEnergy((Float) null);
      Modality modality1 = Modality.MAJOR;
      audioFeatures_Builder4.setMode(modality1);
      audioFeatures0.getInstrumentalness();
      AudioFeatures.Builder audioFeatures_Builder6 = audioFeatures_Builder5.setTrackHref("H|sj");
      assertSame(audioFeatures_Builder6, audioFeatures_Builder3);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      AudioFeatures.JsonUtil audioFeatures_JsonUtil0 = new AudioFeatures.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      jsonObject0.getAsJsonPrimitive("j~|0us2+M RG*");
      AudioFeatures audioFeatures0 = audioFeatures_JsonUtil0.createModelObject(jsonObject1);
      audioFeatures0.getTrackHref();
      audioFeatures0.getKey();
      audioFeatures0.getTimeSignature();
      audioFeatures0.getKey();
      AudioFeatures.Builder audioFeatures_Builder0 = audioFeatures0.builder();
      Float float0 = new Float(3178.4136F);
      AudioFeatures.Builder audioFeatures_Builder1 = audioFeatures_Builder0.setInstrumentalness(float0);
      Float float1 = Float.valueOf(3178.4136F);
      AudioFeatures.Builder audioFeatures_Builder2 = audioFeatures_Builder1.setSpeechiness(float1);
      AudioFeatures.Builder audioFeatures_Builder3 = audioFeatures_Builder2.setKey((Integer) null);
      AudioFeatures.Builder audioFeatures_Builder4 = audioFeatures_Builder3.setDanceability(float0);
      AudioFeatures.Builder audioFeatures_Builder5 = audioFeatures_Builder4.setKey((Integer) null);
      audioFeatures0.getLoudness();
      Float.min(3178.4136F, (-3116.0F));
      audioFeatures0.builder();
      audioFeatures_Builder5.setLiveness(float1);
      audioFeatures0.getAnalysisUrl();
      audioFeatures0.getTimeSignature();
      audioFeatures0.getLiveness();
      String string0 = audioFeatures0.getId();
      assertNull(string0);
  }
}
