/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:57:58 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.wrapper.spotify.enums.ModelObjectType;
import com.wrapper.spotify.model_objects.specification.Context;
import com.wrapper.spotify.model_objects.specification.ExternalUrl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      Context context0 = context_JsonUtil0.createModelObject(jsonObject0);
      assertNull(context0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      context_Builder0.setType(modelObjectType0);
      Context.Builder context_Builder1 = context_Builder0.setUri("");
      ModelObjectType modelObjectType1 = ModelObjectType.ARTIST;
      context_Builder1.setUri("com.wrapper.spotify.model_objects.specification.Context$Builder");
      Context.Builder context_Builder2 = context_Builder1.setType(modelObjectType1);
      context_Builder2.setUri("");
      context_Builder1.setType(modelObjectType1);
      context_Builder2.setType(modelObjectType1);
      Context context0 = context_Builder0.build();
      context0.builder();
      context0.getExternalUrls();
      context0.getUri();
      context0.getType();
      context0.builder();
      String string0 = context0.getUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context.Builder context_Builder1 = context_Builder0.setUri("");
      Context.Builder context_Builder2 = context_Builder1.setHref("");
      ModelObjectType modelObjectType0 = ModelObjectType.AUDIO_FEATURES;
      Context.Builder context_Builder3 = context_Builder2.setType(modelObjectType0);
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false).when(jsonObject0).has(anyString());
      Context context0 = context_JsonUtil0.createModelObject(jsonObject0);
      context0.getExternalUrls();
      Context.Builder context_Builder4 = context_Builder3.setExternalUrls((ExternalUrl) null);
      Context context1 = context_Builder4.build();
      String string0 = context1.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      context_Builder0.setType(modelObjectType0);
      Context.Builder context_Builder1 = context_Builder0.setUri("");
      ModelObjectType modelObjectType1 = ModelObjectType.ARTIST;
      context_Builder1.setUri("com.wrapper.spotify.model_objects.specification.Context$Builder");
      Context.Builder context_Builder2 = context_Builder1.setType(modelObjectType1);
      context_Builder1.setType(modelObjectType1);
      context_Builder2.setType(modelObjectType1);
      context_Builder2.setHref("me(msygKUBf}Jb0iE1");
      Context context0 = context_Builder0.build();
      context0.builder();
      context0.getExternalUrls();
      context0.getUri();
      context0.getExternalUrls();
      context0.getType();
      context0.builder();
      String string0 = context0.getUri();
      assertEquals("com.wrapper.spotify.model_objects.specification.Context$Builder", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      Context context0 = context_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(context0);
      
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      Context context1 = context_JsonUtil0.createModelObject(jsonObject0);
      assertNull(context1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context.Builder context_Builder1 = context_Builder0.setHref((String) null);
      Context.Builder context_Builder2 = context_Builder0.setUri("w<wdZ)Ji:?=_=t");
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      Context.Builder context_Builder3 = context_Builder2.setType(modelObjectType0);
      context_Builder0.build();
      Context context0 = context_Builder2.build();
      context0.getExternalUrls();
      context_Builder3.setExternalUrls((ExternalUrl) null);
      context_Builder2.setExternalUrls((ExternalUrl) null);
      Context.Builder context_Builder4 = context_Builder3.setHref("w<wdZ)Ji:?=_=t");
      context_Builder4.build();
      Context context1 = context_Builder4.build();
      context0.builder();
      Context.Builder context_Builder5 = context1.builder();
      Context.Builder context_Builder6 = context_Builder3.setType(modelObjectType0);
      context_Builder4.build();
      context1.getHref();
      Context.Builder context_Builder7 = context_Builder2.setExternalUrls((ExternalUrl) null);
      context_Builder4.setUri("AUDIO_FEATURES");
      context1.getUri();
      context0.builder();
      context1.getHref();
      context0.getExternalUrls();
      Context.Builder context_Builder8 = context_Builder6.setType(modelObjectType0);
      context_Builder1.setExternalUrls((ExternalUrl) null);
      Context context2 = context_Builder7.build();
      context_Builder5.build();
      context2.getExternalUrls();
      Context.Builder context_Builder9 = context_Builder8.setUri("fLq");
      assertSame(context_Builder9, context_Builder2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context context0 = context_Builder0.build();
      Context.Builder context_Builder1 = context0.builder();
      Context.Builder context_Builder2 = context0.builder();
      context0.getUri();
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      Context.Builder context_Builder3 = context_Builder2.setType(modelObjectType0);
      assertFalse(context_Builder3.equals((Object)context_Builder1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context context0 = context_Builder0.build();
      context0.builder();
      context0.builder();
      context0.getUri();
      context_Builder0.setUri((String) null);
      ExternalUrl externalUrl0 = context0.getExternalUrls();
      assertNull(externalUrl0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false).when(jsonObject0).has(anyString());
      context_JsonUtil0.createModelObject(jsonObject0);
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject1).isJsonNull();
      doReturn(false, false, false, false).when(jsonObject1).has(anyString());
      Context context0 = context_JsonUtil0.createModelObject(jsonObject1);
      JsonObject jsonObject2 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject2).isJsonNull();
      doReturn(false, false, false, false).when(jsonObject2).has(anyString());
      Context context1 = context_JsonUtil0.createModelObject(jsonObject2);
      Context.Builder context_Builder0 = context0.builder();
      Context.Builder context_Builder1 = context0.builder();
      Context.Builder context_Builder2 = new Context.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      Context.Builder context_Builder3 = context_Builder2.setType(modelObjectType0);
      Context.Builder context_Builder4 = context_Builder3.setUri("<7\"oiMkj^ =3?5");
      JsonObject jsonObject3 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject3).isJsonNull();
      doReturn(false, false, false, false).when(jsonObject3).has(anyString());
      Context context2 = context_JsonUtil0.createModelObject(jsonObject3);
      context2.getExternalUrls();
      context_Builder4.setExternalUrls((ExternalUrl) null);
      ModelObjectType modelObjectType1 = ModelObjectType.AUDIO_FEATURES;
      context_Builder3.setType(modelObjectType1);
      context_Builder4.setHref("4^633>[");
      context1.getUri();
      context_Builder3.setUri((String) null);
      Context.Builder context_Builder5 = context_Builder0.setType(modelObjectType0);
      Context.Builder context_Builder6 = context_Builder1.setUri("j.hlvAG3;]<");
      assertFalse(context_Builder6.equals((Object)context_Builder5));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false).when(jsonObject0).has(anyString());
      Context context0 = context_JsonUtil0.createModelObject(jsonObject0);
      context0.getExternalUrls();
      Context.Builder context_Builder1 = context_Builder0.setExternalUrls((ExternalUrl) null);
      ModelObjectType modelObjectType0 = ModelObjectType.AUDIO_FEATURES;
      Context.Builder context_Builder2 = context_Builder1.setType(modelObjectType0);
      Context.Builder context_Builder3 = context_Builder2.setHref("com.wrapper.spotify.model_objects.specification.Context$JsonUtil");
      assertSame(context_Builder3, context_Builder0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      // Undeclared exception!
      try { 
        context_JsonUtil0.createModelObjectPagingCursorbased((JsonObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.AbstractModelObject$JsonUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context context0 = context_Builder0.build();
      context0.builder();
      context_Builder0.setUri("&Pm2>(");
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonElement0).isJsonNull();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(jsonElement0).when(jsonObject0).get(anyString());
      doReturn((JsonObject) null).when(jsonObject0).getAsJsonObject(anyString());
      doReturn(false, false, true, false).when(jsonObject0).has(anyString());
      context_JsonUtil0.createModelObject(jsonObject0);
      // Undeclared exception!
      try { 
        context_JsonUtil0.createModelObjectPagingCursorbased("external_urls");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: \"external_urls\"
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      // Undeclared exception!
      try { 
        context_JsonUtil0.createModelObject("BGqG=@4'");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 6 path $
         //
         verifyException("com.google.gson.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      Context.Builder context_Builder1 = context_Builder0.setHref("?Q(a,'B257;*3w");
      Context context0 = context_Builder0.build();
      ModelObjectType modelObjectType0 = ModelObjectType.ARTIST;
      context_Builder0.setType(modelObjectType0);
      Context context1 = context_Builder1.build();
      context0.builder();
      context0.getExternalUrls();
      Context.Builder context_Builder2 = context_Builder1.setExternalUrls((ExternalUrl) null);
      context_Builder0.build();
      Context.Builder context_Builder3 = context_Builder2.setExternalUrls((ExternalUrl) null);
      ModelObjectType modelObjectType1 = ModelObjectType.ALBUM;
      context_Builder2.setType(modelObjectType1);
      context_Builder3.setHref("?Q(a,'B257;*3w");
      context_Builder3.setType(modelObjectType0);
      context_Builder3.setUri("");
      context0.getUri();
      context1.getExternalUrls();
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      Context context2 = context_JsonUtil0.createModelObject(jsonObject0);
      assertNull(context2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Context.Builder context_Builder0 = new Context.Builder();
      context_Builder0.setUri("");
      context_Builder0.build();
      Context context0 = context_Builder0.build();
      context0.getHref();
      Context.Builder context_Builder1 = context0.builder();
      context0.builder();
      context0.getExternalUrls();
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      context_Builder0.setType(modelObjectType0);
      context0.builder();
      Context.Builder context_Builder2 = context0.builder();
      context_Builder0.setExternalUrls((ExternalUrl) null);
      Context.Builder context_Builder3 = context_Builder0.setHref("");
      context0.getType();
      Context.Builder context_Builder4 = context_Builder0.setHref("mbLU[t3 jz?\"\u0004|");
      ModelObjectType modelObjectType1 = ModelObjectType.PLAYLIST;
      Context.Builder context_Builder5 = context_Builder4.setType(modelObjectType1);
      ModelObjectType modelObjectType2 = ModelObjectType.AUDIO_FEATURES;
      Context.Builder context_Builder6 = context_Builder4.setType(modelObjectType2);
      ModelObjectType modelObjectType3 = ModelObjectType.ARTIST;
      context_Builder4.setType(modelObjectType3);
      context0.getExternalUrls();
      Context.Builder context_Builder7 = context_Builder1.setExternalUrls((ExternalUrl) null);
      Context context1 = context_Builder6.build();
      context1.builder();
      context0.getType();
      context_Builder7.setHref((String) null);
      ModelObjectType modelObjectType4 = ModelObjectType.GENRE;
      context_Builder3.setType(modelObjectType4);
      Context context2 = context_Builder3.build();
      context2.builder();
      ModelObjectType modelObjectType5 = context1.getType();
      Context.Builder context_Builder8 = context_Builder2.setType(modelObjectType5);
      assertFalse(context_Builder8.equals((Object)context_Builder5));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonElement0).isJsonNull();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(jsonElement0, (JsonElement) null).when(jsonObject0).get(anyString());
      doReturn(true).when(jsonObject0).has(anyString());
      Context.JsonUtil context_JsonUtil0 = new Context.JsonUtil();
      // Undeclared exception!
      try { 
        context_JsonUtil0.createModelObject(jsonObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.specification.Context$JsonUtil", e);
      }
  }
}
