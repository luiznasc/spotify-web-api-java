/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 23:09:50 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.gson.JsonObject;
import com.wrapper.spotify.enums.CopyrightType;
import com.wrapper.spotify.model_objects.specification.Copyright;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Copyright_ESTest extends Copyright_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Copyright.Builder copyright_Builder0 = new Copyright.Builder();
      CopyrightType copyrightType0 = CopyrightType.P;
      copyright_Builder0.setType(copyrightType0);
      Copyright copyright0 = copyright_Builder0.build();
      CopyrightType copyrightType1 = copyright0.getType();
      assertSame(copyrightType1, copyrightType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Copyright.JsonUtil copyright_JsonUtil0 = new Copyright.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      Copyright copyright0 = copyright_JsonUtil0.createModelObject(jsonObject0);
      Copyright.Builder copyright_Builder0 = copyright0.builder();
      Copyright.Builder copyright_Builder1 = copyright_Builder0.setText("nyjZ]nG]~>la:C");
      Copyright copyright1 = copyright_Builder1.build();
      String string0 = copyright1.getText();
      assertEquals("nyjZ]nG]~>la:C", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Copyright.Builder copyright_Builder0 = new Copyright.Builder();
      copyright_Builder0.setText("");
      Copyright copyright0 = copyright_Builder0.build();
      String string0 = copyright0.getText();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Copyright.JsonUtil copyright_JsonUtil0 = new Copyright.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      Boolean boolean0 = new Boolean(false);
      jsonObject0.addProperty("type", boolean0);
      Copyright copyright0 = copyright_JsonUtil0.createModelObject(jsonObject0);
      assertNull(copyright0.getText());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JsonObject jsonObject0 = new JsonObject();
      Character character0 = new Character(':');
      jsonObject0.addProperty("text", character0);
      Copyright.JsonUtil copyright_JsonUtil0 = new Copyright.JsonUtil();
      Copyright copyright0 = copyright_JsonUtil0.createModelObject(jsonObject0);
      assertEquals(":", copyright0.getText());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Copyright.JsonUtil copyright_JsonUtil0 = new Copyright.JsonUtil();
      Copyright copyright0 = copyright_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(copyright0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Copyright.Builder copyright_Builder0 = new Copyright.Builder();
      Copyright copyright0 = copyright_Builder0.build();
      copyright0.getType();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Copyright.JsonUtil copyright_JsonUtil0 = new Copyright.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      Copyright copyright0 = copyright_JsonUtil0.createModelObject(jsonObject0);
      String string0 = copyright0.getText();
      assertNull(string0);
  }
}
