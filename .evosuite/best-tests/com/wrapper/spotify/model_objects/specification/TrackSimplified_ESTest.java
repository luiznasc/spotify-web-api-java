/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:40:13 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.neovisionaries.i18n.CountryCode;
import com.wrapper.spotify.enums.ModelObjectType;
import com.wrapper.spotify.model_objects.specification.ArtistSimplified;
import com.wrapper.spotify.model_objects.specification.ExternalUrl;
import com.wrapper.spotify.model_objects.specification.TrackLink;
import com.wrapper.spotify.model_objects.specification.TrackSimplified;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TrackSimplified_ESTest extends TrackSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonElement0).isJsonNull();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(jsonElement0).when(jsonObject0).get(anyString());
      doReturn((JsonArray) null).when(jsonObject0).getAsJsonArray(anyString());
      doReturn(true).when(jsonObject0).has(anyString());
      // Undeclared exception!
      try { 
        trackSimplified_JsonUtil0.createModelObject(jsonObject0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.AbstractModelObject$JsonUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setUri("+|(%>/=*op:Jav$#");
      trackSimplified_Builder1.setId("com.wrapper.spotify.model_objects.specification.TrackSimplified");
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      // Undeclared exception!
      try { 
        trackSimplified_JsonUtil0.createModelObjectPagingCursorbased("+|(%>/=*op:Jav$#", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 7 path $
         //
         verifyException("com.google.gson.JsonParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      Integer integer0 = new Integer(2503);
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setDurationMs(integer0);
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setHref("B4%+;a-vov(");
      ModelObjectType modelObjectType0 = ModelObjectType.PLAYLIST;
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setType(modelObjectType0);
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setId("Malawi");
      TrackSimplified trackSimplified0 = trackSimplified_Builder4.build();
      trackSimplified0.builder();
      trackSimplified0.getDiscNumber();
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      trackSimplified_JsonUtil0.createModelObject((JsonObject) null);
      Integer integer1 = trackSimplified0.getTrackNumber();
      assertNull(integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      Integer integer0 = new Integer((-326));
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setDurationMs(integer0);
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      trackSimplified0.getIsExplicit();
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder0.setExplicit((Boolean) null);
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified0.builder();
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder2.setPreviewUrl("");
      trackSimplified0.getExternalUrls();
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setExternalUrls((ExternalUrl) null);
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder5.setHref("Serbia and Montenegro");
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[3];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      Integer integer1 = new Integer((-326));
      trackSimplified_Builder4.setTrackNumber(integer1);
      trackSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder6.setArtists(artistSimplifiedArray0);
      trackSimplified0.getLinkedFrom();
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      trackSimplified_Builder7.setType(modelObjectType0);
      trackSimplified0.getIsPlayable();
      trackSimplified_Builder3.setExplicit((Boolean) null);
      trackSimplified0.getDurationMs();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      assertNotNull(trackSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      TrackSimplified trackSimplified0 = trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getUri());
      
      Boolean boolean0 = trackSimplified0.getIsExplicit();
      assertNull(boolean0);
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getUri());
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setTrackNumber(integer0);
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setPreviewUrl((String) null);
      assertNotNull(trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setHref("");
      assertNotNull(trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder4.build();
      assertNotNull(trackSimplified1);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals("", trackSimplified1.getHref());
      assertEquals(0, (int)trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified1, trackSimplified0);
      
      String string0 = trackSimplified1.getUri();
      assertNull(string0);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals("", trackSimplified1.getHref());
      assertEquals(0, (int)trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified1, trackSimplified0);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder2.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      
      Boolean boolean1 = trackSimplified1.getIsPlayable();
      assertNull(boolean1);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals("", trackSimplified1.getHref());
      assertEquals(0, (int)trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified1, trackSimplified0);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder1.setIsPlayable((Boolean) null);
      assertNotNull(trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified1.builder();
      assertNotNull(trackSimplified_Builder7);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals("", trackSimplified1.getHref());
      assertEquals(0, (int)trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder0);
      
      trackSimplified0.getType();
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getUri());
      assertNotSame(trackSimplified0, trackSimplified1);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[1];
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder4.setId((String) null);
      assertNotNull(trackSimplified_Builder8);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder8.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder7));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder9 = trackSimplified_Builder3.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder9);
      assertEquals(1, artistSimplifiedArray0.length);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder9.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder7));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder9, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      
      String string1 = trackSimplified1.getHref();
      assertNotNull(string1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertEquals("", string1);
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals("", trackSimplified1.getHref());
      assertEquals(0, (int)trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified1, trackSimplified0);
      
      ExternalUrl externalUrl0 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getUri());
      assertNotSame(trackSimplified0, trackSimplified1);
      
      TrackSimplified.Builder trackSimplified_Builder10 = trackSimplified_Builder2.setId("");
      assertNotNull(trackSimplified_Builder10);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder7));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder7);
      
      TrackSimplified.Builder trackSimplified_Builder11 = trackSimplified_Builder9.setTrackNumber(integer0);
      assertNotNull(trackSimplified_Builder11);
      assertEquals(1, artistSimplifiedArray0.length);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder9.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder7));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder9, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder1);
      
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      TrackSimplified.Builder trackSimplified_Builder12 = trackSimplified_Builder8.setType(modelObjectType0);
      assertNotNull(trackSimplified_Builder12);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder8.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder12.equals((Object)trackSimplified_Builder7));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder12, trackSimplified_Builder7);
      
      trackSimplified0.getType();
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getUri());
      assertNotSame(trackSimplified0, trackSimplified1);
      
      TrackSimplified.Builder trackSimplified_Builder13 = trackSimplified_Builder1.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder13);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder13.equals((Object)trackSimplified_Builder7));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder13, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder12);
      
      ArtistSimplified[] artistSimplifiedArray1 = new ArtistSimplified[7];
      assertFalse(artistSimplifiedArray1.equals((Object)artistSimplifiedArray0));
      
      artistSimplifiedArray1[0] = artistSimplified0;
      artistSimplifiedArray1[1] = artistSimplified0;
      artistSimplifiedArray1[2] = artistSimplified0;
      artistSimplifiedArray1[3] = artistSimplified0;
      artistSimplifiedArray1[4] = artistSimplified0;
      artistSimplifiedArray1[5] = artistSimplified0;
      artistSimplifiedArray1[6] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder14 = trackSimplified_Builder5.setArtists(artistSimplifiedArray1);
      assertNotNull(trackSimplified_Builder14);
      assertEquals(7, artistSimplifiedArray1.length);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder14.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder7));
      assertFalse(artistSimplifiedArray1.equals((Object)artistSimplifiedArray0));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder14);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder14);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder14, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder14, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder14);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder14);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder12);
      assertNotSame(artistSimplifiedArray1, artistSimplifiedArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[7];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      artistSimplifiedArray0[4] = artistSimplified0;
      artistSimplifiedArray0[5] = artistSimplified0;
      artistSimplifiedArray0[6] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder1);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setName("IDN");
      assertNotNull(trackSimplified_Builder2);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      
      Integer integer0 = new Integer((-1));
      assertNotNull(integer0);
      assertEquals((-1), (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder3);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder2.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder4);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder2.setUri("J");
      assertNotNull(trackSimplified_Builder5);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder5.setName("");
      assertNotNull(trackSimplified_Builder6);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      
      ModelObjectType modelObjectType0 = ModelObjectType.AUDIO_FEATURES;
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder6.setType(modelObjectType0);
      assertNotNull(trackSimplified_Builder7);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder7.build();
      assertNotNull(trackSimplified0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertEquals("J", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDiscNumber());
      assertEquals((-1), (int)trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertEquals(ModelObjectType.AUDIO_FEATURES, trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      
      String string0 = trackSimplified0.getUri();
      assertNotNull(string0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertEquals("J", string0);
      assertEquals("J", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDiscNumber());
      assertEquals((-1), (int)trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertEquals(ModelObjectType.AUDIO_FEATURES, trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      CountryCode[] countryCodeArray0 = new CountryCode[6];
      CountryCode countryCode0 = CountryCode.MA;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.DJ;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.SD;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.AN;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.UM;
      countryCodeArray0[4] = countryCode4;
      CountryCode countryCode5 = CountryCode.KM;
      countryCodeArray0[5] = countryCode5;
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      assertNotNull(trackSimplified_Builder1);
      assertEquals(6, countryCodeArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      assertNotNull(trackSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      TrackSimplified trackSimplified0 = trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getHref());
      
      ExternalUrl externalUrl0 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getHref());
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setExternalUrls((ExternalUrl) null);
      assertNotNull(trackSimplified_Builder2);
      assertEquals(6, countryCodeArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      
      Boolean boolean0 = trackSimplified0.getIsPlayable();
      assertNull(boolean0);
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getHref());
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setIsPlayable((Boolean) null);
      assertNotNull(trackSimplified_Builder3);
      assertEquals(6, countryCodeArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setId("ShwhPA`4;}\"M(rU");
      assertNotNull(trackSimplified_Builder4);
      assertEquals(6, countryCodeArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder4.build();
      assertNotNull(trackSimplified1);
      assertEquals(6, countryCodeArray0.length);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getHref());
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getName());
      assertEquals("ShwhPA`4;}\"M(rU", trackSimplified1.getId());
      assertNull(trackSimplified1.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      CountryCode[] countryCodeArray1 = trackSimplified1.getAvailableMarkets();
      assertNotNull(countryCodeArray1);
      assertEquals(6, countryCodeArray0.length);
      assertEquals(6, countryCodeArray1.length);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getHref());
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getName());
      assertEquals("ShwhPA`4;}\"M(rU", trackSimplified1.getId());
      assertNull(trackSimplified1.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(countryCodeArray0, countryCodeArray1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertSame(countryCodeArray1, countryCodeArray0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder0.build();
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified0.builder();
      assertNotNull(trackSimplified_Builder1);
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setType(modelObjectType0);
      assertNotNull(trackSimplified_Builder2);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[4];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder3);
      assertEquals(4, artistSimplifiedArray0.length);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder2.setTrackNumber((Integer) null);
      assertNotNull(trackSimplified_Builder4);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setHref("");
      assertNotNull(trackSimplified_Builder5);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder4.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder6);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder6.setHref("03q$");
      assertNotNull(trackSimplified_Builder7);
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder6.build();
      assertNotNull(trackSimplified1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals(ModelObjectType.GENRE, trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertEquals("03q$", trackSimplified1.getHref());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getUri());
      assertEquals(0, (int)trackSimplified1.getDurationMs());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified0, trackSimplified1);
      
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder2.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder8);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder8.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      String string0 = trackSimplified1.getHref();
      assertNotNull(string0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder0));
      assertEquals("03q$", string0);
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals(ModelObjectType.GENRE, trackSimplified1.getType());
      assertNull(trackSimplified1.getName());
      assertEquals("03q$", trackSimplified1.getHref());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getUri());
      assertEquals(0, (int)trackSimplified1.getDurationMs());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getHref());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder8);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      assertNotNull(trackSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      TrackSimplified trackSimplified0 = trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getName());
      
      String string0 = trackSimplified0.getUri();
      assertNull(string0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[9];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      artistSimplifiedArray0[4] = artistSimplified0;
      artistSimplifiedArray0[5] = artistSimplified0;
      artistSimplifiedArray0[6] = artistSimplified0;
      artistSimplifiedArray0[7] = artistSimplified0;
      artistSimplifiedArray0[8] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder1);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      assertNotNull(trackSimplified0);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder2);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setName("p=C");
      assertNotNull(trackSimplified_Builder3);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setUri((String) null);
      assertNotNull(trackSimplified_Builder4);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      
      Boolean boolean0 = trackSimplified0.getIsExplicit();
      assertNull(boolean0);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder5);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder5.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder6);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      
      ArtistSimplified[] artistSimplifiedArray1 = trackSimplified0.getArtists();
      assertNotNull(artistSimplifiedArray1);
      assertEquals(9, artistSimplifiedArray0.length);
      assertEquals(9, artistSimplifiedArray1.length);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(artistSimplifiedArray0, artistSimplifiedArray1);
      assertSame(artistSimplifiedArray1, artistSimplifiedArray0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      Boolean boolean1 = trackSimplified0.getIsExplicit();
      assertNull(boolean1);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(artistSimplifiedArray0, artistSimplifiedArray1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder2.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder7);
      assertEquals(9, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(artistSimplifiedArray0, artistSimplifiedArray1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setPreviewUrl("");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[7];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      artistSimplifiedArray0[4] = artistSimplified0;
      artistSimplifiedArray0[5] = artistSimplified0;
      artistSimplifiedArray0[6] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder2);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      
      Integer integer0 = new Integer((-2671));
      assertNotNull(integer0);
      assertEquals((-2671), (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setDiscNumber(integer0);
      assertNotNull(trackSimplified_Builder3);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setName("");
      assertNotNull(trackSimplified_Builder4);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder4.build();
      assertNotNull(trackSimplified0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getUri());
      assertEquals("", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals((-2671), (int)trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setId("");
      assertNotNull(trackSimplified_Builder5);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      Boolean boolean0 = trackSimplified0.getIsPlayable();
      assertNull(boolean0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getUri());
      assertEquals("", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals((-2671), (int)trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder4.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder6);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getUri());
      assertEquals("", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals((-2671), (int)trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder3.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder7);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      ExternalUrl externalUrl0 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getUri());
      assertEquals("", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals((-2671), (int)trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      assertNotNull(trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder9 = trackSimplified_Builder6.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder9);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      
      TrackSimplified.Builder trackSimplified_Builder10 = trackSimplified_Builder2.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder10);
      assertEquals(7, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      
      Integer integer1 = trackSimplified0.getTrackNumber();
      assertNull(integer1);
      assertEquals(7, artistSimplifiedArray0.length);
      assertNull(trackSimplified0.getType());
      assertEquals("", trackSimplified0.getName());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getUri());
      assertEquals("", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals((-2671), (int)trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder7.build();
      assertNotNull(trackSimplified1);
      assertEquals(7, artistSimplifiedArray0.length);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertEquals((-2671), (int)trackSimplified1.getDiscNumber());
      assertEquals((-2671), (int)trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertEquals("", trackSimplified1.getName());
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getHref());
      assertNull(trackSimplified1.getTrackNumber());
      assertEquals("", trackSimplified1.getId());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getUri());
      assertEquals("", trackSimplified1.getPreviewUrl());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      String string0 = trackSimplified1.getPreviewUrl();
      assertNotNull(string0);
      assertEquals(7, artistSimplifiedArray0.length);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertEquals("", string0);
      assertEquals((-2671), (int)trackSimplified1.getDiscNumber());
      assertEquals((-2671), (int)trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getType());
      assertEquals("", trackSimplified1.getName());
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getHref());
      assertNull(trackSimplified1.getTrackNumber());
      assertEquals("", trackSimplified1.getId());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getUri());
      assertEquals("", trackSimplified1.getPreviewUrl());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified2 = trackSimplified_Builder7.build();
      assertNotNull(trackSimplified2);
      assertEquals(7, artistSimplifiedArray0.length);
      assertFalse(trackSimplified2.equals((Object)trackSimplified0));
      assertFalse(trackSimplified2.equals((Object)trackSimplified1));
      assertEquals("", trackSimplified2.getPreviewUrl());
      assertNull(trackSimplified2.getIsExplicit());
      assertNull(trackSimplified2.getHref());
      assertNull(trackSimplified2.getUri());
      assertEquals("", trackSimplified2.getName());
      assertNull(trackSimplified2.getType());
      assertEquals((-2671), (int)trackSimplified2.getDurationMs());
      assertEquals((-2671), (int)trackSimplified2.getDiscNumber());
      assertNull(trackSimplified2.getIsPlayable());
      assertEquals("", trackSimplified2.getId());
      assertNull(trackSimplified2.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertNotSame(trackSimplified2, trackSimplified0);
      assertNotSame(trackSimplified2, trackSimplified1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      ExternalUrl externalUrl1 = trackSimplified2.getExternalUrls();
      assertNull(externalUrl1);
      assertEquals(7, artistSimplifiedArray0.length);
      assertFalse(trackSimplified2.equals((Object)trackSimplified0));
      assertFalse(trackSimplified2.equals((Object)trackSimplified1));
      assertEquals("", trackSimplified2.getPreviewUrl());
      assertNull(trackSimplified2.getIsExplicit());
      assertNull(trackSimplified2.getHref());
      assertNull(trackSimplified2.getUri());
      assertEquals("", trackSimplified2.getName());
      assertNull(trackSimplified2.getType());
      assertEquals((-2671), (int)trackSimplified2.getDurationMs());
      assertEquals((-2671), (int)trackSimplified2.getDiscNumber());
      assertNull(trackSimplified2.getIsPlayable());
      assertEquals("", trackSimplified2.getId());
      assertNull(trackSimplified2.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertNotSame(trackSimplified2, trackSimplified0);
      assertNotSame(trackSimplified2, trackSimplified1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setUri("ZSM2_");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setArtists((ArtistSimplified[]) null);
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder0.setName("wd@");
      assertNotNull(trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder1.setId("");
      assertNotNull(trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder1.setId((String) null);
      assertNotNull(trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      assertNotNull(trackSimplified0);
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      Integer integer0 = new Integer(531);
      assertNotNull(integer0);
      assertEquals(531, (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified0.builder();
      assertNotNull(trackSimplified_Builder6);
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder0));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder1.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder7);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder6));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder6);
      
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder1.setDiscNumber(integer0);
      assertNotNull(trackSimplified_Builder8);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder8.equals((Object)trackSimplified_Builder6));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      
      TrackSimplified.Builder trackSimplified_Builder9 = trackSimplified_Builder1.setType(modelObjectType0);
      assertNotNull(trackSimplified_Builder9);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder9.equals((Object)trackSimplified_Builder6));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder7);
      
      TrackSimplified.Builder trackSimplified_Builder10 = trackSimplified0.builder();
      assertNotNull(trackSimplified_Builder10);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder7));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder7);
      
      Integer integer1 = trackSimplified0.getDiscNumber();
      assertNull(integer1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      String string0 = trackSimplified0.getName();
      assertNotNull(string0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", string0);
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      String string1 = trackSimplified0.getId();
      assertNull(string1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      String string2 = trackSimplified0.getPreviewUrl();
      assertNull(string2);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      Boolean boolean0 = trackSimplified0.getIsExplicit();
      assertNull(boolean0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      TrackSimplified.Builder trackSimplified_Builder11 = trackSimplified_Builder1.setIsPlayable((Boolean) null);
      assertNotNull(trackSimplified_Builder11);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder6));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder5);
      
      Boolean boolean1 = trackSimplified0.getIsPlayable();
      assertNull(boolean1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      TrackSimplified.Builder trackSimplified_Builder12 = trackSimplified_Builder2.setIsPlayable((Boolean) null);
      assertNotNull(trackSimplified_Builder12);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder12.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder12.equals((Object)trackSimplified_Builder6));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder12, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder12, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder12, trackSimplified_Builder0);
      
      trackSimplified0.getType();
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertEquals("wd@", trackSimplified0.getName());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertEquals("ZSM2_", trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      
      TrackSimplified.Builder trackSimplified_Builder13 = trackSimplified_Builder11.setDiscNumber((Integer) null);
      assertNotNull(trackSimplified_Builder13);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder13.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder13.equals((Object)trackSimplified_Builder6));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder13);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder12);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder13, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder13, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder13, trackSimplified_Builder6);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder0.build();
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified0.builder();
      assertNotNull(trackSimplified_Builder1);
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      Boolean boolean0 = trackSimplified0.getIsExplicit();
      assertNull(boolean0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder2);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setId("woj8Yqzi=N4U");
      assertNotNull(trackSimplified_Builder3);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder0.setAvailableMarkets((CountryCode[]) null);
      assertNotNull(trackSimplified_Builder4);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder3));
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder3.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder5);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder4));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      Integer integer0 = new Integer(347);
      assertNotNull(integer0);
      assertEquals(347, (int)integer0);
      
      ExternalUrl externalUrl0 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder3.setExternalUrls((ExternalUrl) null);
      assertNotNull(trackSimplified_Builder6);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder6.equals((Object)trackSimplified_Builder4));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder5.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder7);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder7.equals((Object)trackSimplified_Builder4));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder7, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder5.setType(modelObjectType0);
      assertNotNull(trackSimplified_Builder8);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder8.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder8.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder8, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder9 = trackSimplified_Builder5.setPreviewUrl("woj8Yqzi=N4U");
      assertNotNull(trackSimplified_Builder9);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder9.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder9.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder9, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder5.build();
      assertNotNull(trackSimplified1);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder4));
      assertEquals("woj8Yqzi=N4U", trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getUri());
      assertEquals("woj8Yqzi=N4U", trackSimplified1.getId());
      assertNull(trackSimplified1.getHref());
      assertEquals(347, (int)trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals(ModelObjectType.TRACK, trackSimplified1.getType());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified1, trackSimplified0);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      
      String string0 = trackSimplified0.getName();
      assertNull(string0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
      
      Boolean boolean1 = trackSimplified0.getIsPlayable();
      assertNull(boolean1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
      
      TrackSimplified.Builder trackSimplified_Builder10 = trackSimplified_Builder3.setTrackNumber(integer0);
      assertNotNull(trackSimplified_Builder10);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder11 = trackSimplified_Builder10.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder11);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder10.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder11.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder11, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      
      String string1 = trackSimplified1.getId();
      assertNotNull(string1);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder11));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder4));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder4));
      assertEquals("woj8Yqzi=N4U", string1);
      assertEquals("woj8Yqzi=N4U", trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getUri());
      assertEquals("woj8Yqzi=N4U", trackSimplified1.getId());
      assertNull(trackSimplified1.getHref());
      assertEquals(347, (int)trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getIsExplicit());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getIsPlayable());
      assertEquals(ModelObjectType.TRACK, trackSimplified1.getType());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified1, trackSimplified0);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      
      trackSimplified0.getType();
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder5));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder8));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder11));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder7));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder9));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder10));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder6));
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertNotSame(trackSimplified0, trackSimplified1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setUri("XLK+9=DDXz`L-tH");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      Integer integer0 = new Integer(3313);
      assertNotNull(integer0);
      assertEquals(3313, (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setDiscNumber(integer0);
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      CountryCode[] countryCodeArray0 = new CountryCode[3];
      CountryCode countryCode0 = CountryCode.VU;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.PL;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.SM;
      countryCodeArray0[2] = countryCode2;
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setAvailableMarkets(countryCodeArray0);
      assertNotNull(trackSimplified_Builder3);
      assertEquals(3, countryCodeArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      
      Integer integer1 = new Integer((-140));
      assertNotNull(integer1);
      assertFalse(integer1.equals((Object)integer0));
      assertEquals((-140), (int)integer1);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setDurationMs(integer1);
      assertNotNull(trackSimplified_Builder4);
      assertEquals(3, countryCodeArray0.length);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer1.equals((Object)integer0));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setPreviewUrl("XLK+9=DDXz`L-tH");
      assertNotNull(trackSimplified_Builder5);
      assertEquals(3, countryCodeArray0.length);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer1.equals((Object)integer0));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder5.build();
      assertNotNull(trackSimplified0);
      assertEquals(3, countryCodeArray0.length);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals("XLK+9=DDXz`L-tH", trackSimplified0.getUri());
      assertEquals(3313, (int)trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertEquals((-140), (int)trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertEquals("XLK+9=DDXz`L-tH", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      
      Boolean boolean0 = trackSimplified0.getIsPlayable();
      assertNull(boolean0);
      assertEquals(3, countryCodeArray0.length);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer1.equals((Object)integer0));
      assertEquals("XLK+9=DDXz`L-tH", trackSimplified0.getUri());
      assertEquals(3313, (int)trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertEquals((-140), (int)trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertEquals("XLK+9=DDXz`L-tH", trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder5.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder6);
      assertEquals(3, countryCodeArray0.length);
      assertFalse(integer0.equals((Object)integer1));
      assertFalse(integer1.equals((Object)integer0));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder0.build();
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setHref("ap([!hNBJ=?{fQ#o=P7");
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder0.setName("track_number");
      assertNotNull(trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder1.setUri("%jbwKN1");
      assertNotNull(trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      ExternalUrl externalUrl0 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder1.setExternalUrls((ExternalUrl) null);
      assertNotNull(trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      
      Integer integer0 = trackSimplified0.getDiscNumber();
      assertNull(integer0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      
      TrackLink trackLink1 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink1);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder0.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder0.setUri(")'j~0SN7C$Y47* %");
      assertNotNull(trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      
      Integer integer1 = trackSimplified0.getDurationMs();
      assertNull(integer1);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder1.setName("7tx.'aO j");
      assertNotNull(trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      
      CountryCode[] countryCodeArray0 = new CountryCode[9];
      CountryCode countryCode0 = CountryCode.MP;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.GS;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.BG;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.GE;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.BM;
      countryCodeArray0[4] = countryCode4;
      CountryCode countryCode5 = CountryCode.AO;
      countryCodeArray0[5] = countryCode5;
      CountryCode countryCode6 = CountryCode.NC;
      countryCodeArray0[6] = countryCode6;
      CountryCode countryCode7 = CountryCode.MY;
      countryCodeArray0[7] = countryCode7;
      CountryCode countryCode8 = CountryCode.CH;
      countryCodeArray0[8] = countryCode8;
      TrackSimplified.Builder trackSimplified_Builder9 = trackSimplified_Builder1.setAvailableMarkets(countryCodeArray0);
      assertNotNull(trackSimplified_Builder9);
      assertEquals(9, countryCodeArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      
      String string0 = trackSimplified0.getPreviewUrl();
      assertNull(string0);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      
      ExternalUrl externalUrl1 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl1);
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder1.build();
      assertNotNull(trackSimplified1);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertEquals("7tx.'aO j", trackSimplified1.getName());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getId());
      assertNull(trackSimplified1.getIsExplicit());
      assertEquals(")'j~0SN7C$Y47* %", trackSimplified1.getUri());
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified1.getDurationMs());
      assertEquals("ap([!hNBJ=?{fQ#o=P7", trackSimplified1.getHref());
      assertNull(trackSimplified1.getType());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertNotSame(trackSimplified1, trackSimplified0);
      
      Integer integer2 = trackSimplified0.getDiscNumber();
      assertNull(integer2);
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertNotSame(trackSimplified0, trackSimplified1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setHref("v}K`u");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals("v}K`u", trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals("v}K`u", trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setId("v}K`u");
      assertNotNull(trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      
      Integer integer0 = new Integer(370);
      assertNotNull(integer0);
      assertEquals(370, (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setTrackNumber(integer0);
      assertNotNull(trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setArtists((ArtistSimplified[]) null);
      assertNotNull(trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[0];
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder4.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder6);
      assertEquals(0, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      
      ExternalUrl externalUrl0 = trackSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals("v}K`u", trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder7 = trackSimplified_Builder6.setExternalUrls((ExternalUrl) null);
      assertNotNull(trackSimplified_Builder7);
      assertEquals(0, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder8 = trackSimplified_Builder1.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder8);
      assertEquals(0, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder8, trackSimplified_Builder3);
      
      CountryCode[] countryCodeArray0 = trackSimplified0.getAvailableMarkets();
      assertNull(countryCodeArray0);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertEquals("v}K`u", trackSimplified0.getHref());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getTrackNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      
      TrackSimplified.Builder trackSimplified_Builder9 = trackSimplified_Builder4.setId("gJcpd>JT0");
      assertNotNull(trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder9, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder10 = trackSimplified_Builder7.setArtists(artistSimplifiedArray0);
      assertNotNull(trackSimplified_Builder10);
      assertEquals(0, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder2.build();
      assertNotNull(trackSimplified1);
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getType());
      assertEquals("gJcpd>JT0", trackSimplified1.getId());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getDiscNumber());
      assertEquals(370, (int)trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getIsExplicit());
      assertEquals("v}K`u", trackSimplified1.getHref());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified1, trackSimplified0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      
      CountryCode[] countryCodeArray1 = new CountryCode[9];
      CountryCode countryCode0 = CountryCode.IC;
      countryCodeArray1[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.EA;
      countryCodeArray1[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.AE;
      countryCodeArray1[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.LU;
      countryCodeArray1[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.KE;
      countryCodeArray1[4] = countryCode4;
      CountryCode countryCode5 = CountryCode.EA;
      countryCodeArray1[5] = countryCode5;
      CountryCode countryCode6 = CountryCode.SC;
      countryCodeArray1[6] = countryCode6;
      CountryCode countryCode7 = CountryCode.GT;
      countryCodeArray1[7] = countryCode7;
      CountryCode countryCode8 = CountryCode.HM;
      countryCodeArray1[8] = countryCode8;
      TrackSimplified.Builder trackSimplified_Builder11 = trackSimplified_Builder10.setAvailableMarkets(countryCodeArray1);
      assertNotNull(trackSimplified_Builder11);
      assertEquals(9, countryCodeArray1.length);
      assertEquals(0, artistSimplifiedArray0.length);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder10, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder11, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder7);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder10);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder11);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder8);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder9);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder7, trackSimplified_Builder0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setHref("SY");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      Integer integer0 = new Integer((-727));
      assertNotNull(integer0);
      assertEquals((-727), (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setDurationMs(integer0);
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setTrackNumber(integer0);
      assertNotNull(trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      assertNotNull(trackSimplified0);
      assertEquals((-727), (int)trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertEquals((-727), (int)trackSimplified0.getTrackNumber());
      assertEquals("SY", trackSimplified0.getHref());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      Boolean boolean0 = trackSimplified0.getIsPlayable();
      assertNull(boolean0);
      assertEquals((-727), (int)trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertEquals((-727), (int)trackSimplified0.getTrackNumber());
      assertEquals("SY", trackSimplified0.getHref());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder0.setType(modelObjectType0);
      assertNotNull(trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      
      ModelObjectType modelObjectType1 = ModelObjectType.ALBUM;
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder4.setType(modelObjectType1);
      assertNotNull(trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(modelObjectType1, modelObjectType0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      Integer integer0 = new Integer(0);
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setDiscNumber(integer0);
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder0.build();
      assertNotNull(trackSimplified0);
      assertEquals(0, (int)trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      
      TrackLink trackLink0 = trackSimplified0.getLinkedFrom();
      assertNull(trackLink0);
      assertEquals(0, (int)trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setLinkedFrom((TrackLink) null);
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setHref("e=");
      assertNotNull(trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      
      Boolean boolean0 = trackSimplified0.getIsExplicit();
      assertNull(boolean0);
      assertEquals(0, (int)trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getHref());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setIsPlayable((Boolean) null);
      assertNotNull(trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      
      Integer integer1 = new Integer(0);
      assertNotNull(integer1);
      assertTrue(integer1.equals((Object)integer0));
      assertEquals(0, (int)integer1);
      
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder5.setDurationMs(integer1);
      assertNotNull(trackSimplified_Builder6);
      assertTrue(integer0.equals((Object)integer1));
      assertTrue(integer1.equals((Object)integer0));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder5, trackSimplified_Builder6);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder5);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder6, trackSimplified_Builder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setId("");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified0 = trackSimplified_Builder0.build();
      assertNotNull(trackSimplified0);
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertEquals("", trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified0.builder();
      assertNotNull(trackSimplified_Builder2);
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertEquals("", trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      
      Boolean boolean0 = trackSimplified0.getIsExplicit();
      assertNull(boolean0);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertEquals("", trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder1.setExplicit((Boolean) null);
      assertNotNull(trackSimplified_Builder3);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder2));
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      
      TrackSimplified trackSimplified1 = trackSimplified_Builder3.build();
      assertNotNull(trackSimplified1);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder1.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified_Builder3.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified1.equals((Object)trackSimplified0));
      assertNull(trackSimplified1.getIsPlayable());
      assertNull(trackSimplified1.getName());
      assertNull(trackSimplified1.getTrackNumber());
      assertNull(trackSimplified1.getPreviewUrl());
      assertNull(trackSimplified1.getIsExplicit());
      assertEquals("", trackSimplified1.getId());
      assertNull(trackSimplified1.getUri());
      assertNull(trackSimplified1.getDurationMs());
      assertNull(trackSimplified1.getDiscNumber());
      assertNull(trackSimplified1.getType());
      assertNull(trackSimplified1.getHref());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder3, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder3, trackSimplified_Builder0);
      assertNotSame(trackSimplified1, trackSimplified0);
      
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder2.setHref("");
      assertNotNull(trackSimplified_Builder4);
      assertFalse(trackSimplified_Builder0.equals((Object)trackSimplified_Builder2));
      assertFalse(trackSimplified0.equals((Object)trackSimplified1));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder1));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder2.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder3));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder0));
      assertFalse(trackSimplified_Builder4.equals((Object)trackSimplified_Builder1));
      assertNull(trackSimplified0.getUri());
      assertNull(trackSimplified0.getPreviewUrl());
      assertNull(trackSimplified0.getHref());
      assertEquals("", trackSimplified0.getId());
      assertNull(trackSimplified0.getIsExplicit());
      assertNull(trackSimplified0.getTrackNumber());
      assertNull(trackSimplified0.getIsPlayable());
      assertNull(trackSimplified0.getDiscNumber());
      assertNull(trackSimplified0.getDurationMs());
      assertNull(trackSimplified0.getType());
      assertNull(trackSimplified0.getName());
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder4);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder3);
      assertNotSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertNotSame(trackSimplified0, trackSimplified1);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder1);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder4);
      assertNotSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder3);
      assertSame(trackSimplified_Builder4, trackSimplified_Builder2);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder0);
      assertNotSame(trackSimplified_Builder4, trackSimplified_Builder1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      assertNotNull(trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setId("artists");
      assertNotNull(trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setHref("Tonga");
      assertNotNull(trackSimplified_Builder2);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder1);
      assertSame(trackSimplified_Builder0, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder2);
      assertSame(trackSimplified_Builder1, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder0);
      assertSame(trackSimplified_Builder2, trackSimplified_Builder1);
      
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      assertNotNull(trackSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        trackSimplified_JsonUtil0.createModelObjectArray("640g44vxX", "Tonga");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: \"640g44vxX\"
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setId("explicit");
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      trackSimplified0.builder();
      trackSimplified0.getPreviewUrl();
      trackSimplified_Builder0.setUri((String) null);
      Integer integer0 = new Integer(0);
      trackSimplified_Builder1.setDurationMs(integer0);
      trackSimplified0.getIsPlayable();
      trackSimplified_Builder0.setExplicit((Boolean) null);
      trackSimplified0.getId();
      trackSimplified0.getDurationMs();
      trackSimplified0.getHref();
      trackSimplified0.getLinkedFrom();
      trackSimplified0.getName();
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = false;
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonElement0).isJsonNull();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(jsonElement0).when(jsonObject0).get(anyString());
      doReturn((JsonArray) null).when(jsonObject0).getAsJsonArray(anyString());
      doReturn(false, true, false, false, false).when(jsonObject0).has(anyString());
      trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      boolean boolean3 = true;
      boolean boolean4 = false;
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn((JsonElement) null).when(jsonObject1).get(anyString());
      doReturn(boolean1).when(jsonObject1).has(anyString());
      // Undeclared exception!
      try { 
        trackSimplified_JsonUtil0.createModelObjectPaging(jsonObject1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.model_objects.AbstractModelObject$JsonUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      TrackSimplified trackSimplified0 = trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      trackSimplified0.getTrackNumber();
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setName("TA");
      CountryCode[] countryCodeArray0 = new CountryCode[7];
      CountryCode countryCode0 = CountryCode.BT;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.BU;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.KZ;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.BV;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.MO;
      countryCodeArray0[4] = countryCode4;
      CountryCode countryCode5 = CountryCode.IS;
      countryCodeArray0[5] = countryCode5;
      CountryCode countryCode6 = CountryCode.ST;
      countryCodeArray0[6] = countryCode6;
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setAvailableMarkets(countryCodeArray0);
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[4];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setArtists(artistSimplifiedArray0);
      trackSimplified0.getLinkedFrom();
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setLinkedFrom((TrackLink) null);
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setId("");
      TrackSimplified.Builder trackSimplified_Builder6 = trackSimplified_Builder5.setId("");
      assertSame(trackSimplified_Builder3, trackSimplified_Builder6);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      TrackSimplified trackSimplified0 = trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      TrackSimplified.Builder trackSimplified_Builder0 = trackSimplified0.builder();
      Integer integer0 = new Integer(0);
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setTrackNumber(integer0);
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setUri("");
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[1];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      trackSimplified_Builder0.setArtists(artistSimplifiedArray0);
      trackSimplified0.builder();
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder2.setDiscNumber(integer0);
      trackSimplified_Builder3.setName((String) null);
      CountryCode[] countryCodeArray0 = new CountryCode[1];
      trackSimplified_Builder1.setName("");
      CountryCode countryCode0 = CountryCode.TR;
      trackSimplified0.builder();
      countryCodeArray0[0] = countryCode0;
      trackSimplified_Builder1.setAvailableMarkets(countryCodeArray0);
      trackSimplified0.getPreviewUrl();
      trackSimplified_Builder1.setDurationMs(integer0);
      ArtistSimplified[] artistSimplifiedArray1 = trackSimplified0.getArtists();
      assertNull(artistSimplifiedArray1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.PLAYLIST;
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setType(modelObjectType0);
      TrackSimplified trackSimplified0 = trackSimplified_Builder1.build();
      Integer integer0 = new Integer((-2321));
      trackSimplified_Builder0.setTrackNumber(integer0);
      trackSimplified0.getLinkedFrom();
      trackSimplified_Builder0.setLinkedFrom((TrackLink) null);
      trackSimplified0.getIsExplicit();
      trackSimplified_Builder1.setExplicit((Boolean) null);
      trackSimplified0.builder();
      trackSimplified_Builder1.setUri("Rwanda");
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified0.builder();
      trackSimplified0.getLinkedFrom();
      trackSimplified_Builder1.setLinkedFrom((TrackLink) null);
      trackSimplified_Builder1.setName((String) null);
      Integer integer1 = new Integer(0);
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder0.setDiscNumber(integer1);
      TrackSimplified trackSimplified1 = trackSimplified_Builder3.build();
      trackSimplified1.builder();
      trackSimplified0.getDurationMs();
      trackSimplified1.getId();
      trackSimplified_Builder0.setName((String) null);
      trackSimplified0.getPreviewUrl();
      TrackSimplified.JsonUtil trackSimplified_JsonUtil0 = new TrackSimplified.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      trackSimplified_JsonUtil0.createModelObject(jsonObject0);
      trackSimplified1.getExternalUrls();
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder2.setExternalUrls((ExternalUrl) null);
      trackSimplified_Builder4.setHref((String) null);
      ExternalUrl externalUrl0 = trackSimplified1.getExternalUrls();
      assertNull(externalUrl0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      TrackSimplified trackSimplified0 = trackSimplified_Builder0.build();
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified0.builder();
      trackSimplified0.getLinkedFrom();
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder0.setLinkedFrom((TrackLink) null);
      trackSimplified_Builder2.setName((String) null);
      trackSimplified_Builder2.setUri((String) null);
      trackSimplified_Builder2.setName("J|tG+co-r?");
      trackSimplified0.getTrackNumber();
      trackSimplified0.getExternalUrls();
      trackSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      trackSimplified0.getType();
      trackSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      trackSimplified_Builder1.setTrackNumber((Integer) null);
      TrackSimplified.Builder trackSimplified_Builder3 = trackSimplified_Builder1.setDiscNumber((Integer) null);
      trackSimplified_Builder3.setId((String) null);
      trackSimplified0.getHref();
      TrackSimplified.Builder trackSimplified_Builder4 = trackSimplified_Builder3.setDiscNumber((Integer) null);
      trackSimplified0.getType();
      trackSimplified0.getExternalUrls();
      trackSimplified0.getPreviewUrl();
      trackSimplified0.getTrackNumber();
      trackSimplified0.getDiscNumber();
      TrackSimplified.Builder trackSimplified_Builder5 = trackSimplified_Builder4.setUri("Liechtenstein");
      assertFalse(trackSimplified_Builder5.equals((Object)trackSimplified_Builder2));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TrackSimplified.Builder trackSimplified_Builder0 = new TrackSimplified.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ALBUM;
      TrackSimplified.Builder trackSimplified_Builder1 = trackSimplified_Builder0.setType(modelObjectType0);
      Integer integer0 = new Integer(0);
      trackSimplified_Builder0.setId("");
      TrackSimplified.Builder trackSimplified_Builder2 = trackSimplified_Builder1.setDurationMs(integer0);
      CountryCode[] countryCodeArray0 = new CountryCode[7];
      CountryCode countryCode0 = CountryCode.TV;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.LR;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.DE;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.GA;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.MC;
      countryCodeArray0[4] = countryCode4;
      CountryCode countryCode5 = CountryCode.ZW;
      countryCodeArray0[5] = countryCode5;
      CountryCode countryCode6 = CountryCode.EH;
      countryCodeArray0[6] = countryCode6;
      trackSimplified_Builder2.setAvailableMarkets(countryCodeArray0);
      trackSimplified_Builder2.setId("");
      TrackSimplified trackSimplified0 = trackSimplified_Builder2.build();
      ModelObjectType modelObjectType1 = trackSimplified0.getType();
      assertEquals(ModelObjectType.ALBUM, modelObjectType1);
  }
}
