/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 23:05:57 GMT 2019
 */

package com.wrapper.spotify.requests.data.player;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.wrapper.spotify.IHttpManager;
import com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest;
import org.apache.http.HttpEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StartResumeUsersPlaybackRequest_ESTest extends StartResumeUsersPlaybackRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("KvtqO#Fsp]#?/crVwZo");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.context_uri("AYGIeMz6wrU\"%T6K");
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonArray0).isJsonNull();
      doReturn((String) null).when(jsonArray0).toString();
      startResumeUsersPlaybackRequest_Builder0.setPathParameter("", "AYGIeMz6wrU\"%T6K");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.uris(jsonArray0);
      startResumeUsersPlaybackRequest_Builder2.setHost("");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.device_id("*Nmx!0{Be!H<");
      startResumeUsersPlaybackRequest_Builder3.build();
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder3.build();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "XMZHY5C=~Jn{!";
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("XMZHY5C=~Jn{!");
      int int0 = 0;
      Integer integer0 = new Integer(0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      startResumeUsersPlaybackRequest_Builder0.context_uri("XMZHY5C=~Jn{!");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.context_uri("XMZHY5C=~Jn{!");
      startResumeUsersPlaybackRequest_Builder2.setHeader("aW0MTSiB$QI/>(GkG", (Object) "XMZHY5C=~Jn{!");
      JsonArray jsonArray0 = null;
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder2.uris((JsonArray) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "org.apache.http.entity.HttpEntityWrapper";
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("org.apache.http.entity.HttpEntityWrapper");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.context_uri("org.apache.http.entity.HttpEntityWrapper");
      startResumeUsersPlaybackRequest_Builder0.setHttpManager((IHttpManager) null);
      String string1 = "g'<p2{q4";
      startResumeUsersPlaybackRequest_Builder0.device_id("g'<p2{q4");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder1.build();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wrapper.spotify.requests.AbstractRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("KglmM2lb fc");
      startResumeUsersPlaybackRequest_Builder0.setHeader("KglmM2lb fc", (Object) "KglmM2lb fc");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.offset((JsonObject) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder((String) null);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.context_uri("Parameter name");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder1.device_id((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("#u^FoDLv|M ");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder0.build();
      startResumeUsersPlaybackRequest0.getBody();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.setBody((HttpEntity) null);
      startResumeUsersPlaybackRequest_Builder0.build();
      Integer integer0 = new Integer(200);
      startResumeUsersPlaybackRequest_Builder0.position_ms(integer0);
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder1.context_uri((String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder((String) null);
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.position_ms((Integer) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("q*U+yqI_Yf1MbC?Y~3\"");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.device_id("q*U+yqI_Yf1MbC?Y~3\"");
      Integer integer0 = new Integer((-124));
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder1.position_ms(integer0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest$Builder");
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder0.context_uri("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("7I]Mi]&d{wt ");
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonArray0).isJsonNull();
      doReturn((String) null).when(jsonArray0).toString();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.uris(jsonArray0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder1.device_id("'naev0S>3WR4F^Je");
      Integer integer0 = new Integer(2917);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.position_ms(integer0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder4 = startResumeUsersPlaybackRequest_Builder3.context_uri("_.|Z");
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn((String) null).when(jsonObject0).toString();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder5 = startResumeUsersPlaybackRequest_Builder4.offset(jsonObject0);
      startResumeUsersPlaybackRequest_Builder5.setPath("");
      startResumeUsersPlaybackRequest_Builder5.setHeader("7I]Mi]&d{wt ", integer0);
      Integer integer1 = new Integer(2917);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder6 = startResumeUsersPlaybackRequest_Builder5.position_ms(integer1);
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder6.build();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest0.execute();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("image/jpeg");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.setHeader("device_id", "device_id");
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder2 = startResumeUsersPlaybackRequest_Builder0.context_uri("Connection");
      startResumeUsersPlaybackRequest_Builder1.context_uri("\"NY>MK6Rv");
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder1.build();
      startResumeUsersPlaybackRequest_Builder2.setBodyParameter("device_id", "Connection");
      startResumeUsersPlaybackRequest0.getBody();
      startResumeUsersPlaybackRequest_Builder2.setBody((HttpEntity) null);
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn((String) null).when(jsonObject0).toString();
      startResumeUsersPlaybackRequest_Builder2.offset(jsonObject0);
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder3 = startResumeUsersPlaybackRequest_Builder2.device_id("image/jpeg");
      Integer integer0 = new Integer(1796);
      startResumeUsersPlaybackRequest_Builder3.position_ms(integer0);
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonArray0).isJsonNull();
      doReturn((String) null).when(jsonArray0).toString();
      startResumeUsersPlaybackRequest_Builder3.uris(jsonArray0);
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest_Builder3.device_id("");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest";
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder0 = new StartResumeUsersPlaybackRequest.Builder("com.wrapper.spotify.requests.data.player.StartResumeUsersPlaybackRequest");
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonArray0).isJsonNull();
      doReturn((String) null).when(jsonArray0).toString();
      StartResumeUsersPlaybackRequest.Builder startResumeUsersPlaybackRequest_Builder1 = startResumeUsersPlaybackRequest_Builder0.uris(jsonArray0);
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest0 = startResumeUsersPlaybackRequest_Builder1.build();
      startResumeUsersPlaybackRequest0.getBody();
      startResumeUsersPlaybackRequest_Builder0.setBody((HttpEntity) null);
      int int0 = 0;
      StartResumeUsersPlaybackRequest startResumeUsersPlaybackRequest1 = startResumeUsersPlaybackRequest_Builder0.build();
      // Undeclared exception!
      try { 
        startResumeUsersPlaybackRequest1.deleteJson();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }
}
