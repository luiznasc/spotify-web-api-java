/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 23:01:10 GMT 2019
 */

package com.wrapper.spotify;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.wrapper.spotify.SpotifyApiThreading;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SpotifyApiThreading_ESTest extends SpotifyApiThreading_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      Future<Integer> future0 = SpotifyApiThreading.executeAsync(callable0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpotifyApiThreading spotifyApiThreading0 = new SpotifyApiThreading();
  }
}
