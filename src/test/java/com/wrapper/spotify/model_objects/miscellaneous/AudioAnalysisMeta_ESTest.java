/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:21:28 GMT 2019
 */

package com.wrapper.spotify.model_objects.miscellaneous;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AudioAnalysisMeta_ESTest extends AudioAnalysisMeta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(jsonArray0).size();
      Class<String> class0 = String.class;
      audioAnalysisMeta_JsonUtil0.createModelObjectArray(jsonArray0, class0);
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setPlatform("[FMWa3<h>u^X1/X\"#");
      Long long0 = new Long((-1166L));
      audioAnalysisMeta_Builder1.setTimestamp(long0);
      Float float0 = new Float(0.0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setAnalysisTime(float0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder1.setDetailedStatus("[FMWa3<h>u^X1/X\"#");
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder2.build();
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject1).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject1).has(anyString());
      Long long1 = new Long(1L);
      audioAnalysisMeta_Builder3.setTimestamp(long1);
      AudioAnalysisMeta audioAnalysisMeta2 = audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject1);
      audioAnalysisMeta_Builder3.setInputProcess("com.wrapper.spotify.model_objects.specification.PagingCursorbased$Builder");
      audioAnalysisMeta2.getInputProcess();
      audioAnalysisMeta_Builder1.setPlatform((String) null);
      audioAnalysisMeta0.getAnalyzerVersion();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder2.setDetailedStatus("zt(JQ&");
      audioAnalysisMeta0.getInputProcess();
      audioAnalysisMeta0.getPlatform();
      audioAnalysisMeta1.builder();
      Integer integer0 = new Integer(0);
      audioAnalysisMeta_Builder4.setStatusCode(integer0);
      audioAnalysisMeta1.getPlatform();
      audioAnalysisMeta2.getStatusCode();
      Long long2 = audioAnalysisMeta1.getTimestamp();
      assertEquals((-1166L), (long)long2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setDetailedStatus("next");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder0.setInputProcess("next");
      Long long0 = new Long(1L);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder1.setTimestamp(long0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setPlatform((String) null);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder5 = audioAnalysisMeta_Builder4.setInputProcess((String) null);
      audioAnalysisMeta_Builder5.setTimestamp(long0);
      Float float0 = new Float((double) 0);
      audioAnalysisMeta_Builder3.setAnalysisTime(float0);
      Integer integer0 = new Integer(0);
      audioAnalysisMeta_Builder5.setAnalyzerVersion("com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisMeta$Builder");
      audioAnalysisMeta_Builder5.setStatusCode(integer0);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder5.build();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder6 = audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getTimestamp();
      audioAnalysisMeta_Builder3.setDetailedStatus("next");
      audioAnalysisMeta0.getInputProcess();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getPlatform();
      audioAnalysisMeta_Builder5.setPlatform("next");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder7 = audioAnalysisMeta_Builder1.setAnalyzerVersion((String) null);
      audioAnalysisMeta0.getTimestamp();
      audioAnalysisMeta_Builder6.setStatusCode(integer0);
      audioAnalysisMeta_Builder7.build();
      audioAnalysisMeta_Builder2.setInputProcess((String) null);
      audioAnalysisMeta0.getInputProcess();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder8 = audioAnalysisMeta_Builder1.setDetailedStatus("'1Z>,xs[");
      assertFalse(audioAnalysisMeta_Builder8.equals((Object)audioAnalysisMeta_Builder6));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      Float float0 = new Float(0.0F);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setAnalysisTime(float0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setAnalyzerVersion("f1");
      Integer integer0 = new Integer((-3575));
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setStatusCode(integer0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setInputProcess("");
      Long long0 = new Long((-3575));
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder5 = audioAnalysisMeta_Builder4.setTimestamp(long0);
      Long long1 = new Long(0L);
      audioAnalysisMeta_Builder0.setTimestamp(long1);
      audioAnalysisMeta_Builder5.setDetailedStatus((String) null);
      audioAnalysisMeta_Builder2.setAnalyzerVersion("");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder2.build();
      audioAnalysisMeta0.getAnalyzerVersion();
      String string0 = audioAnalysisMeta0.getDetailedStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setDetailedStatus("q");
      Float float0 = new Float(0.0F);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setAnalysisTime(float0);
      Long long0 = new Long((-2750L));
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setTimestamp(long0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setPlatform("q");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder4.build();
      Float float1 = audioAnalysisMeta0.getAnalysisTime();
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta0.builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setInputProcess("DXlqr_u_lsg|~Ao4y7");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setDetailedStatus("");
      audioAnalysisMeta_Builder2.setPlatform((String) null);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setAnalysisTime((Float) null);
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder4.build();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder5 = audioAnalysisMeta_Builder4.setAnalyzerVersion((String) null);
      audioAnalysisMeta_Builder5.setInputProcess("DXlqr_u_lsg|~Ao4y7");
      audioAnalysisMeta_Builder0.setAnalysisTime((Float) null);
      Integer integer0 = new Integer((-2968));
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder6 = audioAnalysisMeta_Builder5.setStatusCode(integer0);
      Long long0 = new Long(0L);
      audioAnalysisMeta_Builder5.setTimestamp(long0);
      audioAnalysisMeta0.builder();
      Long long1 = new Long(0L);
      audioAnalysisMeta_Builder1.setTimestamp(long1);
      audioAnalysisMeta0.getStatusCode();
      audioAnalysisMeta_Builder6.build();
      audioAnalysisMeta1.getDetailedStatus();
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeta audioAnalysisMeta2 = audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject0);
      assertNull(audioAnalysisMeta2.getStatusCode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setPlatform((String) null);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder1.build();
      audioAnalysisMeta0.builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setDetailedStatus((String) null);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setInputProcess((String) null);
      Float float0 = new Float(1.0);
      audioAnalysisMeta_Builder3.setAnalysisTime(float0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setAnalyzerVersion("gDB?");
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder4.build();
      audioAnalysisMeta_Builder4.build();
      audioAnalysisMeta1.getAnalyzerVersion();
      audioAnalysisMeta_Builder4.setAnalyzerVersion((String) null);
      audioAnalysisMeta_Builder3.setPlatform((String) null);
      audioAnalysisMeta1.getTimestamp();
      Float float1 = new Float(0.0F);
      audioAnalysisMeta_Builder2.setAnalysisTime(float1);
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      AudioAnalysisMeta audioAnalysisMeta2 = audioAnalysisMeta_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(audioAnalysisMeta2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      Integer integer0 = new Integer((-294));
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setStatusCode(integer0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setInputProcess("?Ei{");
      audioAnalysisMeta_Builder0.setPlatform("y8A:0sfZ");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder2.build();
      audioAnalysisMeta0.getStatusCode();
      String string0 = audioAnalysisMeta0.getDetailedStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setInputProcess("");
      audioAnalysisMeta_Builder1.build();
      Long long0 = new Long(0L);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setTimestamp(long0);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder2.build();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getInputProcess();
      Integer integer0 = new Integer(0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setStatusCode(integer0);
      assertFalse(audioAnalysisMeta_Builder4.equals((Object)audioAnalysisMeta_Builder1));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setDetailedStatus("limit");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setInputProcess("limit");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder2.build();
      audioAnalysisMeta0.getAnalysisTime();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setDetailedStatus("limit");
      audioAnalysisMeta_Builder3.setPlatform(".2x1tC*b3zB[$1N3s");
      audioAnalysisMeta0.getStatusCode();
      audioAnalysisMeta_Builder3.setDetailedStatus(",N");
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder3.build();
      audioAnalysisMeta1.builder();
      String string0 = audioAnalysisMeta1.getInputProcess();
      assertEquals("limit", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setAnalyzerVersion("");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setPlatform("oK7`pR0fp");
      Float float0 = new Float(0.0F);
      audioAnalysisMeta_Builder0.setAnalyzerVersion("");
      Float float1 = new Float(1412.0F);
      Float float2 = new Float(1157.77254924227);
      audioAnalysisMeta_Builder1.setAnalysisTime(float2);
      audioAnalysisMeta_Builder0.setAnalysisTime(float1);
      audioAnalysisMeta_Builder1.setAnalysisTime(float0);
      Integer integer0 = new Integer(1512);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setStatusCode(integer0);
      audioAnalysisMeta_Builder3.setPlatform("oK7`pR0fp");
      audioAnalysisMeta_Builder2.setInputProcess("");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setInputProcess("com.wrapper.spotify.model_objects.miscellaneous.AudioAnalysisMeta$JsonUtil");
      Integer integer1 = new Integer(1512);
      audioAnalysisMeta_Builder4.setStatusCode(integer1);
      audioAnalysisMeta_Builder0.setPlatform(">V]/Q:.");
      Integer integer2 = new Integer(1);
      audioAnalysisMeta_Builder3.setStatusCode(integer2);
      Long long0 = new Long(1512);
      audioAnalysisMeta_Builder4.setTimestamp(long0);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder2.build();
      audioAnalysisMeta0.getTimestamp();
      audioAnalysisMeta0.getStatusCode();
      String string0 = audioAnalysisMeta0.getPlatform();
      assertEquals(">V]/Q:.", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      Long long0 = new Long(0);
      audioAnalysisMeta_Builder0.setTimestamp(long0);
      Integer integer0 = new Integer(0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setTimestamp(long0);
      audioAnalysisMeta_Builder0.setStatusCode(integer0);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getStatusCode();
      audioAnalysisMeta0.getInputProcess();
      audioAnalysisMeta0.getAnalysisTime();
      audioAnalysisMeta_Builder1.build();
      audioAnalysisMeta_Builder0.setAnalysisTime((Float) null);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setAnalysisTime((Float) null);
      audioAnalysisMeta0.getDetailedStatus();
      audioAnalysisMeta_Builder0.setInputProcess((String) null);
      Long long1 = new Long(0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setTimestamp(long1);
      assertSame(audioAnalysisMeta_Builder0, audioAnalysisMeta_Builder3);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setDetailedStatus("*]7Yhzm-9_;jz;b/,");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setInputProcess("*]7Yhzm-9_;jz;b/,");
      Integer integer0 = new Integer(0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setStatusCode(integer0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setAnalyzerVersion("*]7Yhzm-9_;jz;b/,");
      Float float0 = new Float(1.0F);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder5 = audioAnalysisMeta_Builder4.setAnalysisTime(float0);
      audioAnalysisMeta_Builder5.setInputProcess("");
      audioAnalysisMeta_Builder1.setStatusCode(integer0);
      Long long0 = new Long(1741L);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder6 = audioAnalysisMeta_Builder1.setTimestamp(long0);
      audioAnalysisMeta_Builder6.setInputProcess("");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      audioAnalysisMeta0.getTimestamp();
      audioAnalysisMeta_Builder6.setPlatform("");
      Float float1 = new Float(1649.76489);
      audioAnalysisMeta_Builder5.setAnalysisTime(float1);
      audioAnalysisMeta0.getAnalysisTime();
      audioAnalysisMeta0.getAnalysisTime();
      String string0 = audioAnalysisMeta0.getPlatform();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      audioAnalysisMeta_Builder0.setDetailedStatus("Not a JSON Array: ");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      audioAnalysisMeta_Builder0.setDetailedStatus("Not a JSON Array: ");
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getDetailedStatus();
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder0.build();
      assertNull(audioAnalysisMeta1.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      audioAnalysisMeta_Builder0.setStatusCode((Integer) null);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setPlatform("");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setInputProcess("#](Q");
      Long long0 = new Long(0L);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder2.setTimestamp(long0);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder3.build();
      audioAnalysisMeta0.getPlatform();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getTimestamp();
      audioAnalysisMeta0.getAnalysisTime();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder2.setAnalyzerVersion("");
      assertSame(audioAnalysisMeta_Builder4, audioAnalysisMeta_Builder3);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      audioAnalysisMeta_Builder0.setAnalyzerVersion("At=r$+):4%");
      audioAnalysisMeta_Builder0.setInputProcess("At=r$+):4%");
      audioAnalysisMeta_Builder0.setInputProcess("iS]eL-@OGtLIe");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta0.builder();
      assertFalse(audioAnalysisMeta_Builder1.equals((Object)audioAnalysisMeta_Builder0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setStatusCode((Integer) null);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder1.build();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getStatusCode();
      audioAnalysisMeta0.getStatusCode();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getTimestamp();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta_Builder1.setStatusCode((Integer) null);
      audioAnalysisMeta0.getDetailedStatus();
      audioAnalysisMeta_Builder2.setAnalyzerVersion((String) null);
      Float float0 = new Float(728.454F);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder4 = audioAnalysisMeta_Builder3.setAnalysisTime(float0);
      assertSame(audioAnalysisMeta_Builder4, audioAnalysisMeta_Builder3);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      Float float0 = new Float((-1580.4266));
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setAnalysisTime(float0);
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder1.build();
      Float float1 = audioAnalysisMeta0.getAnalysisTime();
      assertEquals((-1580.4266F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject0);
      // Undeclared exception!
      try { 
        audioAnalysisMeta_JsonUtil0.createModelObjectPagingCursorbased("", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: null
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      audioAnalysisMeta_Builder0.setDetailedStatus("&");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      audioAnalysisMeta_Builder0.setAnalyzerVersion("com.google.gson.internal.bind.TypeAdapters$13");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setPlatform("Couldn't write ");
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder1.build();
      audioAnalysisMeta1.getAnalysisTime();
      audioAnalysisMeta1.builder();
      Long long0 = new Long(0L);
      audioAnalysisMeta_Builder0.setTimestamp(long0);
      audioAnalysisMeta1.builder();
      audioAnalysisMeta1.builder();
      audioAnalysisMeta1.getAnalysisTime();
      Float float0 = audioAnalysisMeta0.getAnalysisTime();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = new AudioAnalysisMeta.Builder();
      Float float0 = new Float(607.48517F);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder1 = audioAnalysisMeta_Builder0.setAnalysisTime(float0);
      audioAnalysisMeta_Builder1.setInputProcess("Not a JSON Primitive: ");
      audioAnalysisMeta_Builder1.setPlatform("Not a JSON Primitive: ");
      Float float1 = new Float(4210.939);
      audioAnalysisMeta_Builder1.setAnalysisTime(float1);
      Long long0 = new Long(0L);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder2 = audioAnalysisMeta_Builder1.setTimestamp(long0);
      audioAnalysisMeta_Builder2.setDetailedStatus("~7\"R4vtI>");
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_Builder0.build();
      audioAnalysisMeta0.getStatusCode();
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder3 = audioAnalysisMeta0.builder();
      Integer integer0 = new Integer(0);
      audioAnalysisMeta_Builder0.setStatusCode(integer0);
      AudioAnalysisMeta audioAnalysisMeta1 = audioAnalysisMeta_Builder0.build();
      audioAnalysisMeta1.getPlatform();
      audioAnalysisMeta0.getStatusCode();
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      audioAnalysisMeta_JsonUtil0.createModelObject((JsonObject) null);
      audioAnalysisMeta1.getTimestamp();
      AudioAnalysisMeta audioAnalysisMeta2 = audioAnalysisMeta_Builder3.build();
      String string0 = audioAnalysisMeta2.getPlatform();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      Integer integer0 = new Integer(0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject0);
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject1).has(anyString());
      audioAnalysisMeta0.builder();
      audioAnalysisMeta_JsonUtil0.hasAndNotNull(jsonObject1, "U-Do3");
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = audioAnalysisMeta0.builder();
      audioAnalysisMeta0.getInputProcess();
      Long long0 = new Long((-1506L));
      audioAnalysisMeta_Builder0.setTimestamp(long0);
      audioAnalysisMeta0.getAnalyzerVersion();
      Long long1 = new Long(0L);
      audioAnalysisMeta_Builder0.setTimestamp(long1);
      audioAnalysisMeta0.builder();
      audioAnalysisMeta_Builder0.setTimestamp(long1);
      audioAnalysisMeta0.getAnalyzerVersion();
      audioAnalysisMeta0.getPlatform();
      Long long2 = new Long(0L);
      audioAnalysisMeta_Builder0.setTimestamp(long2);
      audioAnalysisMeta0.getDetailedStatus();
      String string0 = audioAnalysisMeta0.getPlatform();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AudioAnalysisMeta.JsonUtil audioAnalysisMeta_JsonUtil0 = new AudioAnalysisMeta.JsonUtil();
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject0).has(anyString());
      AudioAnalysisMeta audioAnalysisMeta0 = audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject0);
      AudioAnalysisMeta.Builder audioAnalysisMeta_Builder0 = audioAnalysisMeta0.builder();
      audioAnalysisMeta0.builder();
      JsonObject jsonObject1 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject1).isJsonNull();
      doReturn(false, false, false, false, false).when(jsonObject1).has(anyString());
      audioAnalysisMeta_JsonUtil0.createModelObject(jsonObject1);
      audioAnalysisMeta0.builder();
      audioAnalysisMeta0.builder();
      audioAnalysisMeta_Builder0.build();
      JsonArray jsonArray0 = mock(JsonArray.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(jsonArray0).size();
      audioAnalysisMeta_JsonUtil0.createModelObjectArray(jsonArray0);
      // Undeclared exception!
      try { 
        audioAnalysisMeta_JsonUtil0.createModelObjectArray("j|", "j|");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Not a JSON Object: \"j|\"
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }
}
