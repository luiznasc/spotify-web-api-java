/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 21:36:04 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.neovisionaries.i18n.CountryCode;
import com.wrapper.spotify.enums.AlbumType;
import com.wrapper.spotify.enums.ModelObjectType;
import com.wrapper.spotify.model_objects.specification.AlbumSimplified;
import com.wrapper.spotify.model_objects.specification.ArtistSimplified;
import com.wrapper.spotify.model_objects.specification.ExternalUrl;
import com.wrapper.spotify.model_objects.specification.Image;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlbumSimplified_ESTest extends AlbumSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      albumSimplified_Builder0.setUri("1eRTe5Y;`");
      CountryCode[] countryCodeArray0 = new CountryCode[0];
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setUri("e>");
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[3];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      albumSimplified_Builder1.setUri("M\"a;F5");
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setArtists(artistSimplifiedArray0);
      AlbumType albumType0 = AlbumType.COMPILATION;
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setAlbumType(albumType0);
      albumSimplified_Builder2.setName((String) null);
      Image[] imageArray0 = new Image[2];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      imageArray0[1] = image0;
      albumSimplified_Builder4.setImages(imageArray0);
      albumSimplified_Builder1.setUri("e>");
      albumSimplified_Builder4.setName("");
      AlbumSimplified albumSimplified0 = albumSimplified_Builder4.build();
      albumSimplified0.getExternalUrls();
      albumSimplified0.builder();
      albumSimplified0.getArtists();
      albumSimplified0.getImages();
      albumSimplified0.builder();
      albumSimplified0.builder();
      albumSimplified0.getArtists();
      albumSimplified0.getName();
      albumSimplified0.builder();
      albumSimplified0.getName();
      albumSimplified0.getName();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      CountryCode[] countryCodeArray0 = new CountryCode[5];
      CountryCode countryCode0 = CountryCode.BQ;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.SE;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.TT;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.UK;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.TD;
      countryCodeArray0[4] = countryCode4;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder1);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[6];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      artistSimplifiedArray0[4] = artistSimplified0;
      artistSimplifiedArray0[5] = artistSimplified0;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertEquals(5, countryCodeArray0.length);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setExternalUrls((ExternalUrl) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertEquals(5, countryCodeArray0.length);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setHref("It");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertEquals(5, countryCodeArray0.length);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder4.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(5, countryCodeArray0.length);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified1);
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getId());
      assertEquals("It", albumSimplified1.getHref());
      assertNull(albumSimplified1.getAlbumType());
      
      String string0 = albumSimplified1.getHref();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(5, countryCodeArray0.length);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(string0);
      assertEquals("It", string0);
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getId());
      assertEquals("It", albumSimplified1.getHref());
      assertNull(albumSimplified1.getAlbumType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      CountryCode[] countryCodeArray0 = new CountryCode[5];
      AlbumSimplified albumSimplified0 = albumSimplified_Builder0.build();
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      CountryCode countryCode0 = CountryCode.AI;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.WS;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.TT;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.TV;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.AT;
      countryCodeArray0[4] = countryCode4;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder2);
      
      Image[] imageArray0 = new Image[2];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      imageArray0[1] = image0;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setImages(imageArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setType(modelObjectType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder4.setId("");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder5);
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder5.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified1);
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertEquals("", albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertEquals(ModelObjectType.TRACK, albumSimplified1.getType());
      
      String string0 = albumSimplified1.getId();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(string0);
      assertEquals("", string0);
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertEquals("", albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertEquals(ModelObjectType.TRACK, albumSimplified1.getType());
      
      String string1 = albumSimplified1.getName();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNull(string1);
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertEquals("", albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertEquals(ModelObjectType.TRACK, albumSimplified1.getType());
      
      String string2 = albumSimplified1.getUri();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNull(string2);
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertEquals("", albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertEquals(ModelObjectType.TRACK, albumSimplified1.getType());
      
      ExternalUrl externalUrl1 = albumSimplified1.getExternalUrls();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(2, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNull(externalUrl1);
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertEquals("", albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertEquals(ModelObjectType.TRACK, albumSimplified1.getType());
      
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      
      AlbumSimplified albumSimplified2 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotSame(albumSimplified2, albumSimplified1);
      assertNotSame(albumSimplified2, albumSimplified0);
      assertFalse(albumSimplified2.equals((Object)albumSimplified1));
      assertFalse(albumSimplified2.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified2);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified2.getName());
      assertNull(albumSimplified2.getType());
      assertNull(albumSimplified2.getHref());
      assertNull(albumSimplified2.getAlbumType());
      assertNull(albumSimplified2.getId());
      assertNull(albumSimplified2.getUri());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      Image[] imageArray0 = new Image[4];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      imageArray0[1] = image0;
      imageArray0[2] = image0;
      imageArray0[3] = image0;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setImages(imageArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumType albumType0 = AlbumType.COMPILATION;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified_Builder2);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[2];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder1.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertEquals(4, imageArray0.length);
      assertEquals(2, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder2.setName(":Zm1cO|XJI?ljit");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder4.setType(modelObjectType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified_Builder5);
      
      CountryCode[] countryCodeArray0 = new CountryCode[3];
      CountryCode countryCode0 = CountryCode.TD;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.ZW;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.GE;
      countryCodeArray0[2] = countryCode2;
      AlbumSimplified.Builder albumSimplified_Builder6 = albumSimplified_Builder2.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertEquals(4, imageArray0.length);
      assertEquals(3, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder6);
      
      AlbumSimplified.Builder albumSimplified_Builder7 = albumSimplified_Builder4.setId(":Zm1cO|XJI?ljit");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified_Builder7);
      
      AlbumSimplified.Builder albumSimplified_Builder8 = albumSimplified_Builder7.setImages(imageArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified_Builder8);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder2.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertEquals(4, imageArray0.length);
      assertNotNull(albumSimplified0);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertEquals(ModelObjectType.USER, albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getId());
      
      String string0 = albumSimplified0.getHref();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertEquals(4, imageArray0.length);
      assertNull(string0);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertEquals(ModelObjectType.USER, albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getId());
      
      String string1 = albumSimplified0.getId();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertEquals(4, imageArray0.length);
      assertNotNull(string1);
      assertEquals(":Zm1cO|XJI?ljit", string1);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertEquals(ModelObjectType.USER, albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getId());
      
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      
      AlbumSimplified albumSimplified1 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      
      String string2 = albumSimplified0.getName();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertTrue(string2.equals((Object)string1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertEquals(4, imageArray0.length);
      assertNotNull(string2);
      assertEquals(":Zm1cO|XJI?ljit", string2);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertEquals(ModelObjectType.USER, albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getId());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertEquals(4, imageArray0.length);
      assertNull(externalUrl0);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertEquals(ModelObjectType.USER, albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertEquals(":Zm1cO|XJI?ljit", albumSimplified0.getId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      Image[] imageArray0 = new Image[1];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setImages(imageArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setName("href");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setUri("href");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      AlbumType albumType0 = AlbumType.APPEARS_ON;
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder4.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getType());
      assertEquals("href", albumSimplified0.getName());
      assertEquals("href", albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertEquals(AlbumType.APPEARS_ON, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      String string0 = albumSimplified0.getName();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertEquals(1, imageArray0.length);
      assertNotNull(string0);
      assertEquals("href", string0);
      assertNull(albumSimplified0.getType());
      assertEquals("href", albumSimplified0.getName());
      assertEquals("href", albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertEquals(AlbumType.APPEARS_ON, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setUri("`!;#4]_D");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setId("`!;#4]_D");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotNull(albumSimplified_Builder2);
      
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setType(modelObjectType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotNull(albumSimplified_Builder3);
      
      CountryCode[] countryCodeArray0 = new CountryCode[5];
      CountryCode countryCode0 = CountryCode.MZ;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.BA;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.CO;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.PY;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.KN;
      countryCodeArray0[4] = countryCode4;
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder4.build();
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified0);
      assertEquals("`!;#4]_D", albumSimplified0.getUri());
      assertEquals("`!;#4]_D", albumSimplified0.getId());
      assertEquals(ModelObjectType.TRACK, albumSimplified0.getType());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      String string0 = albumSimplified0.getUri();
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(string0);
      assertEquals("`!;#4]_D", string0);
      assertEquals("`!;#4]_D", albumSimplified0.getUri());
      assertEquals("`!;#4]_D", albumSimplified0.getId());
      assertEquals(ModelObjectType.TRACK, albumSimplified0.getType());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setUri("BwkY2#?");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[9];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      artistSimplifiedArray0[4] = artistSimplified0;
      artistSimplifiedArray0[5] = artistSimplified0;
      artistSimplifiedArray0[6] = artistSimplified0;
      artistSimplifiedArray0[7] = artistSimplified0;
      artistSimplifiedArray0[8] = artistSimplified0;
      Image[] imageArray0 = new Image[2];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      imageArray0[1] = image0;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setImages(imageArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertEquals(2, imageArray0.length);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder0.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setId("Chad");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumType albumType0 = AlbumType.SINGLE;
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder3.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertEquals(9, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder5);
      
      AlbumSimplified.Builder albumSimplified_Builder6 = albumSimplified_Builder1.setHref("e%q");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotNull(albumSimplified_Builder6);
      
      CountryCode[] countryCodeArray0 = new CountryCode[0];
      AlbumSimplified.Builder albumSimplified_Builder7 = albumSimplified_Builder6.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertEquals(0, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder7);
      
      AlbumType albumType1 = AlbumType.COMPILATION;
      AlbumSimplified.Builder albumSimplified_Builder8 = albumSimplified_Builder3.setAlbumType(albumType1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertNotSame(albumType1, albumType0);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder7);
      assertFalse(albumType1.equals((Object)albumType0));
      assertEquals(9, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder8);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder6.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotNull(albumSimplified0);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals("e%q", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertEquals("Chad", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertEquals("BwkY2#?", albumSimplified0.getUri());
      
      CountryCode[] countryCodeArray1 = albumSimplified0.getAvailableMarkets();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertSame(countryCodeArray1, countryCodeArray0);
      assertEquals(0, countryCodeArray1.length);
      assertNotNull(countryCodeArray1);
      assertEquals(AlbumType.COMPILATION, albumSimplified0.getAlbumType());
      assertEquals("e%q", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertEquals("Chad", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertEquals("BwkY2#?", albumSimplified0.getUri());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumType albumType0 = AlbumType.ALBUM;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setHref("9(<kck/GbxW,3");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotNull(albumSimplified_Builder2);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[3];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertEquals(3, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      Image[] imageArray0 = new Image[1];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setImages(imageArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      CountryCode[] countryCodeArray0 = new CountryCode[5];
      Image[] imageArray1 = new Image[3];
      assertFalse(imageArray1.equals((Object)imageArray0));
      
      imageArray1[0] = image0;
      imageArray1[1] = image0;
      imageArray1[2] = image0;
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder0.setImages(imageArray1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertNotSame(imageArray1, imageArray0);
      assertFalse(imageArray1.equals((Object)imageArray0));
      assertEquals(3, imageArray1.length);
      assertNotNull(albumSimplified_Builder5);
      
      CountryCode countryCode0 = CountryCode.IM;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.TV;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.SF;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.SB;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.BR;
      countryCodeArray0[4] = countryCode4;
      AlbumSimplified.Builder albumSimplified_Builder6 = albumSimplified_Builder4.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertNotSame(imageArray0, imageArray1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder6);
      
      AlbumSimplified.Builder albumSimplified_Builder7 = albumSimplified_Builder6.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertEquals(5, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder7);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder4.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertEquals(AlbumType.ALBUM, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("9(<kck/GbxW,3", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder8 = albumSimplified0.builder();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder0));
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertNotNull(albumSimplified_Builder8);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertEquals(AlbumType.ALBUM, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("9(<kck/GbxW,3", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      Image[] imageArray2 = albumSimplified0.getImages();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(imageArray2, imageArray0);
      assertSame(imageArray2, imageArray1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray2);
      assertNotSame(imageArray0, imageArray1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder8));
      assertFalse(imageArray2.equals((Object)imageArray0));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder8));
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder8));
      assertEquals(3, imageArray2.length);
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertNotNull(imageArray2);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertEquals(AlbumType.ALBUM, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("9(<kck/GbxW,3", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      AlbumType albumType1 = albumSimplified0.getAlbumType();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumType1, albumType0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray2);
      assertNotSame(imageArray0, imageArray1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder8));
      assertFalse(imageArray0.equals((Object)imageArray2));
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder8));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertEquals(AlbumType.ALBUM, albumType1);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertEquals(AlbumType.ALBUM, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("9(<kck/GbxW,3", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertEquals("album", albumType1.getType());
      
      String string0 = albumSimplified0.getId();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray2);
      assertNotSame(imageArray0, imageArray1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder8));
      assertFalse(imageArray0.equals((Object)imageArray2));
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder8));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(1, imageArray0.length);
      assertNull(string0);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertEquals(AlbumType.ALBUM, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("9(<kck/GbxW,3", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      
      ArtistSimplified[] artistSimplifiedArray1 = albumSimplified0.getArtists();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(artistSimplifiedArray0, artistSimplifiedArray1);
      assertSame(artistSimplifiedArray1, artistSimplifiedArray0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(imageArray0, imageArray2);
      assertNotSame(imageArray0, imageArray1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder8));
      assertFalse(imageArray0.equals((Object)imageArray2));
      assertFalse(imageArray0.equals((Object)imageArray1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder8));
      assertEquals(3, artistSimplifiedArray0.length);
      assertEquals(3, artistSimplifiedArray1.length);
      assertEquals(1, imageArray0.length);
      assertNotNull(artistSimplifiedArray1);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertEquals(AlbumType.ALBUM, albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("9(<kck/GbxW,3", albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      ModelObjectType modelObjectType0 = ModelObjectType.ARTIST;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setType(modelObjectType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotNull(albumSimplified_Builder2);
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[6];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      artistSimplifiedArray0[2] = artistSimplified0;
      artistSimplifiedArray0[3] = artistSimplified0;
      artistSimplifiedArray0[4] = artistSimplified0;
      artistSimplifiedArray0[5] = artistSimplified0;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setName("HtB_[!w@");
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder4.build();
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified1);
      assertEquals("HtB_[!w@", albumSimplified1.getName());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertEquals(ModelObjectType.ARTIST, albumSimplified1.getType());
      
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified1.builder();
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder1));
      assertEquals(6, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder5);
      assertEquals("HtB_[!w@", albumSimplified1.getName());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertEquals(ModelObjectType.ARTIST, albumSimplified1.getType());
      
      ModelObjectType modelObjectType1 = albumSimplified1.getType();
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(modelObjectType0, modelObjectType1);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder5));
      assertEquals(6, artistSimplifiedArray0.length);
      assertEquals(ModelObjectType.ARTIST, modelObjectType1);
      assertEquals("HtB_[!w@", albumSimplified1.getName());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertEquals(ModelObjectType.ARTIST, albumSimplified1.getType());
      assertEquals("artist", modelObjectType1.getType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder0.build();
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      String string0 = albumSimplified0.getName();
      assertNull(string0);
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      
      JsonObject jsonObject1 = jsonObject0.getAsJsonObject((String) null);
      assertNull(jsonObject1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      
      JsonObject jsonObject2 = jsonObject0.deepCopy();
      assertNotSame(jsonObject0, jsonObject2);
      assertNotSame(jsonObject2, jsonObject0);
      assertTrue(jsonObject2.equals((Object)jsonObject0));
      assertNotNull(jsonObject2);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject2.isJsonPrimitive());
      assertFalse(jsonObject2.isJsonNull());
      assertTrue(jsonObject2.isJsonObject());
      assertFalse(jsonObject2.isJsonArray());
      
      jsonObject2.add("\"~K_VACY\"G@hG\"YMn", (JsonElement) null);
      assertNotSame(jsonObject0, jsonObject2);
      assertNotSame(jsonObject2, jsonObject0);
      assertFalse(jsonObject0.equals((Object)jsonObject2));
      assertFalse(jsonObject2.equals((Object)jsonObject0));
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject2.isJsonPrimitive());
      assertFalse(jsonObject2.isJsonNull());
      assertTrue(jsonObject2.isJsonObject());
      assertFalse(jsonObject2.isJsonArray());
      
      // Undeclared exception!
      try { 
        jsonObject2.getAsInt();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // JsonObject
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotNull(albumSimplified_Builder0);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      AlbumType albumType0 = AlbumType.SINGLE;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      CountryCode[] countryCodeArray0 = new CountryCode[9];
      CountryCode countryCode0 = CountryCode.ET;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.TM;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.DE;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.NU;
      countryCodeArray0[3] = countryCode3;
      CountryCode countryCode4 = CountryCode.CH;
      countryCodeArray0[4] = countryCode4;
      CountryCode countryCode5 = CountryCode.TR;
      countryCodeArray0[5] = countryCode5;
      CountryCode countryCode6 = CountryCode.SM;
      countryCodeArray0[6] = countryCode6;
      CountryCode countryCode7 = CountryCode.SY;
      countryCodeArray0[7] = countryCode7;
      CountryCode countryCode8 = CountryCode.GG;
      countryCodeArray0[8] = countryCode8;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertEquals(9, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder2);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder1.build();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified1);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getHref());
      assertEquals(AlbumType.SINGLE, albumSimplified1.getAlbumType());
      
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder1.setType(modelObjectType0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertNotNull(albumSimplified_Builder3);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      AlbumType albumType1 = albumSimplified1.getAlbumType();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumType1, albumType0);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(AlbumType.SINGLE, albumType1);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getHref());
      assertEquals(AlbumType.SINGLE, albumSimplified1.getAlbumType());
      assertEquals("single", albumType1.getType());
      
      ModelObjectType modelObjectType1 = ModelObjectType.GENRE;
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder1.setType(modelObjectType1);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertNotNull(albumSimplified_Builder4);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      String string0 = albumSimplified0.getId();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertNull(string0);
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(albumSimplified0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder0.build();
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      CountryCode[] countryCodeArray0 = new CountryCode[1];
      CountryCode countryCode0 = CountryCode.SX;
      countryCodeArray0[0] = countryCode0;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified0.builder();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder1);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder1));
      assertEquals(1, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified0.builder();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder3);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified0.builder();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder3));
      assertNotNull(albumSimplified_Builder4);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      Image[] imageArray0 = albumSimplified0.getImages();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertNull(imageArray0);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      CountryCode[] countryCodeArray1 = new CountryCode[7];
      assertFalse(countryCodeArray1.equals((Object)countryCodeArray0));
      
      countryCodeArray1[0] = countryCode0;
      countryCodeArray1[1] = countryCode0;
      countryCodeArray1[2] = countryCode0;
      countryCodeArray1[3] = countryCode0;
      countryCodeArray1[4] = countryCode0;
      countryCodeArray1[5] = countryCode0;
      countryCodeArray1[6] = countryCode0;
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder3.setAvailableMarkets(countryCodeArray1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(countryCodeArray1, countryCodeArray0);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder0));
      assertFalse(countryCodeArray1.equals((Object)countryCodeArray0));
      assertEquals(7, countryCodeArray1.length);
      assertNotNull(albumSimplified_Builder5);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      ModelObjectType modelObjectType0 = ModelObjectType.TRACK;
      AlbumSimplified.Builder albumSimplified_Builder6 = albumSimplified_Builder3.setType(modelObjectType0);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder6);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      CountryCode[] countryCodeArray2 = albumSimplified0.getAvailableMarkets();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertNull(countryCodeArray2);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertNull(externalUrl0);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder7 = albumSimplified_Builder3.setExternalUrls((ExternalUrl) null);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder7);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNotNull(jsonObject1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject1);
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      String string0 = albumSimplified0.getUri();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNull(string0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNotNull(albumSimplified_Builder0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder0.build();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified1.builder();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      
      JsonArray jsonArray0 = jsonObject0.getAsJsonArray((String) null);
      assertNotSame(jsonObject0, jsonObject1);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertNull(jsonArray0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder0.setType(modelObjectType0);
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder1));
      assertNotNull(albumSimplified_Builder2);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      ExternalUrl externalUrl0 = albumSimplified1.getExternalUrls();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNull(externalUrl0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertNotNull(albumSimplified_Builder3);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      String string1 = albumSimplified1.getId();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNull(string1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      
      AlbumSimplified albumSimplified2 = albumSimplified_Builder0.build();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified2, albumSimplified0);
      assertNotSame(albumSimplified2, albumSimplified1);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified2.equals((Object)albumSimplified0));
      assertFalse(albumSimplified2.equals((Object)albumSimplified1));
      assertNotNull(albumSimplified2);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified2.getName());
      assertNull(albumSimplified2.getUri());
      assertNull(albumSimplified2.getHref());
      assertNull(albumSimplified2.getId());
      assertNull(albumSimplified2.getAlbumType());
      assertEquals(ModelObjectType.USER, albumSimplified2.getType());
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified2.builder();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified2, albumSimplified0);
      assertNotSame(albumSimplified2, albumSimplified1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified2.equals((Object)albumSimplified0));
      assertFalse(albumSimplified2.equals((Object)albumSimplified1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder2));
      assertNotNull(albumSimplified_Builder4);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified2.getName());
      assertNull(albumSimplified2.getUri());
      assertNull(albumSimplified2.getHref());
      assertNull(albumSimplified2.getId());
      assertNull(albumSimplified2.getAlbumType());
      assertEquals(ModelObjectType.USER, albumSimplified2.getType());
      
      boolean boolean0 = jsonObject1.has("");
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(boolean0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified2.builder();
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified2, albumSimplified0);
      assertNotSame(albumSimplified2, albumSimplified1);
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder0));
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified2.equals((Object)albumSimplified0));
      assertFalse(albumSimplified2.equals((Object)albumSimplified1));
      assertNotNull(albumSimplified_Builder5);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified2.getName());
      assertNull(albumSimplified2.getUri());
      assertNull(albumSimplified2.getHref());
      assertNull(albumSimplified2.getId());
      assertNull(albumSimplified2.getAlbumType());
      assertEquals(ModelObjectType.USER, albumSimplified2.getType());
      
      String string2 = albumSimplified1.getId();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified2);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified2));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNull(string2);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder6 = albumSimplified0.builder();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertNotNull(albumSimplified_Builder6);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder7 = albumSimplified0.builder();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder4));
      assertNotNull(albumSimplified_Builder7);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      ExternalUrl externalUrl1 = albumSimplified0.getExternalUrls();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertNull(externalUrl1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      ArtistSimplified[] artistSimplifiedArray0 = albumSimplified0.getArtists();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertNull(artistSimplifiedArray0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      Image[] imageArray0 = albumSimplified0.getImages();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertNull(imageArray0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      ModelObjectType modelObjectType1 = ModelObjectType.TRACK;
      AlbumSimplified.Builder albumSimplified_Builder8 = albumSimplified_Builder3.setType(modelObjectType1);
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertNotSame(albumSimplified0, albumSimplified2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder8);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified0.equals((Object)albumSimplified2));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertFalse(modelObjectType1.equals((Object)modelObjectType0));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder5));
      assertNotNull(albumSimplified_Builder8);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      
      JsonObject jsonObject1 = jsonObject0.getAsJsonObject();
      assertSame(jsonObject0, jsonObject1);
      assertSame(jsonObject1, jsonObject0);
      assertNotNull(jsonObject1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertFalse(jsonObject1.isJsonNull());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject1);
      assertSame(jsonObject0, jsonObject1);
      assertSame(jsonObject1, jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertFalse(jsonObject1.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      albumSimplified0.getAlbumType();
      assertSame(jsonObject0, jsonObject1);
      assertSame(jsonObject1, jsonObject0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertFalse(jsonObject1.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumType albumType0 = AlbumType.APPEARS_ON;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setType(modelObjectType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotNull(albumSimplified_Builder2);
      
      CountryCode[] countryCodeArray0 = new CountryCode[1];
      CountryCode countryCode0 = CountryCode.HK;
      countryCodeArray0[0] = countryCode0;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertEquals(1, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder3);
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setArtists((ArtistSimplified[]) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertEquals(1, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder4);
      
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder4.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertEquals(1, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder5);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNotNull(jsonObject1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject1.isJsonObject());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject1);
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNotNull(albumSimplified0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject1.isJsonObject());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getHref());
      
      ArtistSimplified[] artistSimplifiedArray0 = albumSimplified0.getArtists();
      assertNotSame(jsonObject0, jsonObject1);
      assertNotSame(jsonObject1, jsonObject0);
      assertTrue(jsonObject0.equals((Object)jsonObject1));
      assertTrue(jsonObject1.equals((Object)jsonObject0));
      assertNull(artistSimplifiedArray0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject1.isJsonObject());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getHref());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder0.build();
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified0.builder();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder1);
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
      
      albumSimplified0.getAlbumType();
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder1));
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      
      JsonArray jsonArray0 = new JsonArray();
      assertNotNull(jsonArray0);
      assertEquals(0, jsonArray0.size());
      assertFalse(jsonArray0.isJsonPrimitive());
      assertTrue(jsonArray0.isJsonArray());
      assertFalse(jsonArray0.isJsonObject());
      assertFalse(jsonArray0.isJsonNull());
      
      Class<Object> class0 = Object.class;
      Object[] objectArray0 = albumSimplified_JsonUtil0.createModelObjectArray(jsonArray0, class0);
      assertEquals(0, objectArray0.length);
      assertNotNull(objectArray0);
      assertEquals(0, jsonArray0.size());
      assertFalse(jsonArray0.isJsonPrimitive());
      assertTrue(jsonArray0.isJsonArray());
      assertFalse(jsonArray0.isJsonObject());
      assertFalse(jsonArray0.isJsonNull());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      ModelObjectType modelObjectType0 = ModelObjectType.AUDIO_FEATURES;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setType(modelObjectType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder1.setExternalUrls((ExternalUrl) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotNull(albumSimplified_Builder3);
      
      CountryCode[] countryCodeArray0 = albumSimplified0.getAvailableMarkets();
      assertNull(countryCodeArray0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      
      CountryCode[] countryCodeArray1 = albumSimplified0.getAvailableMarkets();
      assertNull(countryCodeArray1);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotNull(albumSimplified_Builder0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setHref(">/=");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder1.build();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified1);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getId());
      assertEquals(">/=", albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getType());
      
      String string0 = albumSimplified1.getName();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNull(string0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getId());
      assertEquals(">/=", albumSimplified1.getHref());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder0.build();
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      Image[] imageArray0 = albumSimplified0.getImages();
      assertNull(imageArray0);
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setId("");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumType albumType0 = AlbumType.SINGLE;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder0.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder0.setUri("type");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertNotNull(albumSimplified_Builder3);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotNull(albumSimplified_Builder0);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setUri("taO/]zOy>;_bIbx(s");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      
      CountryCode[] countryCodeArray0 = new CountryCode[4];
      CountryCode countryCode0 = CountryCode.TF;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.SC;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.KN;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.SX;
      countryCodeArray0[3] = countryCode3;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertEquals(4, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder2);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder2.build();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(4, countryCodeArray0.length);
      assertNotNull(albumSimplified1);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getType());
      assertEquals("taO/]zOy>;_bIbx(s", albumSimplified1.getUri());
      
      albumSimplified1.getType();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(4, countryCodeArray0.length);
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getType());
      assertEquals("taO/]zOy>;_bIbx(s", albumSimplified1.getUri());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotNull(albumSimplified_Builder0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setHref("external_urls");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setArtists((ArtistSimplified[]) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder2);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      ExternalUrl externalUrl0 = albumSimplified0.getExternalUrls();
      assertNull(externalUrl0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setExternalUrls((ExternalUrl) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder3);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder3.build();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertEquals("external_urls", albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
      
      String string0 = albumSimplified1.getUri();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNull(string0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified1.getUri());
      assertNull(albumSimplified1.getName());
      assertEquals("external_urls", albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertNull(albumSimplified1.getAlbumType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotNull(albumSimplified_Builder0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      CountryCode[] countryCodeArray0 = new CountryCode[4];
      CountryCode countryCode0 = CountryCode.PN;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.HK;
      countryCodeArray0[1] = countryCode1;
      CountryCode countryCode2 = CountryCode.PK;
      countryCodeArray0[2] = countryCode2;
      CountryCode countryCode3 = CountryCode.AE;
      countryCodeArray0[3] = countryCode3;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertEquals(4, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setHref("D5T");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertEquals(4, countryCodeArray0.length);
      assertNotNull(albumSimplified_Builder2);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder2.build();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(4, countryCodeArray0.length);
      assertNotNull(albumSimplified1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getUri());
      assertEquals("D5T", albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      
      CountryCode[] countryCodeArray1 = albumSimplified1.getAvailableMarkets();
      assertSame(countryCodeArray1, countryCodeArray0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(countryCodeArray0, countryCodeArray1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(4, countryCodeArray1.length);
      assertEquals(4, countryCodeArray0.length);
      assertNotNull(countryCodeArray1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getUri());
      assertEquals("D5T", albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setName("WfE )xIWA6gcSHm.");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setUri("WfE )xIWA6gcSHm.");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder2);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder2.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNotNull(albumSimplified0);
      assertEquals("WfE )xIWA6gcSHm.", albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("WfE )xIWA6gcSHm.", albumSimplified0.getName());
      
      CountryCode[] countryCodeArray0 = albumSimplified0.getAvailableMarkets();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNull(countryCodeArray0);
      assertEquals("WfE )xIWA6gcSHm.", albumSimplified0.getUri());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getType());
      assertEquals("WfE )xIWA6gcSHm.", albumSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNotNull(albumSimplified0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      assertNotNull(albumSimplified_Builder0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      AlbumType albumType0 = AlbumType.SINGLE;
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      AlbumSimplified albumSimplified1 = albumSimplified_Builder1.build();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertNotNull(albumSimplified1);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified1.getUri());
      assertEquals(AlbumType.SINGLE, albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setType(modelObjectType0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertNotNull(albumSimplified_Builder2);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      AlbumType albumType1 = albumSimplified1.getAlbumType();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertNotSame(albumSimplified1, albumSimplified0);
      assertSame(albumType1, albumType0);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertFalse(albumSimplified1.equals((Object)albumSimplified0));
      assertEquals(AlbumType.SINGLE, albumType1);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified1.getUri());
      assertEquals(AlbumType.SINGLE, albumSimplified1.getAlbumType());
      assertNull(albumSimplified1.getName());
      assertNull(albumSimplified1.getHref());
      assertNull(albumSimplified1.getType());
      assertNull(albumSimplified1.getId());
      assertEquals("single", albumType1.getType());
      
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder1.setType(modelObjectType0);
      assertNotSame(albumSimplified0, albumSimplified1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumType0, albumType1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertNotNull(albumSimplified_Builder3);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
      
      String string0 = albumSimplified0.getId();
      assertNotSame(albumSimplified0, albumSimplified1);
      assertFalse(albumSimplified0.equals((Object)albumSimplified1));
      assertNull(string0);
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject0.isJsonArray());
      assertTrue(jsonObject0.isJsonObject());
      assertNull(albumSimplified0.getId());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      assertNull(albumSimplified0.getUri());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      assertNotNull(albumSimplified_JsonUtil0);
      
      JsonObject jsonObject0 = new JsonObject();
      assertNotNull(jsonObject0);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      
      JsonObject jsonObject1 = jsonObject0.getAsJsonObject();
      assertSame(jsonObject0, jsonObject1);
      assertSame(jsonObject1, jsonObject0);
      assertNotNull(jsonObject1);
      assertTrue(jsonObject0.isJsonObject());
      assertFalse(jsonObject0.isJsonPrimitive());
      assertFalse(jsonObject0.isJsonArray());
      assertFalse(jsonObject0.isJsonNull());
      assertFalse(jsonObject1.isJsonArray());
      assertFalse(jsonObject1.isJsonNull());
      assertFalse(jsonObject1.isJsonPrimitive());
      assertTrue(jsonObject1.isJsonObject());
      
      // Undeclared exception!
      try { 
        jsonObject1.getAsInt();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // JsonObject
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      assertNotNull(albumSimplified_Builder0);
      
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setId("name");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified_Builder1);
      
      AlbumSimplified albumSimplified0 = albumSimplified_Builder1.build();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotNull(albumSimplified0);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified0.builder();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder2);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      ModelObjectType modelObjectType0 = ModelObjectType.USER;
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setType(modelObjectType0);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder3, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder3, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder3.equals((Object)albumSimplified_Builder0));
      assertNotNull(albumSimplified_Builder3);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder2.setId("name");
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder4, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder4, albumSimplified_Builder2);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder4.equals((Object)albumSimplified_Builder1));
      assertNotNull(albumSimplified_Builder4);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[0];
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder1.setId("external_urls");
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder5, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder5, albumSimplified_Builder0);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder5.equals((Object)albumSimplified_Builder2));
      assertNotNull(albumSimplified_Builder5);
      
      ModelObjectType modelObjectType1 = ModelObjectType.PLAYLIST;
      AlbumSimplified.Builder albumSimplified_Builder6 = albumSimplified_Builder1.setType(modelObjectType1);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(modelObjectType1.equals((Object)modelObjectType0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder2));
      assertNotNull(albumSimplified_Builder6);
      
      AlbumSimplified.Builder albumSimplified_Builder7 = albumSimplified_Builder1.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder3));
      assertEquals(0, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder7);
      
      AlbumSimplified.Builder albumSimplified_Builder8 = albumSimplified_Builder7.setArtists(artistSimplifiedArray0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder7, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder7, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder8, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder8, albumSimplified_Builder3);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder7.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder8.equals((Object)albumSimplified_Builder3));
      assertEquals(0, artistSimplifiedArray0.length);
      assertNotNull(albumSimplified_Builder8);
      
      AlbumSimplified.Builder albumSimplified_Builder9 = albumSimplified0.builder();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder5);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder5));
      assertNotNull(albumSimplified_Builder9);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      ArtistSimplified[] artistSimplifiedArray1 = albumSimplified0.getArtists();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(artistSimplifiedArray1);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      String string0 = albumSimplified0.getUri();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(string0);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      String string1 = albumSimplified0.getName();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(string1);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      CountryCode[] countryCodeArray0 = albumSimplified0.getAvailableMarkets();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(countryCodeArray0);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      ArtistSimplified[] artistSimplifiedArray2 = albumSimplified0.getArtists();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(artistSimplifiedArray2);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      ArtistSimplified[] artistSimplifiedArray3 = albumSimplified0.getArtists();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(artistSimplifiedArray3);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder10 = albumSimplified_Builder6.setId((String) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder10, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder10, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder10, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder10, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder10, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder10, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder10, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder10, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder10, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder10, albumSimplified_Builder4);
      assertNotSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder10.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder10.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder10.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder10.equals((Object)albumSimplified_Builder4));
      assertFalse(modelObjectType1.equals((Object)modelObjectType0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder9));
      assertNotNull(albumSimplified_Builder10);
      
      AlbumType albumType0 = AlbumType.COMPILATION;
      AlbumSimplified.Builder albumSimplified_Builder11 = albumSimplified_Builder9.setAlbumType(albumType0);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder11, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder9, albumSimplified_Builder11);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder5));
      assertNotNull(albumSimplified_Builder11);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      Image[] imageArray0 = new Image[7];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      imageArray0[1] = image0;
      imageArray0[2] = image0;
      imageArray0[3] = image0;
      imageArray0[4] = image0;
      imageArray0[5] = image0;
      imageArray0[6] = image0;
      AlbumSimplified.Builder albumSimplified_Builder12 = albumSimplified_Builder11.setImages(imageArray0);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder12, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder12, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder12, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder11, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder11, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder11, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder9, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder9, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder9, albumSimplified_Builder11);
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder12.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder11.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder9.equals((Object)albumSimplified_Builder5));
      assertEquals(7, imageArray0.length);
      assertNotNull(albumSimplified_Builder12);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      AlbumSimplified.Builder albumSimplified_Builder13 = albumSimplified_Builder6.setAvailableMarkets((CountryCode[]) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertNotSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder12);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder11);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertFalse(modelObjectType1.equals((Object)modelObjectType0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder11));
      assertNotNull(albumSimplified_Builder13);
      
      AlbumSimplified.Builder albumSimplified_Builder14 = albumSimplified_Builder13.setAvailableMarkets((CountryCode[]) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder14);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder5);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder1);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder14);
      assertNotSame(albumSimplified_Builder13, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder13, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder14);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder14, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder14, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder14, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder14, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder14, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder14, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder14, albumSimplified_Builder6);
      assertNotSame(modelObjectType1, modelObjectType0);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder12);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder14);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder8);
      assertSame(albumSimplified_Builder6, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder6, albumSimplified_Builder11);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder13.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder14.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder14.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder14.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder14.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder14.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder14.equals((Object)albumSimplified_Builder2));
      assertFalse(modelObjectType1.equals((Object)modelObjectType0));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder6.equals((Object)albumSimplified_Builder11));
      assertNotNull(albumSimplified_Builder14);
      
      AlbumSimplified.Builder albumSimplified_Builder15 = albumSimplified_Builder2.setAvailableMarkets((CountryCode[]) null);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder15);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder14);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder15);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder14);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder15, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder15, albumSimplified_Builder2);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder14);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder15, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder15, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder15);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder9);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder0);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder14);
      assertSame(albumSimplified_Builder2, albumSimplified_Builder4);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder2, albumSimplified_Builder12);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder14));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder13));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder15.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder1));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder8));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder10));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder7));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder13));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder14));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder5));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder0));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder6));
      assertFalse(albumSimplified_Builder2.equals((Object)albumSimplified_Builder12));
      assertNotNull(albumSimplified_Builder15);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      String string2 = albumSimplified0.getName();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder15);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder14);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder15);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder14);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder15));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder15));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(string2);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
      
      ArtistSimplified[] artistSimplifiedArray4 = albumSimplified0.getArtists();
      assertSame(albumSimplified_Builder0, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder3);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder11);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder6);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder15);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder13);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder7);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder10);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder1);
      assertNotSame(albumSimplified_Builder0, albumSimplified_Builder9);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder14);
      assertSame(albumSimplified_Builder0, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder12);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder3);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder0);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder10);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder4);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder13);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder7);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder15);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder8);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder2);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder6);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder14);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder11);
      assertSame(albumSimplified_Builder1, albumSimplified_Builder5);
      assertNotSame(albumSimplified_Builder1, albumSimplified_Builder9);
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder9));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder0.equals((Object)albumSimplified_Builder15));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder12));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder3));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder15));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder2));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder4));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder11));
      assertFalse(albumSimplified_Builder1.equals((Object)albumSimplified_Builder9));
      assertNull(artistSimplifiedArray4);
      assertNull(albumSimplified0.getUri());
      assertNull(albumSimplified0.getAlbumType());
      assertNull(albumSimplified0.getHref());
      assertEquals("name", albumSimplified0.getId());
      assertNull(albumSimplified0.getType());
      assertNull(albumSimplified0.getName());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      String string0 = albumSimplified0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      Boolean.logicalAnd(false, false);
      JsonObject jsonObject1 = jsonObject0.deepCopy();
      jsonObject1.getAsJsonObject("JaO<Va");
      jsonObject1.size();
      albumSimplified_JsonUtil0.createModelObject((JsonObject) null);
      // Undeclared exception!
      try { 
        jsonObject0.getAsNumber();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // JsonObject
         //
         verifyException("com.google.gson.JsonElement", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AlbumSimplified.Builder albumSimplified_Builder0 = new AlbumSimplified.Builder();
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setName("");
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      AlbumSimplified.Builder albumSimplified_Builder2 = albumSimplified_Builder1.setType(modelObjectType0);
      AlbumSimplified.Builder albumSimplified_Builder3 = albumSimplified_Builder2.setId("");
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      albumSimplified0.getExternalUrls();
      AlbumSimplified.Builder albumSimplified_Builder4 = albumSimplified_Builder3.setExternalUrls((ExternalUrl) null);
      Image[] imageArray0 = new Image[9];
      Image image0 = mock(Image.class, new ViolatedAssumptionAnswer());
      imageArray0[0] = image0;
      imageArray0[1] = image0;
      imageArray0[2] = image0;
      imageArray0[3] = image0;
      imageArray0[4] = image0;
      ModelObjectType modelObjectType1 = ModelObjectType.AUDIO_FEATURES;
      albumSimplified_Builder3.setType(modelObjectType1);
      imageArray0[5] = image0;
      imageArray0[6] = image0;
      imageArray0[7] = image0;
      imageArray0[8] = image0;
      albumSimplified_Builder4.setImages(imageArray0);
      albumSimplified0.getHref();
      AlbumSimplified.Builder albumSimplified_Builder5 = albumSimplified_Builder3.setName("");
      assertSame(albumSimplified_Builder5, albumSimplified_Builder2);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      CountryCode[] countryCodeArray0 = new CountryCode[4];
      CountryCode countryCode0 = CountryCode.MR;
      countryCodeArray0[0] = countryCode0;
      CountryCode countryCode1 = CountryCode.VI;
      countryCodeArray0[2] = countryCode1;
      CountryCode countryCode2 = CountryCode.UM;
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[6];
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[1] = artistSimplifiedArray0[0];
      artistSimplifiedArray0[2] = artistSimplifiedArray0[1];
      artistSimplifiedArray0[3] = artistSimplifiedArray0[2];
      artistSimplifiedArray0[4] = artistSimplifiedArray0[3];
      artistSimplifiedArray0[5] = artistSimplifiedArray0[4];
      albumSimplified_Builder0.setArtists(artistSimplifiedArray0);
      countryCodeArray0[3] = countryCode2;
      albumSimplified_Builder0.setAvailableMarkets(countryCodeArray0);
      AlbumSimplified.Builder albumSimplified_Builder1 = albumSimplified_Builder0.setName("CR");
      AlbumSimplified albumSimplified1 = albumSimplified_Builder1.build();
      albumSimplified1.builder();
      albumSimplified1.getType();
      albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      AlbumSimplified albumSimplified2 = albumSimplified_Builder0.build();
      assertNull(albumSimplified2.getHref());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AlbumSimplified.JsonUtil albumSimplified_JsonUtil0 = new AlbumSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      AlbumSimplified albumSimplified0 = albumSimplified_JsonUtil0.createModelObject(jsonObject0);
      albumSimplified0.getImages();
      AlbumSimplified.Builder albumSimplified_Builder0 = albumSimplified0.builder();
      ArtistSimplified[] artistSimplifiedArray0 = new ArtistSimplified[3];
      jsonObject0.size();
      ArtistSimplified artistSimplified0 = mock(ArtistSimplified.class, new ViolatedAssumptionAnswer());
      artistSimplifiedArray0[0] = artistSimplified0;
      artistSimplifiedArray0[1] = artistSimplified0;
      albumSimplified0.builder();
      artistSimplifiedArray0[2] = artistSimplified0;
      albumSimplified_Builder0.setArtists(artistSimplifiedArray0);
      albumSimplified0.getExternalUrls();
      String string0 = albumSimplified0.getName();
      assertNull(string0);
  }
}
