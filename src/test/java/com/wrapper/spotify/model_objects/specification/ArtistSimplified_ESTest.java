/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 21:21:35 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.gson.JsonObject;
import com.wrapper.spotify.enums.ModelObjectType;
import com.wrapper.spotify.model_objects.specification.ArtistSimplified;
import com.wrapper.spotify.model_objects.specification.ExternalUrl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtistSimplified_ESTest extends ArtistSimplified_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArtistSimplified.JsonUtil artistSimplified_JsonUtil0 = new ArtistSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      ArtistSimplified artistSimplified0 = artistSimplified_JsonUtil0.createModelObject(jsonObject0);
      ArtistSimplified.Builder artistSimplified_Builder0 = artistSimplified0.builder();
      ArtistSimplified.Builder artistSimplified_Builder1 = artistSimplified_Builder0.setExternalUrls((ExternalUrl) null);
      assertSame(artistSimplified_Builder1, artistSimplified_Builder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified.Builder artistSimplified_Builder1 = artistSimplified_Builder0.setUri("name");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder1.build();
      String string0 = artistSimplified0.getUri();
      assertEquals("name", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArtistSimplified.JsonUtil artistSimplified_JsonUtil0 = new ArtistSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      ArtistSimplified artistSimplified0 = artistSimplified_JsonUtil0.createModelObject(jsonObject0);
      ArtistSimplified.Builder artistSimplified_Builder0 = artistSimplified0.builder();
      ArtistSimplified.Builder artistSimplified_Builder1 = artistSimplified_Builder0.setUri("");
      ArtistSimplified artistSimplified1 = artistSimplified_Builder1.build();
      String string0 = artistSimplified1.getUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.ARTIST;
      artistSimplified_Builder0.setType(modelObjectType0);
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      ModelObjectType modelObjectType1 = artistSimplified0.getType();
      assertSame(modelObjectType1, modelObjectType0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      artistSimplified_Builder0.setName("<");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      String string0 = artistSimplified0.getName();
      assertEquals("<", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified.Builder artistSimplified_Builder1 = artistSimplified_Builder0.setName("");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder1.build();
      String string0 = artistSimplified0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified.Builder artistSimplified_Builder1 = artistSimplified_Builder0.setId("tf<!_UQ_;?*\"p");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder1.build();
      String string0 = artistSimplified0.getId();
      assertEquals("tf<!_UQ_;?*\"p", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      artistSimplified_Builder0.setId("");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      String string0 = artistSimplified0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified.Builder artistSimplified_Builder1 = artistSimplified_Builder0.setHref("external_urls");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder1.build();
      String string0 = artistSimplified0.getHref();
      assertEquals("external_urls", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      artistSimplified_Builder0.setHref("");
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      String string0 = artistSimplified0.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArtistSimplified.JsonUtil artistSimplified_JsonUtil0 = new ArtistSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      Boolean boolean0 = Boolean.valueOf("");
      jsonObject0.addProperty("uri", boolean0);
      ArtistSimplified artistSimplified0 = artistSimplified_JsonUtil0.createModelObject(jsonObject0);
      assertNull(artistSimplified0.getType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArtistSimplified.JsonUtil artistSimplified_JsonUtil0 = new ArtistSimplified.JsonUtil();
      ArtistSimplified artistSimplified0 = artistSimplified_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(artistSimplified0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      ExternalUrl externalUrl0 = artistSimplified0.getExternalUrls();
      assertNull(externalUrl0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      String string0 = artistSimplified0.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArtistSimplified.JsonUtil artistSimplified_JsonUtil0 = new ArtistSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      ArtistSimplified artistSimplified0 = artistSimplified_JsonUtil0.createModelObject(jsonObject0);
      String string0 = artistSimplified0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      String string0 = artistSimplified0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArtistSimplified.Builder artistSimplified_Builder0 = new ArtistSimplified.Builder();
      ArtistSimplified artistSimplified0 = artistSimplified_Builder0.build();
      artistSimplified0.getType();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArtistSimplified.JsonUtil artistSimplified_JsonUtil0 = new ArtistSimplified.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      ArtistSimplified artistSimplified0 = artistSimplified_JsonUtil0.createModelObject(jsonObject0);
      String string0 = artistSimplified0.getUri();
      assertNull(string0);
  }
}
