/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:19:35 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.wrapper.spotify.model_objects.specification.Followers;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Followers_ESTest extends Followers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Integer integer0 = new Integer(0);
      Followers.Builder followers_Builder1 = followers_Builder0.setTotal(integer0);
      Followers followers0 = followers_Builder1.build();
      Integer integer1 = followers0.getTotal();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Integer integer0 = new Integer((-954));
      followers_Builder0.setTotal(integer0);
      Followers followers0 = followers_Builder0.build();
      Integer integer1 = followers0.getTotal();
      assertEquals((-954), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Integer integer0 = new Integer(1195);
      Followers.Builder followers_Builder1 = followers_Builder0.setTotal(integer0);
      Followers followers0 = followers_Builder1.build();
      Integer integer1 = followers0.getTotal();
      assertEquals(1195, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Followers.Builder followers_Builder1 = followers_Builder0.setHref("com.wrapper.spotify.model_objects.specification.Followers$Builder");
      Followers followers0 = followers_Builder1.build();
      String string0 = followers0.getHref();
      assertEquals("com.wrapper.spotify.model_objects.specification.Followers$Builder", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Followers.Builder followers_Builder1 = followers_Builder0.setHref("");
      Followers followers0 = followers_Builder1.build();
      String string0 = followers0.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Followers.JsonUtil followers_JsonUtil0 = new Followers.JsonUtil();
      JsonElement jsonElement0 = mock(JsonElement.class, new ViolatedAssumptionAnswer());
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false).when(jsonObject0).has(anyString());
      followers_JsonUtil0.createModelObject(jsonObject0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Followers.JsonUtil followers_JsonUtil0 = new Followers.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(jsonObject0).isJsonNull();
      Followers followers0 = followers_JsonUtil0.createModelObject(jsonObject0);
      assertNull(followers0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Followers.JsonUtil followers_JsonUtil0 = new Followers.JsonUtil();
      JsonObject jsonObject0 = mock(JsonObject.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(jsonObject0).isJsonNull();
      doReturn(false, false).when(jsonObject0).has(anyString());
      Followers followers0 = followers_JsonUtil0.createModelObject(jsonObject0);
      assertNull(followers0.getTotal());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Followers.JsonUtil followers_JsonUtil0 = new Followers.JsonUtil();
      Followers followers0 = followers_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(followers0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Followers followers0 = followers_Builder0.build();
      String string0 = followers0.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Followers followers0 = followers_Builder0.build();
      Followers.Builder followers_Builder1 = followers0.builder();
      assertNotSame(followers_Builder0, followers_Builder1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Followers.Builder followers_Builder0 = new Followers.Builder();
      Followers followers0 = followers_Builder0.build();
      Integer integer0 = followers0.getTotal();
      assertNull(integer0);
  }
}
