/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:17:51 GMT 2019
 */

package com.wrapper.spotify.model_objects.specification;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.gson.JsonObject;
import com.wrapper.spotify.enums.ModelObjectType;
import com.wrapper.spotify.model_objects.specification.ExternalUrl;
import com.wrapper.spotify.model_objects.specification.TrackLink;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TrackLink_ESTest extends TrackLink_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink.Builder trackLink_Builder1 = trackLink_Builder0.setExternalUrls((ExternalUrl) null);
      assertSame(trackLink_Builder0, trackLink_Builder1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink.Builder trackLink_Builder1 = trackLink_Builder0.setUri("-JbgS~;zeVz~");
      TrackLink trackLink0 = trackLink_Builder1.build();
      String string0 = trackLink0.getUri();
      assertEquals("-JbgS~;zeVz~", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      trackLink_Builder0.setUri("");
      TrackLink trackLink0 = trackLink_Builder0.build();
      String string0 = trackLink0.getUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      ModelObjectType modelObjectType0 = ModelObjectType.GENRE;
      trackLink_Builder0.setType(modelObjectType0);
      TrackLink trackLink0 = trackLink_Builder0.build();
      ModelObjectType modelObjectType1 = trackLink0.getType();
      assertSame(modelObjectType1, modelObjectType0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      trackLink_Builder0.setId("");
      TrackLink trackLink0 = trackLink_Builder0.build();
      String string0 = trackLink0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink.Builder trackLink_Builder1 = trackLink_Builder0.setHref("com.wrapper.spotify.model_objects.specification.TrackLink$Builder");
      TrackLink trackLink0 = trackLink_Builder1.build();
      String string0 = trackLink0.getHref();
      assertEquals("com.wrapper.spotify.model_objects.specification.TrackLink$Builder", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink.Builder trackLink_Builder1 = trackLink_Builder0.setHref("");
      TrackLink trackLink0 = trackLink_Builder1.build();
      String string0 = trackLink0.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TrackLink.JsonUtil trackLink_JsonUtil0 = new TrackLink.JsonUtil();
      TrackLink trackLink0 = trackLink_JsonUtil0.createModelObject((JsonObject) null);
      assertNull(trackLink0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink trackLink0 = trackLink_Builder0.build();
      ExternalUrl externalUrl0 = trackLink0.getExternalUrls();
      assertNull(externalUrl0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink trackLink0 = trackLink_Builder0.build();
      String string0 = trackLink0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink trackLink0 = trackLink_Builder0.build();
      String string0 = trackLink0.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink trackLink0 = trackLink_Builder0.build();
      String string0 = trackLink0.getUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink trackLink0 = trackLink_Builder0.build();
      TrackLink.Builder trackLink_Builder1 = trackLink0.builder();
      assertNotSame(trackLink_Builder0, trackLink_Builder1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TrackLink.Builder trackLink_Builder0 = new TrackLink.Builder();
      TrackLink trackLink0 = trackLink_Builder0.build();
      trackLink0.getType();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TrackLink.JsonUtil trackLink_JsonUtil0 = new TrackLink.JsonUtil();
      JsonObject jsonObject0 = new JsonObject();
      TrackLink trackLink0 = trackLink_JsonUtil0.createModelObject(jsonObject0);
      TrackLink.Builder trackLink_Builder0 = trackLink0.builder();
      TrackLink.Builder trackLink_Builder1 = trackLink_Builder0.setId("com.wrapper.spotify.model_objects.specification.TrackLink$JsonUtil");
      TrackLink trackLink1 = trackLink_Builder1.build();
      String string0 = trackLink1.getId();
      assertEquals("com.wrapper.spotify.model_objects.specification.TrackLink$JsonUtil", string0);
  }
}
