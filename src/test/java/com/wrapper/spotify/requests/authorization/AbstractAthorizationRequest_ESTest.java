/*
 * This file was automatically generated by EvoSuite
 * Sat May 25 22:31:13 GMT 2019
 */

package com.wrapper.spotify.requests.authorization;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.wrapper.spotify.requests.authorization.client_credentials.ClientCredentialsRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractAthorizationRequest_ESTest extends AbstractAthorizationRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClientCredentialsRequest.Builder clientCredentialsRequest_Builder0 = null;
      try {
        clientCredentialsRequest_Builder0 = new ClientCredentialsRequest.Builder("authorization_code", "");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClientCredentialsRequest.Builder clientCredentialsRequest_Builder0 = null;
      try {
        clientCredentialsRequest_Builder0 = new ClientCredentialsRequest.Builder("", "");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClientCredentialsRequest.Builder clientCredentialsRequest_Builder0 = null;
      try {
        clientCredentialsRequest_Builder0 = new ClientCredentialsRequest.Builder("4J7E~t\"PHvgb_J{'C7", (String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClientCredentialsRequest.Builder clientCredentialsRequest_Builder0 = null;
      try {
        clientCredentialsRequest_Builder0 = new ClientCredentialsRequest.Builder((String) null, (String) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClientCredentialsRequest.Builder clientCredentialsRequest_Builder0 = new ClientCredentialsRequest.Builder("Authorization", "Authorization");
      ClientCredentialsRequest clientCredentialsRequest0 = new ClientCredentialsRequest(clientCredentialsRequest_Builder0);
  }
}
